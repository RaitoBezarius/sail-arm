theory Armv9_lemmas
  imports
    Sail.Sail2_values_lemmas
    (* Sail.Sail2_state_lemmas *)
    Sail.Add_Cancel_Distinct
    Armv9
begin

lemma registers_distinct:
  "distinct (map fst registers)"
  unfolding registers_def list.simps fst_conv
  by (distinct_string; simp)

lemma registers_eqs_setup:
  "!x : set registers. map_of registers (fst x) = Some (snd x)"
  using registers_distinct
  by simp

lemmas map_of_registers_eqs[simp] =
    registers_eqs_setup[simplified arg_cong[where f=set, OF registers_def]
        list.simps ball_simps fst_conv snd_conv]

lemmas get_regval_unfold = get_regval_def[THEN fun_cong,
    unfolded register_accessors_def mk_accessors_def fst_conv snd_conv]
lemmas set_regval_unfold = set_regval_def[THEN fun_cong,
    unfolded register_accessors_def mk_accessors_def fst_conv snd_conv]

(* abbreviation liftS ("\<lbrakk>_\<rbrakk>\<^sub>S") where "liftS \<equiv> liftState (get_regval, set_regval)" *)

lemmas register_defs = get_regval_unfold set_regval_unfold emulator_termination_opcode_ref_def
  HACTLR2_ref_def ERXSTATUS_ref_def ERXMISC3_ref_def ERXMISC7_ref_def ERXADDR2_ref_def
  ERXMISC4_ref_def ERXMISC6_ref_def ERXCTLR_ref_def ERXMISC1_ref_def ERXCTLR2_ref_def
  ERXMISC5_ref_def ERXMISC0_ref_def ERXADDR_ref_def ERXFR_ref_def ERXMISC2_ref_def ERXFR2_ref_def
  AMEVTYPER1_ref_def AMEVTYPER0_ref_def ICH_LRC_ref_def AMAIR1_NS_ref_def AMAIR1_S_ref_def
  DBGDTRTXint_ref_def HTPIDR_ref_def DBGDTRRXint_ref_def TPIDRPRW_NS_ref_def TPIDRPRW_S_ref_def
  ICC_AP0R_ref_def HAIFSR_ref_def HAMAIR1_ref_def ACTLR2_NS_ref_def ACTLR2_S_ref_def
  DBGOSECCR_ref_def PMINTENSET_ref_def CNTFRQ_ref_def HADFSR_ref_def ICH_LR_ref_def AIDR_ref_def
  ICH_AP0R_ref_def HAMAIR0_ref_def AMAIR0_NS_ref_def AMAIR0_S_ref_def ICH_AP1R_ref_def
  ICC_AP1R_NS_ref_def ICC_AP1R_S_ref_def DBGDTRRXext_ref_def DBGOSLAR_ref_def ACTLR_NS_ref_def
  ACTLR_S_ref_def DBGDTRTXext_ref_def TPIDRURO_NS_ref_def TPIDRURO_S_ref_def REVIDR_ref_def
  ADFSR_NS_ref_def ADFSR_S_ref_def ICV_AP1R_ref_def TPIDRURW_NS_ref_def TPIDRURW_S_ref_def
  ICV_AP0R_ref_def TCMTR_ref_def HACTLR_ref_def HACR_ref_def AIFSR_NS_ref_def AIFSR_S_ref_def
  BRBSRC_EL1_ref_def BRBTGT_EL1_ref_def BRBINF_EL1_ref_def ERXPFGCTL_EL1_ref_def
  ERXMISC2_EL1_ref_def ERXMISC3_EL1_ref_def ERXGSR_EL1_ref_def ERXFR_EL1_ref_def
  ERXSTATUS_EL1_ref_def ERXCTLR_EL1_ref_def ERXMISC1_EL1_ref_def ERXPFGF_EL1_ref_def
  ERXPFGCDN_EL1_ref_def ERXMISC0_EL1_ref_def ERXADDR_EL1_ref_def AMEVTYPER1_EL0_ref_def
  AMEVCNTVOFF1_EL2_ref_def AMEVCNTR0_EL0_ref_def AMEVCNTR1_ref_def AMEVCNTR0_ref_def
  AMEVCNTVOFF0_EL2_ref_def AMEVCNTR1_EL0_ref_def CNTV_CVAL_ref_def CNTVOFF_ref_def
  SPMACCESSR_EL3_ref_def AMAIR2_EL1_ref_def AFSR0_EL2_ref_def ICV_AP1R_EL1_ref_def AFSR1_EL3_ref_def
  AMAIR2_EL3_ref_def HACR_EL2_ref_def RNDR_ref_def SMPRIMAP_EL2_ref_def RNDRRS_ref_def
  TPIDR_EL0_ref_def SCXTNUM_EL3_ref_def TPIDR2_EL0_ref_def SCXTNUM_EL0_ref_def AMAIR_EL1_ref_def
  TPIDRRO_EL0_ref_def SCXTNUM_EL1_ref_def AMAIR_EL3_ref_def AMAIR_EL2_ref_def ACTLR_EL3_ref_def
  TPIDR_EL3_ref_def PMIAR_EL1_ref_def SCXTNUM_EL2_ref_def PMICNTSVR_EL1_ref_def
  SPMACCESSR_EL2_ref_def AFSR0_EL1_ref_def AFSR1_EL2_ref_def AFSR0_EL3_ref_def ICV_AP0R_EL1_ref_def
  AMAIR2_EL2_ref_def PMCCNTSVR_EL1_ref_def AFSR1_EL1_ref_def ICC_AP1R_EL1_NS_ref_def
  ICC_AP1R_EL1_S_ref_def ACTLR_EL1_ref_def TPIDR_EL1_ref_def ICH_AP0R_EL2_ref_def
  PMEVCNTSVR_EL1_ref_def ICH_AP1R_EL2_ref_def SPMACCESSR_EL1_ref_def ACTLR_EL2_ref_def
  TPIDR_EL2_ref_def REVIDR_EL1_ref_def AIDR_EL1_ref_def ICC_AP0R_EL1_ref_def ICH_LR_EL2_ref_def
  PMCCNTR_ref_def PMOVSSET_ref_def PMEVCNTR_ref_def DBGWVR_ref_def DBGWCR_ref_def DBGBXVR_ref_def
  DBGBVR_ref_def DBGBCR_ref_def STACK_LIMIT_ref_def STACK_BASE_ref_def HEAP_LIMIT_ref_def
  HEAP_BASE_ref_def has_spe_pseudo_cycles_ref_def SMCR_EL3_LEN_VALUE_ref_def
  CPTR_EL3_ESM_VALUE_ref_def CPTR_EL3_EZ_VALUE_ref_def ZCR_EL3_LEN_VALUE_ref_def
  CFG_RMR_AA64_ref_def DBG_ROM_ADDR_ref_def mops_forward_copy_ref_def trickbox_enabled_ref_def
  ignore_rvbar_in_aarch32_ref_def unpred_tsize_aborts_ref_def syncAbortOnDeviceWrite_ref_def
  syncAbortOnWriteNormNonCache_ref_def syncAbortOnWriteNormCache_ref_def
  syncAbortOnTTWNonCache_ref_def syncAbortOnTTWCache_ref_def syncAbortOnPrefetch_ref_def
  syncAbortOnSoWrite_ref_def syncAbortOnSoRead_ref_def syncAbortOnDeviceRead_ref_def
  syncAbortOnReadNormNonCache_ref_def syncAbortOnReadNormCache_ref_def PMUBase_ref_def
  GICITSControlBase_ref_def GICDistBase_ref_def GICCPUInterfaceBase_ref_def ExtDebugBase_ref_def
  CNTControlBase_ref_def CTIBase_ref_def DBGDTR_EL0_ref_def DACR_S_ref_def DACR_NS_ref_def
  HMAIR1_ref_def HMAIR0_ref_def MAIR1_S_ref_def MAIR1_NS_ref_def MAIR0_S_ref_def MAIR0_NS_ref_def
  BRBTGTINJ_EL1_ref_def BRBSRCINJ_EL1_ref_def SPESampleCounter_ref_def SPERecordData_ref_def
  PMSDSFR_EL1_ref_def PMBPTR_EL1_ref_def PMCCNTR_EL0_ref_def PMEVCNTR_EL0_ref_def
  rme_l0gptsz_ref_def mpam_has_altsp_ref_def mecid_width_ref_def gmid_log2_block_size_ref_def
  dczid_log2_block_size_ref_def CNTbase_frequency_ref_def
  g1_activity_monitor_offset_implemented_ref_def g1_activity_monitor_implemented_ref_def
  ID_AA64PFR0_EL1_ref_def ID_AA64MMFR1_EL1_ref_def ID_AA64ISAR1_EL1_ref_def ID_AA64DFR1_EL1_ref_def
  ID_AA64DFR0_EL1_ref_def GICD_TYPER_ref_def supported_va_size_ref_def EDDEVARCH_ref_def
  CTIDEVARCH_ref_def CNTFID0_ref_def CFG_MPIDR_ref_def AMIIDR_ref_def AMEVTYPER0_EL0_ref_def
  AMDEVARCH_ref_def SPMSELR_EL0_ref_def SMPRI_EL1_ref_def SMIDR_EL1_ref_def PMZR_EL0_ref_def
  PMXEVCNTR_EL0_ref_def PMUACR_EL1_ref_def PMSSCR_EL1_ref_def PMSNEVFR_EL1_ref_def
  PMSLATFR_EL1_ref_def PMSIRR_EL1_ref_def PMSICR_EL1_ref_def PMSFCR_EL1_ref_def PMSEVFR_EL1_ref_def
  PMMIR_EL1_ref_def PMECR_EL1_ref_def PMBIDR_EL1_ref_def PAR_EL1_ref_def OSLAR_EL1_ref_def
  OSDTRTX_EL1_ref_def OSDTRRX_EL1_ref_def MECIDR_EL2_ref_def MDSELR_EL1_ref_def LORSA_EL1_ref_def
  LORN_EL1_ref_def LORID_EL1_ref_def LOREA_EL1_ref_def LORC_EL1_ref_def ID_AA64ZFR0_EL1_ref_def
  ID_AA64SMFR0_EL1_ref_def ID_AA64PFR2_EL1_ref_def ID_AA64PFR1_EL1_ref_def ID_AA64MMFR4_EL1_ref_def
  ID_AA64MMFR3_EL1_ref_def ID_AA64MMFR2_EL1_ref_def ID_AA64MMFR0_EL1_ref_def
  ID_AA64ISAR2_EL1_ref_def ID_AA64ISAR0_EL1_ref_def ID_AA64AFR1_EL1_ref_def ID_AA64AFR0_EL1_ref_def
  ICV_NMIAR1_EL1_ref_def ICC_SRE_EL3_ref_def ICC_NMIAR1_EL1_ref_def ICC_IGRPEN1_EL3_ref_def
  ICC_CTLR_EL3_ref_def HFGWTR_EL2_ref_def HFGWTR2_EL2_ref_def HFGRTR_EL2_ref_def HFGRTR2_EL2_ref_def
  HFGITR2_EL2_ref_def HDFGWTR_EL2_ref_def HDFGWTR2_EL2_ref_def HDFGRTR_EL2_ref_def
  HDFGRTR2_EL2_ref_def HAFGRTR_EL2_ref_def GMID_EL1_ref_def DCZID_EL0_ref_def DBGDTRTX_EL0_ref_def
  DBGDTRRX_EL0_ref_def DACR32_EL2_ref_def CNTV_TVAL_EL0_ref_def CNTP_TVAL_EL0_ref_def
  CNTPS_TVAL_EL1_ref_def CNTHV_TVAL_EL2_ref_def CNTHVS_TVAL_EL2_ref_def CNTHP_TVAL_EL2_ref_def
  CNTHPS_TVAL_EL2_ref_def CNTFRQ_EL0_ref_def BRBINFINJ_EL1_ref_def AMCG1IDR_EL0_ref_def
  ACCDATA_EL1_ref_def num_ctx_breakpoints_ref_def exclusive_granule_size_ref_def TLBTR_ref_def
  PMCEID3_ref_def PMCEID2_ref_def PMCEID1_ref_def PMCEID1_EL0_ref_def PMCEID0_ref_def
  PMCEID0_EL0_ref_def NMRR_S_ref_def NMRR_NS_ref_def MVFR1_ref_def MVFR1_EL1_ref_def MVFR0_ref_def
  MVFR0_EL1_ref_def MIDR_ref_def MIDR_EL1_ref_def ID_PFR1_ref_def ID_PFR1_EL1_ref_def
  ID_PFR0_ref_def ID_PFR0_EL1_ref_def ID_MMFR4_ref_def ID_MMFR4_EL1_ref_def ID_MMFR3_ref_def
  ID_MMFR3_EL1_ref_def ID_MMFR2_ref_def ID_MMFR2_EL1_ref_def ID_MMFR1_ref_def ID_MMFR1_EL1_ref_def
  ID_MMFR0_ref_def ID_MMFR0_EL1_ref_def ID_ISAR6_ref_def ID_ISAR6_EL1_ref_def ID_ISAR4_ref_def
  ID_ISAR4_EL1_ref_def ID_ISAR3_ref_def ID_ISAR3_EL1_ref_def ID_ISAR2_ref_def ID_ISAR2_EL1_ref_def
  ID_ISAR1_ref_def ID_ISAR1_EL1_ref_def ID_DFR0_ref_def ID_DFR0_EL1_ref_def FPSID_ref_def
  DBGDEVID_ref_def CLIDR_ref_def VTCR_ref_def VPIDR_ref_def VPIDR_EL2_ref_def VMPIDR_ref_def
  VMPIDR_EL2_ref_def TTBCR2_S_ref_def TTBCR2_NS_ref_def TRFCR_ref_def TRFCR_EL1_ref_def RMR_ref_def
  RMR_EL3_ref_def RMR_EL1_ref_def PRRR_S_ref_def PRRR_NS_ref_def PMVIDSR_ref_def PMVCIDSR_ref_def
  PMUSERENR_ref_def PMUSERENR_EL0_ref_def PMSWINC_ref_def PMSWINC_EL0_ref_def PMSELR_ref_def
  PMSELR_EL0_ref_def PMPIDR4_ref_def PMPIDR3_ref_def PMPIDR2_ref_def PMPIDR1_ref_def PMPIDR0_ref_def
  PMPCSR_ref_def PMPCSCTL_ref_def PMOVS_ref_def PMMIR_ref_def PMLSR_ref_def PMLAR_ref_def
  PMITCTRL_ref_def PMINTEN_ref_def PMINTENSET_EL1_ref_def PMIIDR_ref_def PMDEVTYPE_ref_def
  PMDEVID_ref_def PMCNTEN_ref_def PMCIDR3_ref_def PMCIDR2_ref_def PMCIDR1_ref_def PMCIDR0_ref_def
  PMCGCR0_ref_def PMCFGR_ref_def PMAUTHSTATUS_ref_def PAR_S_ref_def PAR_NS_ref_def MVFR2_ref_def
  MVFR2_EL1_ref_def MPIDR_ref_def MPIDR_EL1_ref_def JOSCR_ref_def JMCR_ref_def JIDR_ref_def
  ISR_ref_def ISR_EL1_ref_def ID_PFR2_ref_def ID_PFR2_EL1_ref_def ID_MMFR5_ref_def
  ID_MMFR5_EL1_ref_def ID_ISAR5_ref_def ID_ISAR5_EL1_ref_def ID_ISAR0_ref_def ID_ISAR0_EL1_ref_def
  ID_DFR1_ref_def ID_DFR1_EL1_ref_def ID_AFR0_ref_def ID_AFR0_EL1_ref_def ICV_RPR_ref_def
  ICV_RPR_EL1_ref_def ICV_PMR_ref_def ICV_PMR_EL1_ref_def ICV_IGRPEN1_ref_def
  ICV_IGRPEN1_EL1_ref_def ICV_IGRPEN0_ref_def ICV_IGRPEN0_EL1_ref_def ICV_IAR1_ref_def
  ICV_IAR1_EL1_ref_def ICV_IAR0_ref_def ICV_IAR0_EL1_ref_def ICV_HPPIR1_ref_def
  ICV_HPPIR1_EL1_ref_def ICV_HPPIR0_ref_def ICV_HPPIR0_EL1_ref_def ICV_EOIR1_ref_def
  ICV_EOIR1_EL1_ref_def ICV_EOIR0_ref_def ICV_EOIR0_EL1_ref_def ICV_DIR_ref_def ICV_DIR_EL1_ref_def
  ICV_CTLR_ref_def ICV_CTLR_EL1_ref_def ICV_BPR1_ref_def ICV_BPR1_EL1_ref_def ICV_BPR0_ref_def
  ICV_BPR0_EL1_ref_def ICH_VTR_ref_def ICH_VTR_EL2_ref_def ICH_VMCR_ref_def ICH_VMCR_EL2_ref_def
  ICH_MISR_ref_def ICH_MISR_EL2_ref_def ICH_HCR_ref_def ICH_HCR_EL2_ref_def ICH_ELRSR_ref_def
  ICH_ELRSR_EL2_ref_def ICH_EISR_ref_def ICH_EISR_EL2_ref_def ICC_SRE_S_ref_def
  ICC_SRE_EL1_S_ref_def ICC_SRE_NS_ref_def ICC_SRE_EL1_NS_ref_def ICC_SGI1R_ref_def
  ICC_SGI1R_EL1_ref_def ICC_SGI0R_ref_def ICC_SGI0R_EL1_ref_def ICC_RPR_ref_def ICC_RPR_EL1_ref_def
  ICC_PMR_ref_def ICC_MSRE_ref_def ICC_MGRPEN1_ref_def ICC_MCTLR_ref_def ICC_IGRPEN1_S_ref_def
  ICC_IGRPEN1_EL1_S_ref_def ICC_IGRPEN1_NS_ref_def ICC_IGRPEN1_EL1_NS_ref_def ICC_IGRPEN0_ref_def
  ICC_IGRPEN0_EL1_ref_def ICC_IAR1_ref_def ICC_IAR1_EL1_ref_def ICC_IAR0_ref_def
  ICC_IAR0_EL1_ref_def ICC_HSRE_ref_def ICC_SRE_EL2_ref_def ICC_HPPIR1_ref_def
  ICC_HPPIR1_EL1_ref_def ICC_HPPIR0_ref_def ICC_HPPIR0_EL1_ref_def ICC_EOIR1_ref_def
  ICC_EOIR1_EL1_ref_def ICC_EOIR0_ref_def ICC_EOIR0_EL1_ref_def ICC_DIR_ref_def ICC_DIR_EL1_ref_def
  ICC_CTLR_S_ref_def ICC_CTLR_EL1_S_ref_def ICC_CTLR_NS_ref_def ICC_CTLR_EL1_NS_ref_def
  ICC_BPR1_S_ref_def ICC_BPR1_EL1_S_ref_def ICC_BPR1_NS_ref_def ICC_BPR1_EL1_NS_ref_def
  ICC_BPR0_ref_def ICC_BPR0_EL1_ref_def ICC_ASGI1R_ref_def ICC_ASGI1R_EL1_ref_def HTRFCR_ref_def
  TRFCR_EL2_ref_def HTCR_ref_def HSTR_ref_def HSTR_EL2_ref_def HRMR_ref_def RMR_EL2_ref_def
  GITS_TYPER_ref_def GITS_STATUSR_ref_def GITS_SGIR_ref_def GITS_PARTIDR_ref_def GITS_MPIDR_ref_def
  GITS_MPAMIDR_ref_def GITS_IIDR_ref_def GITS_CWRITER_ref_def GITS_CTLR_ref_def GITS_CREADR_ref_def
  GITS_CBASER_ref_def GICV_STATUSR_ref_def GICV_RPR_ref_def GICV_PMR_ref_def GICV_IAR_ref_def
  GICV_HPPIR_ref_def GICV_EOIR_ref_def GICV_DIR_ref_def GICV_CTLR_ref_def GICV_BPR_ref_def
  GICV_AIAR_ref_def GICV_AHPPIR_ref_def GICV_AEOIR_ref_def GICV_ABPR_ref_def GICR_WAKER_ref_def
  GICR_VSGIR_ref_def GICR_VSGIPENDR_ref_def GICR_VPROPBASER_ref_def GICR_VPENDBASER_ref_def
  GICR_SYNCR_ref_def GICR_STATUSR_ref_def GICR_SETLPIR_ref_def GICR_PROPBASER_ref_def
  GICR_PENDBASER_ref_def GICR_PARTIDR_ref_def GICR_MPAMIDR_ref_def GICR_ISENABLER0_ref_def
  GICR_INVLPIR_ref_def GICR_INVALLR_ref_def GICR_INMIR0_ref_def GICR_IIDR_ref_def GICR_CTLR_ref_def
  GICR_CLRLPIR_ref_def GICM_TYPER_ref_def GICM_SETSPI_SR_ref_def GICM_SETSPI_NSR_ref_def
  GICM_IIDR_ref_def GICM_CLRSPI_SR_ref_def GICM_CLRSPI_NSR_ref_def GICH_VTR_ref_def
  GICH_VMCR_ref_def GICH_MISR_ref_def GICH_HCR_ref_def GICH_ELRSR_ref_def GICH_EISR_ref_def
  GICD_TYPER2_ref_def GICD_STATUSR_ref_def GICD_SGIR_ref_def GICD_SETSPI_SR_ref_def
  GICD_SETSPI_NSR_ref_def GICD_IIDR_ref_def GICD_CTLR_ref_def GICD_CLRSPI_SR_ref_def
  GICD_CLRSPI_NSR_ref_def GICC_STATUSR_ref_def GICC_RPR_ref_def GICC_PMR_ref_def GICC_IAR_ref_def
  GICC_HPPIR_ref_def GICC_EOIR_ref_def GICC_DIR_ref_def GICC_BPR_ref_def GICC_AIAR_ref_def
  GICC_AHPPIR_ref_def GICC_AEOIR_ref_def GICC_ABPR_ref_def FCSEIDR_ref_def ERRSELR_ref_def
  ERRSELR_EL1_ref_def ERRIDR_ref_def ERRIDR_EL1_ref_def EDVIDSR_ref_def EDRCR_ref_def EDPRSR_ref_def
  EDPRCR_ref_def EDPIDR4_ref_def EDPIDR3_ref_def EDPIDR2_ref_def EDPIDR1_ref_def EDPIDR0_ref_def
  EDPFR_ref_def EDPCSR_ref_def EDLSR_ref_def EDLAR_ref_def EDITCTRL_ref_def EDHSR_ref_def
  EDDFR1_ref_def EDDFR_ref_def EDDEVTYPE_ref_def EDDEVID2_ref_def EDDEVID1_ref_def EDDEVID_ref_def
  EDCIDR3_ref_def EDCIDR2_ref_def EDCIDR1_ref_def EDCIDR0_ref_def EDAA32PFR_ref_def DBGWFAR_ref_def
  DBGVCR_ref_def DBGVCR32_EL2_ref_def DBGDSAR_ref_def DBGDRAR_ref_def MDRAR_EL1_ref_def
  DBGDIDR_ref_def DBGDEVID2_ref_def DBGDEVID1_ref_def DBGDCCINT_ref_def MDCCINT_EL1_ref_def
  DBGCLAIMSET_ref_def DBGCLAIMSET_EL1_ref_def DBGCLAIMCLR_ref_def DBGCLAIMCLR_EL1_ref_def
  DBGAUTHSTATUS_ref_def DBGAUTHSTATUS_EL1_ref_def CTR_ref_def CTIPIDR4_ref_def CTIPIDR3_ref_def
  CTIPIDR2_ref_def CTIPIDR1_ref_def CTIPIDR0_ref_def CTILSR_ref_def CTILAR_ref_def CTIITCTRL_ref_def
  CTIDEVTYPE_ref_def CTIDEVID2_ref_def CTIDEVID1_ref_def CTIDEVID_ref_def CTIDEVCTL_ref_def
  CTICONTROL_ref_def CTICIDR3_ref_def CTICIDR2_ref_def CTICIDR1_ref_def CTICIDR0_ref_def
  CTIAUTHSTATUS_ref_def CSSELR_S_ref_def CSSELR_NS_ref_def CSSELR_EL1_ref_def CNTV_CTL_ref_def
  CNTSR_ref_def CNTNSAR_ref_def CNTID_ref_def CNTHV_CTL_ref_def CNTHVS_CTL_ref_def
  CNTHPS_CTL_ref_def CNTHCTL_ref_def CNTEL0ACR_ref_def CCSIDR_ref_def CCSIDR_EL1_ref_def
  CCSIDR2_ref_def CCSIDR2_EL1_ref_def AMUSERENR_ref_def AMUSERENR_EL0_ref_def AMPIDR4_ref_def
  AMPIDR3_ref_def AMPIDR2_ref_def AMPIDR1_ref_def AMPIDR0_ref_def AMDEVTYPE_ref_def AMCR_ref_def
  AMCR_EL0_ref_def AMCNTENSET1_ref_def AMCNTENSET1_EL0_ref_def AMCNTENSET0_ref_def
  AMCNTENSET0_EL0_ref_def AMCNTENCLR1_ref_def AMCNTENCLR1_EL0_ref_def AMCNTENCLR0_ref_def
  AMCNTENCLR0_EL0_ref_def AMCIDR3_ref_def AMCIDR2_ref_def AMCIDR1_ref_def AMCIDR0_ref_def
  AMCGCR_ref_def AMCGCR_EL0_ref_def AMCFGR_ref_def AMCFGR_EL0_ref_def RVBAR_EL3_ref_def
  RVBAR_EL2_ref_def RVBAR_EL1_ref_def VDISR_ref_def VDISR_EL2_ref_def VDFSR_ref_def
  VSESR_EL2_ref_def DISR_ref_def DISR_EL1_ref_def HFGITR_EL2_ref_def VNCR_EL2_ref_def
  RCWSMASK_EL1_ref_def RCWMASK_EL1_ref_def SPESampleCounterValid_ref_def
  SPESampleCounterPending_ref_def VMECID_A_EL2_ref_def S2POR_EL1_ref_def VSTTBR_EL2_ref_def
  VSTCR_EL2_ref_def S2PIR_EL2_ref_def MECID_RL_A_EL3_ref_def MECID_P1_EL2_ref_def
  MECID_A1_EL2_ref_def MECID_A0_EL2_ref_def VMECID_P_EL2_ref_def MECID_P0_EL2_ref_def
  POR_EL0_ref_def POR_EL3_ref_def POR_EL2_ref_def POR_EL1_ref_def EDWAR_ref_def DBGWVR_EL1_ref_def
  DBGWCR_EL1_ref_def VTTBR_EL2_ref_def VTTBR_ref_def VTCR_EL2_ref_def EDSCR2_ref_def
  DBGBVR_EL1_ref_def DBGBCR_EL1_ref_def CONTEXTIDR_EL2_ref_def TFSR_EL3_ref_def TFSR_EL2_ref_def
  TFSR_EL1_ref_def TFSRE0_EL1_ref_def RGSR_EL1_ref_def GCR_EL1_ref_def CNTKCTL_ref_def
  APGAKeyLo_EL1_ref_def APGAKeyHi_EL1_ref_def APDBKeyLo_EL1_ref_def APDBKeyHi_EL1_ref_def
  APDAKeyLo_EL1_ref_def APDAKeyHi_EL1_ref_def APIBKeyLo_EL1_ref_def APIBKeyHi_EL1_ref_def
  APIAKeyLo_EL1_ref_def APIAKeyHi_EL1_ref_def TTBR0_EL3_ref_def SCTLR2_EL3_ref_def PIR_EL3_ref_def
  MAIR_EL3_ref_def MAIR2_EL3_ref_def PIRE0_EL2_ref_def TCR2_EL2_ref_def PIR_EL2_ref_def
  MAIR_EL2_ref_def MAIR2_EL2_ref_def TCR2_EL1_ref_def PIR_EL1_ref_def PIRE0_EL1_ref_def
  MAIR_EL1_ref_def MAIR2_EL1_ref_def GICC_CTLR_ref_def tlb_enabled_ref_def GPTBR_EL3_ref_def
  GPCCR_EL3_ref_def CNTKCTL_EL1_ref_def CNTSCR_ref_def CNTCR_ref_def CNTPS_CVAL_EL1_ref_def
  CNTPS_CTL_EL1_ref_def CNTHV_CVAL_EL2_ref_def CNTHV_CTL_EL2_ref_def CNTHVS_CVAL_EL2_ref_def
  CNTHVS_CTL_EL2_ref_def CNTHPS_CVAL_EL2_ref_def CNTHPS_CTL_EL2_ref_def CNTV_CVAL_EL0_ref_def
  CNTV_CTL_EL0_ref_def CNTP_CVAL_S_ref_def CNTP_CVAL_NS_ref_def CNTP_CVAL_EL0_ref_def
  CNTP_CTL_S_ref_def CNTP_CTL_NS_ref_def CNTP_CTL_EL0_ref_def CNTHP_CVAL_ref_def
  CNTHP_CVAL_EL2_ref_def CNTHP_CTL_ref_def CNTHP_CTL_EL2_ref_def FPEXC_ref_def FPEXC32_EL2_ref_def
  SCTLR2_EL2_ref_def SCTLR2_EL1_ref_def IFAR_S_ref_def IFAR_NS_ref_def HCR2_ref_def
  DBGDSCRext_ref_def DBGDSCRint_ref_def IFSR_S_ref_def IFSR_NS_ref_def IFSR32_EL2_ref_def
  DFSR_S_ref_def DFSR_NS_ref_def DFAR_S_ref_def DFAR_NS_ref_def MVBAR_ref_def HVBAR_ref_def
  ELR_hyp_ref_def HSR_ref_def HPFAR_ref_def HIFAR_ref_def HDFAR_ref_def TTBR1_EL2_ref_def
  TTBR1_EL1_ref_def TTBR1_S_ref_def TTBR1_NS_ref_def TTBR0_EL2_ref_def HTTBR_ref_def
  TTBR0_EL1_ref_def TTBR0_S_ref_def TTBR0_NS_ref_def CONTEXTIDR_S_ref_def CONTEXTIDR_NS_ref_def
  TTBCR_S_ref_def TTBCR_NS_ref_def CONTEXTIDR_EL1_ref_def CLIDR_EL1_ref_def MPAMSM_EL1_ref_def
  MPAM0_EL1_ref_def MPAMVPM7_EL2_ref_def MPAMVPM6_EL2_ref_def MPAMVPM5_EL2_ref_def
  MPAMVPM4_EL2_ref_def MPAMVPM3_EL2_ref_def MPAMVPM2_EL2_ref_def MPAMVPM1_EL2_ref_def
  MPAMVPMV_EL2_ref_def MPAMVPM0_EL2_ref_def MPAMHCR_EL2_ref_def MPAMIDR_EL1_ref_def
  MPAM1_EL1_ref_def MPAM3_EL3_ref_def MPAM2_EL2_ref_def HCRX_EL2_ref_def GCSCRE0_EL1_ref_def
  VBAR_S_ref_def VBAR_NS_ref_def VBAR_EL3_ref_def VBAR_EL2_ref_def VBAR_EL1_ref_def EDESR_ref_def
  EDECCR_ref_def OSECCR_EL1_ref_def SPSR_und_ref_def SPSR_svc_ref_def SPSR_mon_ref_def
  SPSR_irq_ref_def SPSR_hyp_ref_def SPSR_fiq_ref_def SPSR_abt_ref_def SPSR_EL3_ref_def
  SPSR_EL2_ref_def SPSR_EL1_ref_def ELR_EL3_ref_def ELR_EL2_ref_def ELR_EL1_ref_def PFAR_EL2_ref_def
  PFAR_EL1_ref_def MFAR_EL3_ref_def HPFAR_EL2_ref_def FAR_EL3_ref_def FAR_EL2_ref_def
  FAR_EL1_ref_def ESR_EL3_ref_def ESR_EL2_ref_def ESR_EL1_ref_def SCTLR_S_ref_def SCTLR_NS_ref_def
  SCTLR_EL3_ref_def SCTLR_EL1_ref_def HSCTLR_ref_def SCTLR_EL2_ref_def HCR_ref_def DBGOSLSR_ref_def
  OSLSR_EL1_ref_def MDSCR_EL1_ref_def GCSCR_EL3_ref_def GCSCR_EL2_ref_def GCSCR_EL1_ref_def
  GIC_Pending_ref_def GIC_Active_ref_def DBGPRCR_ref_def DBGPRCR_EL1_ref_def DBGOSDLR_ref_def
  OSDLR_EL1_ref_def SP_EL3_ref_def SP_EL2_ref_def SP_EL1_ref_def SP_EL0_ref_def NSACR_ref_def
  HCPTR_ref_def CPACR_ref_def CPTR_EL3_ref_def CPTR_EL2_ref_def CPACR_EL1_ref_def GCSPR_EL3_ref_def
  GCSPR_EL2_ref_def GCSPR_EL1_ref_def GCSPR_EL0_ref_def SMCR_EL3_ref_def SMCR_EL2_ref_def
  SMCR_EL1_ref_def ZCR_EL3_ref_def ZCR_EL2_ref_def ZCR_EL1_ref_def PMBSR_EL1_ref_def
  PMBLIMITR_EL1_ref_def PMSCR_EL2_ref_def PMSCR_EL1_ref_def SPESampleAddressValid_ref_def
  SPESampleAddress_ref_def PMSIDR_EL1_ref_def Records_TGT_ref_def Records_SRC_ref_def
  Records_INF_ref_def BRBIDR0_EL1_ref_def TCR_EL3_ref_def TCR_EL2_ref_def TCR_EL1_ref_def
  DSPSR2_ref_def DSPSR_ref_def DSPSR_EL0_ref_def DLR_ref_def DLR_EL0_ref_def EDECR_ref_def
  mpam_vpmr_max_ref_def mpam_pmg_max_ref_def mpam_partid_max_ref_def mpam_has_hcr_ref_def
  impdef_TG1_ref_def impdef_TG0_ref_def CFG_RVBAR_ref_def CNTHCTL_EL2_ref_def CNTVOFF_EL2_ref_def
  CNTPOFF_EL2_ref_def BRBTS_EL1_ref_def BRBFCR_EL1_ref_def BRBCR_EL2_ref_def BRBCR_EL1_ref_def
  PMOVSSET_EL0_ref_def PMICNTR_EL0_ref_def SDER_ref_def SDER32_EL3_ref_def SDER32_EL2_ref_def
  SDCR_ref_def PMICFILTR_EL0_ref_def PMEVTYPER_ref_def PMEVTYPER_EL0_ref_def PMCNTENSET_ref_def
  PMCNTENSET_EL0_ref_def PMCCFILTR_ref_def PMCCFILTR_EL0_ref_def MDCR_EL3_ref_def PMOVSR_ref_def
  PMOVSCLR_EL0_ref_def PMINTENCLR_ref_def PMINTENCLR_EL1_ref_def PMCR_ref_def PMCR_EL0_ref_def
  PMCNTENCLR_ref_def PMCNTENCLR_EL0_ref_def EDSCR_ref_def MDCCSR_EL0_ref_def HDCR_ref_def
  MDCR_EL2_ref_def supported_pa_size_ref_def max_implemented_sveveclen_ref_def
  max_implemented_smeveclen_ref_def has_sve_extended_bf16_ref_def block_bbm_implemented_ref_def
  CTR_EL0_ref_def ERRnFR_ref_def RVBAR_ref_def FPSCR_ref_def sme_only_ref_def
  setg_mops_option_a_supported_ref_def set_mops_option_a_supported_ref_def mte_implemented_ref_def
  mpam_major_ref_def mpam_frac_ref_def isb_is_branch_ref_def has_sme_priority_control_ref_def
  feat_rpres_ref_def empam_tidr_implemented_ref_def empam_sdeflt_implemented_ref_def
  empam_force_ns_implemented_ref_def empam_force_ns_RAO_ref_def cpyf_mops_option_a_supported_ref_def
  cpy_mops_option_a_supported_ref_def apply_effective_shareability_ref_def SCR_ref_def
  SCR_EL3_ref_def HCR_EL2_ref_def Dclone_ref_def LR_mon_ref_def SP_mon_ref_def
  sp_rel_access_pc_ref_def DCACHE_CCSIDR_RESET_ref_def ICACHE_CCSIDR_RESET_ref_def
  highest_el_aarch32_ref_def ExclusiveMonitorSet_ref_def BranchTaken_ref_def Branchtypetaken_ref_def
  currentCond_ref_def ThisInstrEnc_ref_def ThisInstr_ref_def ETEBase_ref_def VLPI_base_ref_def
  SGI_base_ref_def RD_base_ref_def CNTCTLBase_ref_def CNTEL0BaseN_ref_def CNTBaseN_ref_def
  CNTReadBase_ref_def InstructionStep_ref_def RTPIDEN_ref_def RLPIDEN_ref_def SPNIDEN_ref_def
  SPIDEN_ref_def NIDEN_ref_def DBGEN_ref_def last_branch_valid_ref_def last_cycle_count_ref_def
  SPERecordSize_ref_def SPE_LFSR_initialized_ref_def SPE_LFSR_ref_def SPESampleEvents_ref_def
  SPESampleTimestampValid_ref_def SPESampleTimestamp_ref_def SPESampleSubclassValid_ref_def
  SPESampleSubclass_ref_def SPESampleClass_ref_def SPESampleOpType_ref_def
  SPESampleDataSourceValid_ref_def SPESampleDataSource_ref_def
  SPESamplePreviousBranchAddressValid_ref_def SPESamplePreviousBranchAddress_ref_def
  SPESampleInstIsNV2_ref_def SPESampleContextEL2Valid_ref_def SPESampleContextEL2_ref_def
  SPESampleContextEL1Valid_ref_def SPESampleContextEL1_ref_def SPESampleInFlight_ref_def
  TSTATE_ref_def ICC_PMR_EL1_ref_def FPSR_ref_def FPCR_ref_def ZT0_ref_def ZA_ref_def FFR_ref_def
  P_ref_def Z_ref_def BTypeCompatible_ref_def BTypeNext_ref_def InGuardedPage_ref_def RC_ref_def
  PhysicalCount_ref_def PC_ref_def R30_ref_def R29_ref_def R28_ref_def R27_ref_def R26_ref_def
  R25_ref_def R24_ref_def R23_ref_def R22_ref_def R21_ref_def R20_ref_def R19_ref_def R18_ref_def
  R17_ref_def R16_ref_def R15_ref_def R14_ref_def R13_ref_def R12_ref_def R11_ref_def R10_ref_def
  R9_ref_def R8_ref_def R7_ref_def R6_ref_def R5_ref_def R4_ref_def R3_ref_def R2_ref_def R1_ref_def
  R0_ref_def EventRegister_ref_def ShouldAdvanceSS_ref_def ShouldAdvanceIT_ref_def PSTATE_ref_def
  clock_divider_ref_def PMULastThresholdValue_ref_def PMUEventAccumulator_ref_def
  DormantCtlReg_ref_def ConfigReg_ref_def IsWFEsleep_ref_def IsWFIsleep_ref_def
  CP15SDISABLE2_ref_def CP15SDISABLE_ref_def cycle_count_ref_def trcclaim_tags_ref_def
  NUM_WATCHPOINTS_ref_def NUM_BREAKPOINTS_ref_def NUM_GIC_LIST_REGS_ref_def
  NUM_GIC_PRIORITY_BITS_ref_def NUM_GIC_PREEMPTION_BITS_ref_def NUM_BRBE_RECORDS_ref_def
  NUM_PMU_COUNTERS_ref_def NUM_AMU_CG1_MONITORS_ref_def NUM_AMU_CG0_MONITORS_ref_def
  NUM_AMU_COUNTER_GROUPS_ref_def VariantImplemented_ref_def FeatureImpl_ref_def
  v9Ap4_IMPLEMENTED_ref_def v9Ap3_IMPLEMENTED_ref_def v9Ap2_IMPLEMENTED_ref_def
  v9Ap1_IMPLEMENTED_ref_def v9Ap0_IMPLEMENTED_ref_def v8Ap9_IMPLEMENTED_ref_def
  v8Ap8_IMPLEMENTED_ref_def v8Ap7_IMPLEMENTED_ref_def v8Ap6_IMPLEMENTED_ref_def
  v8Ap5_IMPLEMENTED_ref_def v8Ap4_IMPLEMENTED_ref_def v8Ap3_IMPLEMENTED_ref_def
  v8Ap2_IMPLEMENTED_ref_def v8Ap1_IMPLEMENTED_ref_def v8Ap0_IMPLEMENTED_ref_def
  FEAT_TRBE_MPAM_IMPLEMENTED_ref_def FEAT_TRBE_EXT_IMPLEMENTED_ref_def
  FEAT_SYSREG128_IMPLEMENTED_ref_def FEAT_SYSINSTR128_IMPLEMENTED_ref_def
  FEAT_SVE_B16B16_IMPLEMENTED_ref_def FEAT_SVE2p1_IMPLEMENTED_ref_def
  FEAT_SME_F16F16_IMPLEMENTED_ref_def FEAT_SME2p1_IMPLEMENTED_ref_def FEAT_SEBEP_IMPLEMENTED_ref_def
  FEAT_LVA3_IMPLEMENTED_ref_def FEAT_LSE128_IMPLEMENTED_ref_def FEAT_ITE_IMPLEMENTED_ref_def
  FEAT_GCS_IMPLEMENTED_ref_def FEAT_ETEv1p3_IMPLEMENTED_ref_def FEAT_EBEP_IMPLEMENTED_ref_def
  FEAT_D128_IMPLEMENTED_ref_def FEAT_CHK_IMPLEMENTED_ref_def FEAT_ABLE_IMPLEMENTED_ref_def
  FEAT_SME2_IMPLEMENTED_ref_def FEAT_MEC_IMPLEMENTED_ref_def FEAT_BRBEv1p1_IMPLEMENTED_ref_def
  FEAT_SME_I16I64_IMPLEMENTED_ref_def FEAT_SME_FA64_IMPLEMENTED_ref_def
  FEAT_SME_F64F64_IMPLEMENTED_ref_def FEAT_SME_IMPLEMENTED_ref_def FEAT_RME_IMPLEMENTED_ref_def
  FEAT_ETEv1p2_IMPLEMENTED_ref_def FEAT_BRBE_IMPLEMENTED_ref_def FEAT_ETEv1p1_IMPLEMENTED_ref_def
  FEAT_TRBE_IMPLEMENTED_ref_def FEAT_TME_IMPLEMENTED_ref_def FEAT_SVE_SM4_IMPLEMENTED_ref_def
  FEAT_SVE_SHA3_IMPLEMENTED_ref_def FEAT_SVE_PMULL128_IMPLEMENTED_ref_def
  FEAT_SVE_BitPerm_IMPLEMENTED_ref_def FEAT_SVE_AES_IMPLEMENTED_ref_def
  FEAT_SVE2_IMPLEMENTED_ref_def FEAT_ETE_IMPLEMENTED_ref_def FEAT_DoPD_IMPLEMENTED_ref_def
  FEAT_THE_IMPLEMENTED_ref_def FEAT_SPMU_IMPLEMENTED_ref_def FEAT_SPEv1p4_IMPLEMENTED_ref_def
  FEAT_SPE_FDS_IMPLEMENTED_ref_def FEAT_SPE_CRR_IMPLEMENTED_ref_def
  FEAT_SPECRES2_IMPLEMENTED_ref_def FEAT_S2POE_IMPLEMENTED_ref_def FEAT_S2PIE_IMPLEMENTED_ref_def
  FEAT_S1POE_IMPLEMENTED_ref_def FEAT_S1PIE_IMPLEMENTED_ref_def FEAT_RPRFM_IMPLEMENTED_ref_def
  FEAT_RASv2_IMPLEMENTED_ref_def FEAT_RASSAv2_IMPLEMENTED_ref_def FEAT_PRFMSLC_IMPLEMENTED_ref_def
  FEAT_PMUv3p9_IMPLEMENTED_ref_def FEAT_PMUv3_SS_IMPLEMENTED_ref_def
  FEAT_PMUv3_ICNTR_IMPLEMENTED_ref_def FEAT_PMUv3_EDGE_IMPLEMENTED_ref_def
  FEAT_PFAR_IMPLEMENTED_ref_def FEAT_PCSRv8p9_IMPLEMENTED_ref_def
  FEAT_MTE_TAGGED_FAR_IMPLEMENTED_ref_def FEAT_MTE_STORE_ONLY_IMPLEMENTED_ref_def
  FEAT_MTE_PERM_IMPLEMENTED_ref_def FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED_ref_def
  FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED_ref_def FEAT_MTE_ASYNC_IMPLEMENTED_ref_def
  FEAT_MTE_ASYM_FAULT_IMPLEMENTED_ref_def FEAT_MTE4_IMPLEMENTED_ref_def
  FEAT_LRCPC3_IMPLEMENTED_ref_def FEAT_HAFT_IMPLEMENTED_ref_def FEAT_FGT2_IMPLEMENTED_ref_def
  FEAT_ECBHB_IMPLEMENTED_ref_def FEAT_DoubleFault2_IMPLEMENTED_ref_def
  FEAT_Debugv8p9_IMPLEMENTED_ref_def FEAT_CSSC_IMPLEMENTED_ref_def FEAT_CLRBHB_IMPLEMENTED_ref_def
  FEAT_ANERR_IMPLEMENTED_ref_def FEAT_AIE_IMPLEMENTED_ref_def FEAT_ADERR_IMPLEMENTED_ref_def
  FEAT_TIDCP1_IMPLEMENTED_ref_def FEAT_TCR2_IMPLEMENTED_ref_def FEAT_SPEv1p3_IMPLEMENTED_ref_def
  FEAT_SCTLR2_IMPLEMENTED_ref_def FEAT_PMUv3p8_IMPLEMENTED_ref_def FEAT_PMUv3_TH_IMPLEMENTED_ref_def
  FEAT_PMUv3_EXT64_IMPLEMENTED_ref_def FEAT_NMI_IMPLEMENTED_ref_def FEAT_MOPS_IMPLEMENTED_ref_def
  FEAT_HBC_IMPLEMENTED_ref_def FEAT_GICv3_NMI_IMPLEMENTED_ref_def FEAT_Debugv8p8_IMPLEMENTED_ref_def
  FEAT_CMOW_IMPLEMENTED_ref_def FEAT_XS_IMPLEMENTED_ref_def FEAT_WFxT_IMPLEMENTED_ref_def
  FEAT_SPEv1p2_IMPLEMENTED_ref_def FEAT_RPRES_IMPLEMENTED_ref_def FEAT_PMUv3p7_IMPLEMENTED_ref_def
  FEAT_PAN3_IMPLEMENTED_ref_def FEAT_MTE3_IMPLEMENTED_ref_def FEAT_LS64_V_IMPLEMENTED_ref_def
  FEAT_LS64_ACCDATA_IMPLEMENTED_ref_def FEAT_LS64_IMPLEMENTED_ref_def FEAT_LPA2_IMPLEMENTED_ref_def
  FEAT_HCX_IMPLEMENTED_ref_def FEAT_EBF16_IMPLEMENTED_ref_def FEAT_AFP_IMPLEMENTED_ref_def
  FEAT_TWED_IMPLEMENTED_ref_def FEAT_PAuth2_IMPLEMENTED_ref_def FEAT_MTPMU_IMPLEMENTED_ref_def
  FEAT_MPAMv1p1_IMPLEMENTED_ref_def FEAT_MPAMv0p1_IMPLEMENTED_ref_def FEAT_HPMN0_IMPLEMENTED_ref_def
  FEAT_FGT_IMPLEMENTED_ref_def FEAT_ECV_IMPLEMENTED_ref_def FEAT_DGH_IMPLEMENTED_ref_def
  FEAT_BF16_IMPLEMENTED_ref_def FEAT_AMUv1p1_IMPLEMENTED_ref_def FEAT_SSBS2_IMPLEMENTED_ref_def
  FEAT_SSBS_IMPLEMENTED_ref_def FEAT_SPECRES_IMPLEMENTED_ref_def FEAT_SB_IMPLEMENTED_ref_def
  FEAT_RNG_TRAP_IMPLEMENTED_ref_def FEAT_RNG_IMPLEMENTED_ref_def FEAT_PMUv3p5_IMPLEMENTED_ref_def
  FEAT_MTE2_IMPLEMENTED_ref_def FEAT_MTE_IMPLEMENTED_ref_def FEAT_GTG_IMPLEMENTED_ref_def
  FEAT_FlagM2_IMPLEMENTED_ref_def FEAT_FRINTTS_IMPLEMENTED_ref_def FEAT_ExS_IMPLEMENTED_ref_def
  FEAT_EVT_IMPLEMENTED_ref_def FEAT_E0PD_IMPLEMENTED_ref_def FEAT_DPB2_IMPLEMENTED_ref_def
  FEAT_CSV3_IMPLEMENTED_ref_def FEAT_CSV2_IMPLEMENTED_ref_def FEAT_BTI_IMPLEMENTED_ref_def
  FEAT_TTST_IMPLEMENTED_ref_def FEAT_TTL_IMPLEMENTED_ref_def FEAT_TRF_IMPLEMENTED_ref_def
  FEAT_TLBIRANGE_IMPLEMENTED_ref_def FEAT_TLBIOS_IMPLEMENTED_ref_def FEAT_SEL2_IMPLEMENTED_ref_def
  FEAT_S2FWB_IMPLEMENTED_ref_def FEAT_RASv1p1_IMPLEMENTED_ref_def FEAT_RASSAv1p1_IMPLEMENTED_ref_def
  FEAT_PMUv3p4_IMPLEMENTED_ref_def FEAT_NV2_IMPLEMENTED_ref_def FEAT_LSE2_IMPLEMENTED_ref_def
  FEAT_LRCPC2_IMPLEMENTED_ref_def FEAT_IDST_IMPLEMENTED_ref_def FEAT_FlagM_IMPLEMENTED_ref_def
  FEAT_FHM_IMPLEMENTED_ref_def FEAT_DoubleFault_IMPLEMENTED_ref_def FEAT_DotProd_IMPLEMENTED_ref_def
  FEAT_Debugv8p4_IMPLEMENTED_ref_def FEAT_DIT_IMPLEMENTED_ref_def FEAT_CNTSC_IMPLEMENTED_ref_def
  FEAT_BBM_IMPLEMENTED_ref_def FEAT_AMUv1_IMPLEMENTED_ref_def FEAT_SPEv1p1_IMPLEMENTED_ref_def
  FEAT_PAuth_IMPLEMENTED_ref_def FEAT_PACQARMA5_IMPLEMENTED_ref_def
  FEAT_PACQARMA3_IMPLEMENTED_ref_def FEAT_PACIMP_IMPLEMENTED_ref_def FEAT_NV_IMPLEMENTED_ref_def
  FEAT_LRCPC_IMPLEMENTED_ref_def FEAT_JSCVT_IMPLEMENTED_ref_def FEAT_FPACCOMBINE_IMPLEMENTED_ref_def
  FEAT_FPAC_IMPLEMENTED_ref_def FEAT_FCMA_IMPLEMENTED_ref_def FEAT_EPAC_IMPLEMENTED_ref_def
  FEAT_CONSTPACFIELD_IMPLEMENTED_ref_def FEAT_CCIDX_IMPLEMENTED_ref_def FEAT_XNX_IMPLEMENTED_ref_def
  FEAT_VPIPT_IMPLEMENTED_ref_def FEAT_UAO_IMPLEMENTED_ref_def FEAT_TTCNP_IMPLEMENTED_ref_def
  FEAT_SVE_IMPLEMENTED_ref_def FEAT_SPE_IMPLEMENTED_ref_def FEAT_SM4_IMPLEMENTED_ref_def
  FEAT_SM3_IMPLEMENTED_ref_def FEAT_SHA512_IMPLEMENTED_ref_def FEAT_SHA3_IMPLEMENTED_ref_def
  FEAT_RAS_IMPLEMENTED_ref_def FEAT_PCSRv8p2_IMPLEMENTED_ref_def FEAT_PAN2_IMPLEMENTED_ref_def
  FEAT_MPAM_IMPLEMENTED_ref_def FEAT_LVA_IMPLEMENTED_ref_def FEAT_LSMAOC_IMPLEMENTED_ref_def
  FEAT_LPA_IMPLEMENTED_ref_def FEAT_IESB_IMPLEMENTED_ref_def FEAT_I8MM_IMPLEMENTED_ref_def
  FEAT_HPDS2_IMPLEMENTED_ref_def FEAT_FP16_IMPLEMENTED_ref_def FEAT_F64MM_IMPLEMENTED_ref_def
  FEAT_F32MM_IMPLEMENTED_ref_def FEAT_EDHSR_IMPLEMENTED_ref_def FEAT_Debugv8p2_IMPLEMENTED_ref_def
  FEAT_DPB_IMPLEMENTED_ref_def FEAT_ASMv8p2_IMPLEMENTED_ref_def FEAT_AA32I8MM_IMPLEMENTED_ref_def
  FEAT_AA32HPD_IMPLEMENTED_ref_def FEAT_AA32BF16_IMPLEMENTED_ref_def FEAT_VMID16_IMPLEMENTED_ref_def
  FEAT_VHE_IMPLEMENTED_ref_def FEAT_RDM_IMPLEMENTED_ref_def FEAT_PMUv3p1_IMPLEMENTED_ref_def
  FEAT_PAN_IMPLEMENTED_ref_def FEAT_LSE_IMPLEMENTED_ref_def FEAT_LOR_IMPLEMENTED_ref_def
  FEAT_HPDS_IMPLEMENTED_ref_def FEAT_HAFDBS_IMPLEMENTED_ref_def FEAT_Debugv8p1_IMPLEMENTED_ref_def
  FEAT_CRC32_IMPLEMENTED_ref_def FEAT_nTLBPA_IMPLEMENTED_ref_def FEAT_TRC_SR_IMPLEMENTED_ref_def
  FEAT_TRC_EXT_IMPLEMENTED_ref_def FEAT_SHA256_IMPLEMENTED_ref_def FEAT_SHA1_IMPLEMENTED_ref_def
  FEAT_PMUv3_EXT32_IMPLEMENTED_ref_def FEAT_PMUv3_EXT_IMPLEMENTED_ref_def
  FEAT_PMUv3_IMPLEMENTED_ref_def FEAT_PMULL_IMPLEMENTED_ref_def FEAT_PCSRv8_IMPLEMENTED_ref_def
  FEAT_IVIPT_IMPLEMENTED_ref_def FEAT_GICv4p1_IMPLEMENTED_ref_def FEAT_GICv4_IMPLEMENTED_ref_def
  FEAT_GICv3p1_IMPLEMENTED_ref_def FEAT_GICv3_TDIR_IMPLEMENTED_ref_def
  FEAT_GICv3_LEGACY_IMPLEMENTED_ref_def FEAT_GICv3_IMPLEMENTED_ref_def FEAT_FP_IMPLEMENTED_ref_def
  FEAT_ETS2_IMPLEMENTED_ref_def FEAT_ETMv4p6_IMPLEMENTED_ref_def FEAT_ETMv4p5_IMPLEMENTED_ref_def
  FEAT_ETMv4p4_IMPLEMENTED_ref_def FEAT_ETMv4p3_IMPLEMENTED_ref_def FEAT_ETMv4p2_IMPLEMENTED_ref_def
  FEAT_ETMv4p1_IMPLEMENTED_ref_def FEAT_ETMv4_IMPLEMENTED_ref_def
  FEAT_DoubleLock_IMPLEMENTED_ref_def FEAT_CSV2_3_IMPLEMENTED_ref_def
  FEAT_CSV2_2_IMPLEMENTED_ref_def FEAT_CSV2_1p2_IMPLEMENTED_ref_def
  FEAT_CSV2_1p1_IMPLEMENTED_ref_def FEAT_AdvSIMD_IMPLEMENTED_ref_def FEAT_AES_IMPLEMENTED_ref_def
  FEAT_EL3_IMPLEMENTED_ref_def FEAT_EL2_IMPLEMENTED_ref_def FEAT_EL1_IMPLEMENTED_ref_def
  FEAT_EL0_IMPLEMENTED_ref_def FEAT_AA64EL3_IMPLEMENTED_ref_def FEAT_AA64EL2_IMPLEMENTED_ref_def
  FEAT_AA64EL1_IMPLEMENTED_ref_def FEAT_AA64EL0_IMPLEMENTED_ref_def FEAT_AA32EL3_IMPLEMENTED_ref_def
  FEAT_AA32EL2_IMPLEMENTED_ref_def FEAT_AA32EL1_IMPLEMENTED_ref_def FEAT_AA32EL0_IMPLEMENTED_ref_def
  SEE_ref_def

lemma bool_of_register_value_eq_Some_iff[simp]:
  "bool_of_register_value rv = Some v \<longleftrightarrow> rv = Regval_bool v"
  by (cases rv; auto)

declare register_value_of_bool_def[simp]

lemma regval_bool[simp]:
  "bool_of_register_value (register_value_of_bool v) = Some v"
  by auto

lemma int_of_register_value_eq_Some_iff[simp]:
  "int_of_register_value rv = Some v \<longleftrightarrow> rv = Regval_int v"
  by (cases rv; auto)

declare register_value_of_int_def[simp]

lemma regval_int[simp]:
  "int_of_register_value (register_value_of_int v) = Some v"
  by auto

lemma real_of_register_value_eq_Some_iff[simp]:
  "real_of_register_value rv = Some v \<longleftrightarrow> rv = Regval_real v"
  by (cases rv; auto)

declare register_value_of_real_def[simp]

lemma regval_real[simp]:
  "real_of_register_value (register_value_of_real v) = Some v"
  by auto

lemma string_of_register_value_eq_Some_iff[simp]:
  "string_of_register_value rv = Some v \<longleftrightarrow> rv = Regval_string v"
  by (cases rv; auto)

declare register_value_of_string_def[simp]

lemma regval_string[simp]:
  "string_of_register_value (register_value_of_string v) = Some v"
  by auto

lemma BranchType_of_regval_eq_Some_iff[simp]:
  "BranchType_of_regval rv = Some v \<longleftrightarrow> rv = Regval_BranchType v"
  by (cases rv; auto)

declare regval_of_BranchType_def[simp]

lemma regval_BranchType[simp]:
  "BranchType_of_regval (regval_of_BranchType v) = Some v"
  by auto

lemma InterruptID_of_regval_eq_Some_iff[simp]:
  "InterruptID_of_regval rv = Some v \<longleftrightarrow> rv = Regval_InterruptID v"
  by (cases rv; auto)

declare regval_of_InterruptID_def[simp]

lemma regval_InterruptID[simp]:
  "InterruptID_of_regval (regval_of_InterruptID v) = Some v"
  by auto

lemma OpType_of_regval_eq_Some_iff[simp]:
  "OpType_of_regval rv = Some v \<longleftrightarrow> rv = Regval_OpType v"
  by (cases rv; auto)

declare regval_of_OpType_def[simp]

lemma regval_OpType[simp]:
  "OpType_of_regval (regval_of_OpType v) = Some v"
  by auto

lemma ProcState_of_regval_eq_Some_iff[simp]:
  "ProcState_of_regval rv = Some v \<longleftrightarrow> rv = Regval_ProcState v"
  by (cases rv; auto)

declare regval_of_ProcState_def[simp]

lemma regval_ProcState[simp]:
  "ProcState_of_regval (regval_of_ProcState v) = Some v"
  by auto

lemma Signal_of_regval_eq_Some_iff[simp]:
  "Signal_of_regval rv = Some v \<longleftrightarrow> rv = Regval_Signal v"
  by (cases rv; auto)

declare regval_of_Signal_def[simp]

lemma regval_Signal[simp]:
  "Signal_of_regval (regval_of_Signal v) = Some v"
  by auto

lemma TMState_of_regval_eq_Some_iff[simp]:
  "TMState_of_regval rv = Some v \<longleftrightarrow> rv = Regval_TMState v"
  by (cases rv; auto)

declare regval_of_TMState_def[simp]

lemma regval_TMState[simp]:
  "TMState_of_regval (regval_of_TMState v) = Some v"
  by auto

lemma InstrEnc_of_regval_eq_Some_iff[simp]:
  "InstrEnc_of_regval rv = Some v \<longleftrightarrow> rv = Regval___InstrEnc v"
  by (cases rv; auto)

declare regval_of___InstrEnc_def[simp]

lemma regval___InstrEnc[simp]:
  "InstrEnc_of_regval (regval_of___InstrEnc v) = Some v"
  by auto

lemma bit_of_regval_eq_Some_iff[simp]:
  "bit_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bit v"
  by (cases rv; auto)

declare regval_of_bit_def[simp]

lemma regval_bit[simp]:
  "bit_of_regval (regval_of_bit v) = Some v"
  by auto

lemma bitvector_1_of_regval_eq_Some_iff[simp]:
  "bitvector_1_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_1 v"
  by (cases rv; auto)

declare regval_of_bitvector_1_def[simp]

lemma regval_bitvector_1[simp]:
  "bitvector_1_of_regval (regval_of_bitvector_1 v) = Some v"
  by auto

lemma bitvector_128_of_regval_eq_Some_iff[simp]:
  "bitvector_128_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_128 v"
  by (cases rv; auto)

declare regval_of_bitvector_128_def[simp]

lemma regval_bitvector_128[simp]:
  "bitvector_128_of_regval (regval_of_bitvector_128 v) = Some v"
  by auto

lemma bitvector_16_of_regval_eq_Some_iff[simp]:
  "bitvector_16_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_16 v"
  by (cases rv; auto)

declare regval_of_bitvector_16_def[simp]

lemma regval_bitvector_16[simp]:
  "bitvector_16_of_regval (regval_of_bitvector_16 v) = Some v"
  by auto

lemma bitvector_2_of_regval_eq_Some_iff[simp]:
  "bitvector_2_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_2 v"
  by (cases rv; auto)

declare regval_of_bitvector_2_def[simp]

lemma regval_bitvector_2[simp]:
  "bitvector_2_of_regval (regval_of_bitvector_2 v) = Some v"
  by auto

lemma bitvector_2048_of_regval_eq_Some_iff[simp]:
  "bitvector_2048_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_2048 v"
  by (cases rv; auto)

declare regval_of_bitvector_2048_def[simp]

lemma regval_bitvector_2048[simp]:
  "bitvector_2048_of_regval (regval_of_bitvector_2048 v) = Some v"
  by auto

lemma bitvector_24_of_regval_eq_Some_iff[simp]:
  "bitvector_24_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_24 v"
  by (cases rv; auto)

declare regval_of_bitvector_24_def[simp]

lemma regval_bitvector_24[simp]:
  "bitvector_24_of_regval (regval_of_bitvector_24 v) = Some v"
  by auto

lemma bitvector_256_of_regval_eq_Some_iff[simp]:
  "bitvector_256_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_256 v"
  by (cases rv; auto)

declare regval_of_bitvector_256_def[simp]

lemma regval_bitvector_256[simp]:
  "bitvector_256_of_regval (regval_of_bitvector_256 v) = Some v"
  by auto

lemma bitvector_3_of_regval_eq_Some_iff[simp]:
  "bitvector_3_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_3 v"
  by (cases rv; auto)

declare regval_of_bitvector_3_def[simp]

lemma regval_bitvector_3[simp]:
  "bitvector_3_of_regval (regval_of_bitvector_3 v) = Some v"
  by auto

lemma bitvector_32_of_regval_eq_Some_iff[simp]:
  "bitvector_32_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_32 v"
  by (cases rv; auto)

declare regval_of_bitvector_32_def[simp]

lemma regval_bitvector_32[simp]:
  "bitvector_32_of_regval (regval_of_bitvector_32 v) = Some v"
  by auto

lemma bitvector_4_of_regval_eq_Some_iff[simp]:
  "bitvector_4_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_4 v"
  by (cases rv; auto)

declare regval_of_bitvector_4_def[simp]

lemma regval_bitvector_4[simp]:
  "bitvector_4_of_regval (regval_of_bitvector_4 v) = Some v"
  by auto

lemma bitvector_512_of_regval_eq_Some_iff[simp]:
  "bitvector_512_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_512 v"
  by (cases rv; auto)

declare regval_of_bitvector_512_def[simp]

lemma regval_bitvector_512[simp]:
  "bitvector_512_of_regval (regval_of_bitvector_512 v) = Some v"
  by auto

lemma bitvector_56_of_regval_eq_Some_iff[simp]:
  "bitvector_56_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_56 v"
  by (cases rv; auto)

declare regval_of_bitvector_56_def[simp]

lemma regval_bitvector_56[simp]:
  "bitvector_56_of_regval (regval_of_bitvector_56 v) = Some v"
  by auto

lemma bitvector_64_of_regval_eq_Some_iff[simp]:
  "bitvector_64_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_64 v"
  by (cases rv; auto)

declare regval_of_bitvector_64_def[simp]

lemma regval_bitvector_64[simp]:
  "bitvector_64_of_regval (regval_of_bitvector_64 v) = Some v"
  by auto

lemma bitvector_8_of_regval_eq_Some_iff[simp]:
  "bitvector_8_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_8 v"
  by (cases rv; auto)

declare regval_of_bitvector_8_def[simp]

lemma regval_bitvector_8[simp]:
  "bitvector_8_of_regval (regval_of_bitvector_8 v) = Some v"
  by auto

lemma bitvector_88_of_regval_eq_Some_iff[simp]:
  "bitvector_88_of_regval rv = Some v \<longleftrightarrow> rv = Regval_bitvector_88 v"
  by (cases rv; auto)

declare regval_of_bitvector_88_def[simp]

lemma regval_bitvector_88[simp]:
  "bitvector_88_of_regval (regval_of_bitvector_88 v) = Some v"
  by auto

lemma regval_ACCDATA_EL1_Type[simp]:
  "ACCDATA_EL1_Type_of_regval (regval_of_ACCDATA_EL1_Type v) = Some v"
  by (auto simp: ACCDATA_EL1_Type_of_regval_def regval_of_ACCDATA_EL1_Type_def)

lemma regval_AMCFGR_EL0_Type[simp]:
  "AMCFGR_EL0_Type_of_regval (regval_of_AMCFGR_EL0_Type v) = Some v"
  by (auto simp: AMCFGR_EL0_Type_of_regval_def regval_of_AMCFGR_EL0_Type_def)

lemma regval_AMCFGR_Type[simp]:
  "AMCFGR_Type_of_regval (regval_of_AMCFGR_Type v) = Some v"
  by (auto simp: AMCFGR_Type_of_regval_def regval_of_AMCFGR_Type_def)

lemma regval_AMCG1IDR_EL0_Type[simp]:
  "AMCG1IDR_EL0_Type_of_regval (regval_of_AMCG1IDR_EL0_Type v) = Some v"
  by (auto simp: AMCG1IDR_EL0_Type_of_regval_def regval_of_AMCG1IDR_EL0_Type_def)

lemma regval_AMCGCR_EL0_Type[simp]:
  "AMCGCR_EL0_Type_of_regval (regval_of_AMCGCR_EL0_Type v) = Some v"
  by (auto simp: AMCGCR_EL0_Type_of_regval_def regval_of_AMCGCR_EL0_Type_def)

lemma regval_AMCGCR_Type[simp]:
  "AMCGCR_Type_of_regval (regval_of_AMCGCR_Type v) = Some v"
  by (auto simp: AMCGCR_Type_of_regval_def regval_of_AMCGCR_Type_def)

lemma regval_AMCIDR0_Type[simp]:
  "AMCIDR0_Type_of_regval (regval_of_AMCIDR0_Type v) = Some v"
  by (auto simp: AMCIDR0_Type_of_regval_def regval_of_AMCIDR0_Type_def)

lemma regval_AMCIDR1_Type[simp]:
  "AMCIDR1_Type_of_regval (regval_of_AMCIDR1_Type v) = Some v"
  by (auto simp: AMCIDR1_Type_of_regval_def regval_of_AMCIDR1_Type_def)

lemma regval_AMCIDR2_Type[simp]:
  "AMCIDR2_Type_of_regval (regval_of_AMCIDR2_Type v) = Some v"
  by (auto simp: AMCIDR2_Type_of_regval_def regval_of_AMCIDR2_Type_def)

lemma regval_AMCIDR3_Type[simp]:
  "AMCIDR3_Type_of_regval (regval_of_AMCIDR3_Type v) = Some v"
  by (auto simp: AMCIDR3_Type_of_regval_def regval_of_AMCIDR3_Type_def)

lemma regval_AMCNTENCLR0_EL0_Type[simp]:
  "AMCNTENCLR0_EL0_Type_of_regval (regval_of_AMCNTENCLR0_EL0_Type v) = Some v"
  by (auto simp: AMCNTENCLR0_EL0_Type_of_regval_def regval_of_AMCNTENCLR0_EL0_Type_def)

lemma regval_AMCNTENCLR0_Type[simp]:
  "AMCNTENCLR0_Type_of_regval (regval_of_AMCNTENCLR0_Type v) = Some v"
  by (auto simp: AMCNTENCLR0_Type_of_regval_def regval_of_AMCNTENCLR0_Type_def)

lemma regval_AMCNTENCLR1_EL0_Type[simp]:
  "AMCNTENCLR1_EL0_Type_of_regval (regval_of_AMCNTENCLR1_EL0_Type v) = Some v"
  by (auto simp: AMCNTENCLR1_EL0_Type_of_regval_def regval_of_AMCNTENCLR1_EL0_Type_def)

lemma regval_AMCNTENCLR1_Type[simp]:
  "AMCNTENCLR1_Type_of_regval (regval_of_AMCNTENCLR1_Type v) = Some v"
  by (auto simp: AMCNTENCLR1_Type_of_regval_def regval_of_AMCNTENCLR1_Type_def)

lemma regval_AMCNTENSET0_EL0_Type[simp]:
  "AMCNTENSET0_EL0_Type_of_regval (regval_of_AMCNTENSET0_EL0_Type v) = Some v"
  by (auto simp: AMCNTENSET0_EL0_Type_of_regval_def regval_of_AMCNTENSET0_EL0_Type_def)

lemma regval_AMCNTENSET0_Type[simp]:
  "AMCNTENSET0_Type_of_regval (regval_of_AMCNTENSET0_Type v) = Some v"
  by (auto simp: AMCNTENSET0_Type_of_regval_def regval_of_AMCNTENSET0_Type_def)

lemma regval_AMCNTENSET1_EL0_Type[simp]:
  "AMCNTENSET1_EL0_Type_of_regval (regval_of_AMCNTENSET1_EL0_Type v) = Some v"
  by (auto simp: AMCNTENSET1_EL0_Type_of_regval_def regval_of_AMCNTENSET1_EL0_Type_def)

lemma regval_AMCNTENSET1_Type[simp]:
  "AMCNTENSET1_Type_of_regval (regval_of_AMCNTENSET1_Type v) = Some v"
  by (auto simp: AMCNTENSET1_Type_of_regval_def regval_of_AMCNTENSET1_Type_def)

lemma regval_AMCR_EL0_Type[simp]:
  "AMCR_EL0_Type_of_regval (regval_of_AMCR_EL0_Type v) = Some v"
  by (auto simp: AMCR_EL0_Type_of_regval_def regval_of_AMCR_EL0_Type_def)

lemma regval_AMCR_Type[simp]:
  "AMCR_Type_of_regval (regval_of_AMCR_Type v) = Some v"
  by (auto simp: AMCR_Type_of_regval_def regval_of_AMCR_Type_def)

lemma regval_AMDEVARCH_Type[simp]:
  "AMDEVARCH_Type_of_regval (regval_of_AMDEVARCH_Type v) = Some v"
  by (auto simp: AMDEVARCH_Type_of_regval_def regval_of_AMDEVARCH_Type_def)

lemma regval_AMDEVTYPE_Type[simp]:
  "AMDEVTYPE_Type_of_regval (regval_of_AMDEVTYPE_Type v) = Some v"
  by (auto simp: AMDEVTYPE_Type_of_regval_def regval_of_AMDEVTYPE_Type_def)

lemma regval_AMEVCNTR0_EL0_Type[simp]:
  "AMEVCNTR0_EL0_Type_of_regval (regval_of_AMEVCNTR0_EL0_Type v) = Some v"
  by (auto simp: AMEVCNTR0_EL0_Type_of_regval_def regval_of_AMEVCNTR0_EL0_Type_def)

lemma regval_AMEVCNTR0_Type[simp]:
  "AMEVCNTR0_Type_of_regval (regval_of_AMEVCNTR0_Type v) = Some v"
  by (auto simp: AMEVCNTR0_Type_of_regval_def regval_of_AMEVCNTR0_Type_def)

lemma regval_AMEVCNTR1_EL0_Type[simp]:
  "AMEVCNTR1_EL0_Type_of_regval (regval_of_AMEVCNTR1_EL0_Type v) = Some v"
  by (auto simp: AMEVCNTR1_EL0_Type_of_regval_def regval_of_AMEVCNTR1_EL0_Type_def)

lemma regval_AMEVCNTR1_Type[simp]:
  "AMEVCNTR1_Type_of_regval (regval_of_AMEVCNTR1_Type v) = Some v"
  by (auto simp: AMEVCNTR1_Type_of_regval_def regval_of_AMEVCNTR1_Type_def)

lemma regval_AMEVTYPER0_EL0_Type[simp]:
  "AMEVTYPER0_EL0_Type_of_regval (regval_of_AMEVTYPER0_EL0_Type v) = Some v"
  by (auto simp: AMEVTYPER0_EL0_Type_of_regval_def regval_of_AMEVTYPER0_EL0_Type_def)

lemma regval_AMEVTYPER0_Type[simp]:
  "AMEVTYPER0_Type_of_regval (regval_of_AMEVTYPER0_Type v) = Some v"
  by (auto simp: AMEVTYPER0_Type_of_regval_def regval_of_AMEVTYPER0_Type_def)

lemma regval_AMEVTYPER1_EL0_Type[simp]:
  "AMEVTYPER1_EL0_Type_of_regval (regval_of_AMEVTYPER1_EL0_Type v) = Some v"
  by (auto simp: AMEVTYPER1_EL0_Type_of_regval_def regval_of_AMEVTYPER1_EL0_Type_def)

lemma regval_AMEVTYPER1_Type[simp]:
  "AMEVTYPER1_Type_of_regval (regval_of_AMEVTYPER1_Type v) = Some v"
  by (auto simp: AMEVTYPER1_Type_of_regval_def regval_of_AMEVTYPER1_Type_def)

lemma regval_AMIIDR_Type[simp]:
  "AMIIDR_Type_of_regval (regval_of_AMIIDR_Type v) = Some v"
  by (auto simp: AMIIDR_Type_of_regval_def regval_of_AMIIDR_Type_def)

lemma regval_AMPIDR0_Type[simp]:
  "AMPIDR0_Type_of_regval (regval_of_AMPIDR0_Type v) = Some v"
  by (auto simp: AMPIDR0_Type_of_regval_def regval_of_AMPIDR0_Type_def)

lemma regval_AMPIDR1_Type[simp]:
  "AMPIDR1_Type_of_regval (regval_of_AMPIDR1_Type v) = Some v"
  by (auto simp: AMPIDR1_Type_of_regval_def regval_of_AMPIDR1_Type_def)

lemma regval_AMPIDR2_Type[simp]:
  "AMPIDR2_Type_of_regval (regval_of_AMPIDR2_Type v) = Some v"
  by (auto simp: AMPIDR2_Type_of_regval_def regval_of_AMPIDR2_Type_def)

lemma regval_AMPIDR3_Type[simp]:
  "AMPIDR3_Type_of_regval (regval_of_AMPIDR3_Type v) = Some v"
  by (auto simp: AMPIDR3_Type_of_regval_def regval_of_AMPIDR3_Type_def)

lemma regval_AMPIDR4_Type[simp]:
  "AMPIDR4_Type_of_regval (regval_of_AMPIDR4_Type v) = Some v"
  by (auto simp: AMPIDR4_Type_of_regval_def regval_of_AMPIDR4_Type_def)

lemma regval_AMUSERENR_EL0_Type[simp]:
  "AMUSERENR_EL0_Type_of_regval (regval_of_AMUSERENR_EL0_Type v) = Some v"
  by (auto simp: AMUSERENR_EL0_Type_of_regval_def regval_of_AMUSERENR_EL0_Type_def)

lemma regval_AMUSERENR_Type[simp]:
  "AMUSERENR_Type_of_regval (regval_of_AMUSERENR_Type v) = Some v"
  by (auto simp: AMUSERENR_Type_of_regval_def regval_of_AMUSERENR_Type_def)

lemma regval_BRBCR_EL1_Type[simp]:
  "BRBCR_EL1_Type_of_regval (regval_of_BRBCR_EL1_Type v) = Some v"
  by (auto simp: BRBCR_EL1_Type_of_regval_def regval_of_BRBCR_EL1_Type_def)

lemma regval_BRBCR_EL2_Type[simp]:
  "BRBCR_EL2_Type_of_regval (regval_of_BRBCR_EL2_Type v) = Some v"
  by (auto simp: BRBCR_EL2_Type_of_regval_def regval_of_BRBCR_EL2_Type_def)

lemma regval_BRBFCR_EL1_Type[simp]:
  "BRBFCR_EL1_Type_of_regval (regval_of_BRBFCR_EL1_Type v) = Some v"
  by (auto simp: BRBFCR_EL1_Type_of_regval_def regval_of_BRBFCR_EL1_Type_def)

lemma regval_BRBIDR0_EL1_Type[simp]:
  "BRBIDR0_EL1_Type_of_regval (regval_of_BRBIDR0_EL1_Type v) = Some v"
  by (auto simp: BRBIDR0_EL1_Type_of_regval_def regval_of_BRBIDR0_EL1_Type_def)

lemma regval_BRBINFINJ_EL1_Type[simp]:
  "BRBINFINJ_EL1_Type_of_regval (regval_of_BRBINFINJ_EL1_Type v) = Some v"
  by (auto simp: BRBINFINJ_EL1_Type_of_regval_def regval_of_BRBINFINJ_EL1_Type_def)

lemma regval_BRBINFType[simp]:
  "BRBINFType_of_regval (regval_of_BRBINFType v) = Some v"
  by (auto simp: BRBINFType_of_regval_def regval_of_BRBINFType_def)

lemma regval_BRBINF_EL1_Type[simp]:
  "BRBINF_EL1_Type_of_regval (regval_of_BRBINF_EL1_Type v) = Some v"
  by (auto simp: BRBINF_EL1_Type_of_regval_def regval_of_BRBINF_EL1_Type_def)

lemma regval_BRBSRCINJ_EL1_Type[simp]:
  "BRBSRCINJ_EL1_Type_of_regval (regval_of_BRBSRCINJ_EL1_Type v) = Some v"
  by (auto simp: BRBSRCINJ_EL1_Type_of_regval_def regval_of_BRBSRCINJ_EL1_Type_def)

lemma regval_BRBSRCType[simp]:
  "BRBSRCType_of_regval (regval_of_BRBSRCType v) = Some v"
  by (auto simp: BRBSRCType_of_regval_def regval_of_BRBSRCType_def)

lemma regval_BRBSRC_EL1_Type[simp]:
  "BRBSRC_EL1_Type_of_regval (regval_of_BRBSRC_EL1_Type v) = Some v"
  by (auto simp: BRBSRC_EL1_Type_of_regval_def regval_of_BRBSRC_EL1_Type_def)

lemma regval_BRBTGTINJ_EL1_Type[simp]:
  "BRBTGTINJ_EL1_Type_of_regval (regval_of_BRBTGTINJ_EL1_Type v) = Some v"
  by (auto simp: BRBTGTINJ_EL1_Type_of_regval_def regval_of_BRBTGTINJ_EL1_Type_def)

lemma regval_BRBTGTType[simp]:
  "BRBTGTType_of_regval (regval_of_BRBTGTType v) = Some v"
  by (auto simp: BRBTGTType_of_regval_def regval_of_BRBTGTType_def)

lemma regval_BRBTGT_EL1_Type[simp]:
  "BRBTGT_EL1_Type_of_regval (regval_of_BRBTGT_EL1_Type v) = Some v"
  by (auto simp: BRBTGT_EL1_Type_of_regval_def regval_of_BRBTGT_EL1_Type_def)

lemma regval_BRBTS_EL1_Type[simp]:
  "BRBTS_EL1_Type_of_regval (regval_of_BRBTS_EL1_Type v) = Some v"
  by (auto simp: BRBTS_EL1_Type_of_regval_def regval_of_BRBTS_EL1_Type_def)

lemma regval_CCSIDR2_EL1_Type[simp]:
  "CCSIDR2_EL1_Type_of_regval (regval_of_CCSIDR2_EL1_Type v) = Some v"
  by (auto simp: CCSIDR2_EL1_Type_of_regval_def regval_of_CCSIDR2_EL1_Type_def)

lemma regval_CCSIDR2_Type[simp]:
  "CCSIDR2_Type_of_regval (regval_of_CCSIDR2_Type v) = Some v"
  by (auto simp: CCSIDR2_Type_of_regval_def regval_of_CCSIDR2_Type_def)

lemma regval_CCSIDR_EL1_Type[simp]:
  "CCSIDR_EL1_Type_of_regval (regval_of_CCSIDR_EL1_Type v) = Some v"
  by (auto simp: CCSIDR_EL1_Type_of_regval_def regval_of_CCSIDR_EL1_Type_def)

lemma regval_CCSIDR_Type[simp]:
  "CCSIDR_Type_of_regval (regval_of_CCSIDR_Type v) = Some v"
  by (auto simp: CCSIDR_Type_of_regval_def regval_of_CCSIDR_Type_def)

lemma regval_CLIDR_EL1_Type[simp]:
  "CLIDR_EL1_Type_of_regval (regval_of_CLIDR_EL1_Type v) = Some v"
  by (auto simp: CLIDR_EL1_Type_of_regval_def regval_of_CLIDR_EL1_Type_def)

lemma regval_CLIDR_Type[simp]:
  "CLIDR_Type_of_regval (regval_of_CLIDR_Type v) = Some v"
  by (auto simp: CLIDR_Type_of_regval_def regval_of_CLIDR_Type_def)

lemma regval_CNTCR_Type[simp]:
  "CNTCR_Type_of_regval (regval_of_CNTCR_Type v) = Some v"
  by (auto simp: CNTCR_Type_of_regval_def regval_of_CNTCR_Type_def)

lemma regval_CNTEL0ACR_Type[simp]:
  "CNTEL0ACR_Type_of_regval (regval_of_CNTEL0ACR_Type v) = Some v"
  by (auto simp: CNTEL0ACR_Type_of_regval_def regval_of_CNTEL0ACR_Type_def)

lemma regval_CNTFID0_Type[simp]:
  "CNTFID0_Type_of_regval (regval_of_CNTFID0_Type v) = Some v"
  by (auto simp: CNTFID0_Type_of_regval_def regval_of_CNTFID0_Type_def)

lemma regval_CNTHCTL_EL2_Type[simp]:
  "CNTHCTL_EL2_Type_of_regval (regval_of_CNTHCTL_EL2_Type v) = Some v"
  by (auto simp: CNTHCTL_EL2_Type_of_regval_def regval_of_CNTHCTL_EL2_Type_def)

lemma regval_CNTHCTL_Type[simp]:
  "CNTHCTL_Type_of_regval (regval_of_CNTHCTL_Type v) = Some v"
  by (auto simp: CNTHCTL_Type_of_regval_def regval_of_CNTHCTL_Type_def)

lemma regval_CNTHPS_CTL_EL2_Type[simp]:
  "CNTHPS_CTL_EL2_Type_of_regval (regval_of_CNTHPS_CTL_EL2_Type v) = Some v"
  by (auto simp: CNTHPS_CTL_EL2_Type_of_regval_def regval_of_CNTHPS_CTL_EL2_Type_def)

lemma regval_CNTHPS_CTL_Type[simp]:
  "CNTHPS_CTL_Type_of_regval (regval_of_CNTHPS_CTL_Type v) = Some v"
  by (auto simp: CNTHPS_CTL_Type_of_regval_def regval_of_CNTHPS_CTL_Type_def)

lemma regval_CNTHPS_CVAL_EL2_Type[simp]:
  "CNTHPS_CVAL_EL2_Type_of_regval (regval_of_CNTHPS_CVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHPS_CVAL_EL2_Type_of_regval_def regval_of_CNTHPS_CVAL_EL2_Type_def)

lemma regval_CNTHPS_TVAL_EL2_Type[simp]:
  "CNTHPS_TVAL_EL2_Type_of_regval (regval_of_CNTHPS_TVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHPS_TVAL_EL2_Type_of_regval_def regval_of_CNTHPS_TVAL_EL2_Type_def)

lemma regval_CNTHP_CTL_EL2_Type[simp]:
  "CNTHP_CTL_EL2_Type_of_regval (regval_of_CNTHP_CTL_EL2_Type v) = Some v"
  by (auto simp: CNTHP_CTL_EL2_Type_of_regval_def regval_of_CNTHP_CTL_EL2_Type_def)

lemma regval_CNTHP_CTL_Type[simp]:
  "CNTHP_CTL_Type_of_regval (regval_of_CNTHP_CTL_Type v) = Some v"
  by (auto simp: CNTHP_CTL_Type_of_regval_def regval_of_CNTHP_CTL_Type_def)

lemma regval_CNTHP_CVAL_EL2_Type[simp]:
  "CNTHP_CVAL_EL2_Type_of_regval (regval_of_CNTHP_CVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHP_CVAL_EL2_Type_of_regval_def regval_of_CNTHP_CVAL_EL2_Type_def)

lemma regval_CNTHP_CVAL_Type[simp]:
  "CNTHP_CVAL_Type_of_regval (regval_of_CNTHP_CVAL_Type v) = Some v"
  by (auto simp: CNTHP_CVAL_Type_of_regval_def regval_of_CNTHP_CVAL_Type_def)

lemma regval_CNTHP_TVAL_EL2_Type[simp]:
  "CNTHP_TVAL_EL2_Type_of_regval (regval_of_CNTHP_TVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHP_TVAL_EL2_Type_of_regval_def regval_of_CNTHP_TVAL_EL2_Type_def)

lemma regval_CNTHVS_CTL_EL2_Type[simp]:
  "CNTHVS_CTL_EL2_Type_of_regval (regval_of_CNTHVS_CTL_EL2_Type v) = Some v"
  by (auto simp: CNTHVS_CTL_EL2_Type_of_regval_def regval_of_CNTHVS_CTL_EL2_Type_def)

lemma regval_CNTHVS_CTL_Type[simp]:
  "CNTHVS_CTL_Type_of_regval (regval_of_CNTHVS_CTL_Type v) = Some v"
  by (auto simp: CNTHVS_CTL_Type_of_regval_def regval_of_CNTHVS_CTL_Type_def)

lemma regval_CNTHVS_CVAL_EL2_Type[simp]:
  "CNTHVS_CVAL_EL2_Type_of_regval (regval_of_CNTHVS_CVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHVS_CVAL_EL2_Type_of_regval_def regval_of_CNTHVS_CVAL_EL2_Type_def)

lemma regval_CNTHVS_TVAL_EL2_Type[simp]:
  "CNTHVS_TVAL_EL2_Type_of_regval (regval_of_CNTHVS_TVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHVS_TVAL_EL2_Type_of_regval_def regval_of_CNTHVS_TVAL_EL2_Type_def)

lemma regval_CNTHV_CTL_EL2_Type[simp]:
  "CNTHV_CTL_EL2_Type_of_regval (regval_of_CNTHV_CTL_EL2_Type v) = Some v"
  by (auto simp: CNTHV_CTL_EL2_Type_of_regval_def regval_of_CNTHV_CTL_EL2_Type_def)

lemma regval_CNTHV_CTL_Type[simp]:
  "CNTHV_CTL_Type_of_regval (regval_of_CNTHV_CTL_Type v) = Some v"
  by (auto simp: CNTHV_CTL_Type_of_regval_def regval_of_CNTHV_CTL_Type_def)

lemma regval_CNTHV_CVAL_EL2_Type[simp]:
  "CNTHV_CVAL_EL2_Type_of_regval (regval_of_CNTHV_CVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHV_CVAL_EL2_Type_of_regval_def regval_of_CNTHV_CVAL_EL2_Type_def)

lemma regval_CNTHV_TVAL_EL2_Type[simp]:
  "CNTHV_TVAL_EL2_Type_of_regval (regval_of_CNTHV_TVAL_EL2_Type v) = Some v"
  by (auto simp: CNTHV_TVAL_EL2_Type_of_regval_def regval_of_CNTHV_TVAL_EL2_Type_def)

lemma regval_CNTID_Type[simp]:
  "CNTID_Type_of_regval (regval_of_CNTID_Type v) = Some v"
  by (auto simp: CNTID_Type_of_regval_def regval_of_CNTID_Type_def)

lemma regval_CNTKCTL_EL1_Type[simp]:
  "CNTKCTL_EL1_Type_of_regval (regval_of_CNTKCTL_EL1_Type v) = Some v"
  by (auto simp: CNTKCTL_EL1_Type_of_regval_def regval_of_CNTKCTL_EL1_Type_def)

lemma regval_CNTKCTL_Type[simp]:
  "CNTKCTL_Type_of_regval (regval_of_CNTKCTL_Type v) = Some v"
  by (auto simp: CNTKCTL_Type_of_regval_def regval_of_CNTKCTL_Type_def)

lemma regval_CNTNSAR_Type[simp]:
  "CNTNSAR_Type_of_regval (regval_of_CNTNSAR_Type v) = Some v"
  by (auto simp: CNTNSAR_Type_of_regval_def regval_of_CNTNSAR_Type_def)

lemma regval_CNTPS_CTL_EL1_Type[simp]:
  "CNTPS_CTL_EL1_Type_of_regval (regval_of_CNTPS_CTL_EL1_Type v) = Some v"
  by (auto simp: CNTPS_CTL_EL1_Type_of_regval_def regval_of_CNTPS_CTL_EL1_Type_def)

lemma regval_CNTPS_CVAL_EL1_Type[simp]:
  "CNTPS_CVAL_EL1_Type_of_regval (regval_of_CNTPS_CVAL_EL1_Type v) = Some v"
  by (auto simp: CNTPS_CVAL_EL1_Type_of_regval_def regval_of_CNTPS_CVAL_EL1_Type_def)

lemma regval_CNTPS_TVAL_EL1_Type[simp]:
  "CNTPS_TVAL_EL1_Type_of_regval (regval_of_CNTPS_TVAL_EL1_Type v) = Some v"
  by (auto simp: CNTPS_TVAL_EL1_Type_of_regval_def regval_of_CNTPS_TVAL_EL1_Type_def)

lemma regval_CNTP_CTL_EL0_Type[simp]:
  "CNTP_CTL_EL0_Type_of_regval (regval_of_CNTP_CTL_EL0_Type v) = Some v"
  by (auto simp: CNTP_CTL_EL0_Type_of_regval_def regval_of_CNTP_CTL_EL0_Type_def)

lemma regval_CNTP_CTL_Type[simp]:
  "CNTP_CTL_Type_of_regval (regval_of_CNTP_CTL_Type v) = Some v"
  by (auto simp: CNTP_CTL_Type_of_regval_def regval_of_CNTP_CTL_Type_def)

lemma regval_CNTP_CVAL_EL0_Type[simp]:
  "CNTP_CVAL_EL0_Type_of_regval (regval_of_CNTP_CVAL_EL0_Type v) = Some v"
  by (auto simp: CNTP_CVAL_EL0_Type_of_regval_def regval_of_CNTP_CVAL_EL0_Type_def)

lemma regval_CNTP_CVAL_Type[simp]:
  "CNTP_CVAL_Type_of_regval (regval_of_CNTP_CVAL_Type v) = Some v"
  by (auto simp: CNTP_CVAL_Type_of_regval_def regval_of_CNTP_CVAL_Type_def)

lemma regval_CNTP_TVAL_EL0_Type[simp]:
  "CNTP_TVAL_EL0_Type_of_regval (regval_of_CNTP_TVAL_EL0_Type v) = Some v"
  by (auto simp: CNTP_TVAL_EL0_Type_of_regval_def regval_of_CNTP_TVAL_EL0_Type_def)

lemma regval_CNTSCR_Type[simp]:
  "CNTSCR_Type_of_regval (regval_of_CNTSCR_Type v) = Some v"
  by (auto simp: CNTSCR_Type_of_regval_def regval_of_CNTSCR_Type_def)

lemma regval_CNTSR_Type[simp]:
  "CNTSR_Type_of_regval (regval_of_CNTSR_Type v) = Some v"
  by (auto simp: CNTSR_Type_of_regval_def regval_of_CNTSR_Type_def)

lemma regval_CNTV_CTL_EL0_Type[simp]:
  "CNTV_CTL_EL0_Type_of_regval (regval_of_CNTV_CTL_EL0_Type v) = Some v"
  by (auto simp: CNTV_CTL_EL0_Type_of_regval_def regval_of_CNTV_CTL_EL0_Type_def)

lemma regval_CNTV_CTL_Type[simp]:
  "CNTV_CTL_Type_of_regval (regval_of_CNTV_CTL_Type v) = Some v"
  by (auto simp: CNTV_CTL_Type_of_regval_def regval_of_CNTV_CTL_Type_def)

lemma regval_CNTV_CVAL_EL0_Type[simp]:
  "CNTV_CVAL_EL0_Type_of_regval (regval_of_CNTV_CVAL_EL0_Type v) = Some v"
  by (auto simp: CNTV_CVAL_EL0_Type_of_regval_def regval_of_CNTV_CVAL_EL0_Type_def)

lemma regval_CNTV_CVAL_Type[simp]:
  "CNTV_CVAL_Type_of_regval (regval_of_CNTV_CVAL_Type v) = Some v"
  by (auto simp: CNTV_CVAL_Type_of_regval_def regval_of_CNTV_CVAL_Type_def)

lemma regval_CNTV_TVAL_EL0_Type[simp]:
  "CNTV_TVAL_EL0_Type_of_regval (regval_of_CNTV_TVAL_EL0_Type v) = Some v"
  by (auto simp: CNTV_TVAL_EL0_Type_of_regval_def regval_of_CNTV_TVAL_EL0_Type_def)

lemma regval_CONTEXTIDR_EL1_Type[simp]:
  "CONTEXTIDR_EL1_Type_of_regval (regval_of_CONTEXTIDR_EL1_Type v) = Some v"
  by (auto simp: CONTEXTIDR_EL1_Type_of_regval_def regval_of_CONTEXTIDR_EL1_Type_def)

lemma regval_CONTEXTIDR_EL2_Type[simp]:
  "CONTEXTIDR_EL2_Type_of_regval (regval_of_CONTEXTIDR_EL2_Type v) = Some v"
  by (auto simp: CONTEXTIDR_EL2_Type_of_regval_def regval_of_CONTEXTIDR_EL2_Type_def)

lemma regval_CONTEXTIDR_Type[simp]:
  "CONTEXTIDR_Type_of_regval (regval_of_CONTEXTIDR_Type v) = Some v"
  by (auto simp: CONTEXTIDR_Type_of_regval_def regval_of_CONTEXTIDR_Type_def)

lemma regval_CPACR_EL1_Type[simp]:
  "CPACR_EL1_Type_of_regval (regval_of_CPACR_EL1_Type v) = Some v"
  by (auto simp: CPACR_EL1_Type_of_regval_def regval_of_CPACR_EL1_Type_def)

lemma regval_CPACR_Type[simp]:
  "CPACR_Type_of_regval (regval_of_CPACR_Type v) = Some v"
  by (auto simp: CPACR_Type_of_regval_def regval_of_CPACR_Type_def)

lemma regval_CPTR_EL2_Type[simp]:
  "CPTR_EL2_Type_of_regval (regval_of_CPTR_EL2_Type v) = Some v"
  by (auto simp: CPTR_EL2_Type_of_regval_def regval_of_CPTR_EL2_Type_def)

lemma regval_CPTR_EL3_Type[simp]:
  "CPTR_EL3_Type_of_regval (regval_of_CPTR_EL3_Type v) = Some v"
  by (auto simp: CPTR_EL3_Type_of_regval_def regval_of_CPTR_EL3_Type_def)

lemma regval_CSSELR_EL1_Type[simp]:
  "CSSELR_EL1_Type_of_regval (regval_of_CSSELR_EL1_Type v) = Some v"
  by (auto simp: CSSELR_EL1_Type_of_regval_def regval_of_CSSELR_EL1_Type_def)

lemma regval_CSSELR_Type[simp]:
  "CSSELR_Type_of_regval (regval_of_CSSELR_Type v) = Some v"
  by (auto simp: CSSELR_Type_of_regval_def regval_of_CSSELR_Type_def)

lemma regval_CTIAUTHSTATUS_Type[simp]:
  "CTIAUTHSTATUS_Type_of_regval (regval_of_CTIAUTHSTATUS_Type v) = Some v"
  by (auto simp: CTIAUTHSTATUS_Type_of_regval_def regval_of_CTIAUTHSTATUS_Type_def)

lemma regval_CTICIDR0_Type[simp]:
  "CTICIDR0_Type_of_regval (regval_of_CTICIDR0_Type v) = Some v"
  by (auto simp: CTICIDR0_Type_of_regval_def regval_of_CTICIDR0_Type_def)

lemma regval_CTICIDR1_Type[simp]:
  "CTICIDR1_Type_of_regval (regval_of_CTICIDR1_Type v) = Some v"
  by (auto simp: CTICIDR1_Type_of_regval_def regval_of_CTICIDR1_Type_def)

lemma regval_CTICIDR2_Type[simp]:
  "CTICIDR2_Type_of_regval (regval_of_CTICIDR2_Type v) = Some v"
  by (auto simp: CTICIDR2_Type_of_regval_def regval_of_CTICIDR2_Type_def)

lemma regval_CTICIDR3_Type[simp]:
  "CTICIDR3_Type_of_regval (regval_of_CTICIDR3_Type v) = Some v"
  by (auto simp: CTICIDR3_Type_of_regval_def regval_of_CTICIDR3_Type_def)

lemma regval_CTICONTROL_Type[simp]:
  "CTICONTROL_Type_of_regval (regval_of_CTICONTROL_Type v) = Some v"
  by (auto simp: CTICONTROL_Type_of_regval_def regval_of_CTICONTROL_Type_def)

lemma regval_CTIDEVARCH_Type[simp]:
  "CTIDEVARCH_Type_of_regval (regval_of_CTIDEVARCH_Type v) = Some v"
  by (auto simp: CTIDEVARCH_Type_of_regval_def regval_of_CTIDEVARCH_Type_def)

lemma regval_CTIDEVCTL_Type[simp]:
  "CTIDEVCTL_Type_of_regval (regval_of_CTIDEVCTL_Type v) = Some v"
  by (auto simp: CTIDEVCTL_Type_of_regval_def regval_of_CTIDEVCTL_Type_def)

lemma regval_CTIDEVID_Type[simp]:
  "CTIDEVID_Type_of_regval (regval_of_CTIDEVID_Type v) = Some v"
  by (auto simp: CTIDEVID_Type_of_regval_def regval_of_CTIDEVID_Type_def)

lemma regval_CTIDEVTYPE_Type[simp]:
  "CTIDEVTYPE_Type_of_regval (regval_of_CTIDEVTYPE_Type v) = Some v"
  by (auto simp: CTIDEVTYPE_Type_of_regval_def regval_of_CTIDEVTYPE_Type_def)

lemma regval_CTIITCTRL_Type[simp]:
  "CTIITCTRL_Type_of_regval (regval_of_CTIITCTRL_Type v) = Some v"
  by (auto simp: CTIITCTRL_Type_of_regval_def regval_of_CTIITCTRL_Type_def)

lemma regval_CTILAR_Type[simp]:
  "CTILAR_Type_of_regval (regval_of_CTILAR_Type v) = Some v"
  by (auto simp: CTILAR_Type_of_regval_def regval_of_CTILAR_Type_def)

lemma regval_CTILSR_Type[simp]:
  "CTILSR_Type_of_regval (regval_of_CTILSR_Type v) = Some v"
  by (auto simp: CTILSR_Type_of_regval_def regval_of_CTILSR_Type_def)

lemma regval_CTIPIDR0_Type[simp]:
  "CTIPIDR0_Type_of_regval (regval_of_CTIPIDR0_Type v) = Some v"
  by (auto simp: CTIPIDR0_Type_of_regval_def regval_of_CTIPIDR0_Type_def)

lemma regval_CTIPIDR1_Type[simp]:
  "CTIPIDR1_Type_of_regval (regval_of_CTIPIDR1_Type v) = Some v"
  by (auto simp: CTIPIDR1_Type_of_regval_def regval_of_CTIPIDR1_Type_def)

lemma regval_CTIPIDR2_Type[simp]:
  "CTIPIDR2_Type_of_regval (regval_of_CTIPIDR2_Type v) = Some v"
  by (auto simp: CTIPIDR2_Type_of_regval_def regval_of_CTIPIDR2_Type_def)

lemma regval_CTIPIDR3_Type[simp]:
  "CTIPIDR3_Type_of_regval (regval_of_CTIPIDR3_Type v) = Some v"
  by (auto simp: CTIPIDR3_Type_of_regval_def regval_of_CTIPIDR3_Type_def)

lemma regval_CTIPIDR4_Type[simp]:
  "CTIPIDR4_Type_of_regval (regval_of_CTIPIDR4_Type v) = Some v"
  by (auto simp: CTIPIDR4_Type_of_regval_def regval_of_CTIPIDR4_Type_def)

lemma regval_CTR_EL0_Type[simp]:
  "CTR_EL0_Type_of_regval (regval_of_CTR_EL0_Type v) = Some v"
  by (auto simp: CTR_EL0_Type_of_regval_def regval_of_CTR_EL0_Type_def)

lemma regval_CTR_Type[simp]:
  "CTR_Type_of_regval (regval_of_CTR_Type v) = Some v"
  by (auto simp: CTR_Type_of_regval_def regval_of_CTR_Type_def)

lemma regval_Configuration_Type[simp]:
  "Configuration_Type_of_regval (regval_of_Configuration_Type v) = Some v"
  by (auto simp: Configuration_Type_of_regval_def regval_of_Configuration_Type_def)

lemma regval_DACR32_EL2_Type[simp]:
  "DACR32_EL2_Type_of_regval (regval_of_DACR32_EL2_Type v) = Some v"
  by (auto simp: DACR32_EL2_Type_of_regval_def regval_of_DACR32_EL2_Type_def)

lemma regval_DACR_Type[simp]:
  "DACR_Type_of_regval (regval_of_DACR_Type v) = Some v"
  by (auto simp: DACR_Type_of_regval_def regval_of_DACR_Type_def)

lemma regval_DBGAUTHSTATUS_EL1_Type[simp]:
  "DBGAUTHSTATUS_EL1_Type_of_regval (regval_of_DBGAUTHSTATUS_EL1_Type v) = Some v"
  by (auto simp: DBGAUTHSTATUS_EL1_Type_of_regval_def regval_of_DBGAUTHSTATUS_EL1_Type_def)

lemma regval_DBGAUTHSTATUS_Type[simp]:
  "DBGAUTHSTATUS_Type_of_regval (regval_of_DBGAUTHSTATUS_Type v) = Some v"
  by (auto simp: DBGAUTHSTATUS_Type_of_regval_def regval_of_DBGAUTHSTATUS_Type_def)

lemma regval_DBGBCR_EL1_Type[simp]:
  "DBGBCR_EL1_Type_of_regval (regval_of_DBGBCR_EL1_Type v) = Some v"
  by (auto simp: DBGBCR_EL1_Type_of_regval_def regval_of_DBGBCR_EL1_Type_def)

lemma regval_DBGBCR_Type[simp]:
  "DBGBCR_Type_of_regval (regval_of_DBGBCR_Type v) = Some v"
  by (auto simp: DBGBCR_Type_of_regval_def regval_of_DBGBCR_Type_def)

lemma regval_DBGBVR_EL1_Type[simp]:
  "DBGBVR_EL1_Type_of_regval (regval_of_DBGBVR_EL1_Type v) = Some v"
  by (auto simp: DBGBVR_EL1_Type_of_regval_def regval_of_DBGBVR_EL1_Type_def)

lemma regval_DBGBVR_Type[simp]:
  "DBGBVR_Type_of_regval (regval_of_DBGBVR_Type v) = Some v"
  by (auto simp: DBGBVR_Type_of_regval_def regval_of_DBGBVR_Type_def)

lemma regval_DBGBXVR_Type[simp]:
  "DBGBXVR_Type_of_regval (regval_of_DBGBXVR_Type v) = Some v"
  by (auto simp: DBGBXVR_Type_of_regval_def regval_of_DBGBXVR_Type_def)

lemma regval_DBGCLAIMCLR_EL1_Type[simp]:
  "DBGCLAIMCLR_EL1_Type_of_regval (regval_of_DBGCLAIMCLR_EL1_Type v) = Some v"
  by (auto simp: DBGCLAIMCLR_EL1_Type_of_regval_def regval_of_DBGCLAIMCLR_EL1_Type_def)

lemma regval_DBGCLAIMCLR_Type[simp]:
  "DBGCLAIMCLR_Type_of_regval (regval_of_DBGCLAIMCLR_Type v) = Some v"
  by (auto simp: DBGCLAIMCLR_Type_of_regval_def regval_of_DBGCLAIMCLR_Type_def)

lemma regval_DBGCLAIMSET_EL1_Type[simp]:
  "DBGCLAIMSET_EL1_Type_of_regval (regval_of_DBGCLAIMSET_EL1_Type v) = Some v"
  by (auto simp: DBGCLAIMSET_EL1_Type_of_regval_def regval_of_DBGCLAIMSET_EL1_Type_def)

lemma regval_DBGCLAIMSET_Type[simp]:
  "DBGCLAIMSET_Type_of_regval (regval_of_DBGCLAIMSET_Type v) = Some v"
  by (auto simp: DBGCLAIMSET_Type_of_regval_def regval_of_DBGCLAIMSET_Type_def)

lemma regval_DBGDCCINT_Type[simp]:
  "DBGDCCINT_Type_of_regval (regval_of_DBGDCCINT_Type v) = Some v"
  by (auto simp: DBGDCCINT_Type_of_regval_def regval_of_DBGDCCINT_Type_def)

lemma regval_DBGDEVID1_Type[simp]:
  "DBGDEVID1_Type_of_regval (regval_of_DBGDEVID1_Type v) = Some v"
  by (auto simp: DBGDEVID1_Type_of_regval_def regval_of_DBGDEVID1_Type_def)

lemma regval_DBGDEVID_Type[simp]:
  "DBGDEVID_Type_of_regval (regval_of_DBGDEVID_Type v) = Some v"
  by (auto simp: DBGDEVID_Type_of_regval_def regval_of_DBGDEVID_Type_def)

lemma regval_DBGDIDR_Type[simp]:
  "DBGDIDR_Type_of_regval (regval_of_DBGDIDR_Type v) = Some v"
  by (auto simp: DBGDIDR_Type_of_regval_def regval_of_DBGDIDR_Type_def)

lemma regval_DBGDRAR_Type[simp]:
  "DBGDRAR_Type_of_regval (regval_of_DBGDRAR_Type v) = Some v"
  by (auto simp: DBGDRAR_Type_of_regval_def regval_of_DBGDRAR_Type_def)

lemma regval_DBGDSCRext_Type[simp]:
  "DBGDSCRext_Type_of_regval (regval_of_DBGDSCRext_Type v) = Some v"
  by (auto simp: DBGDSCRext_Type_of_regval_def regval_of_DBGDSCRext_Type_def)

lemma regval_DBGDSCRint_Type[simp]:
  "DBGDSCRint_Type_of_regval (regval_of_DBGDSCRint_Type v) = Some v"
  by (auto simp: DBGDSCRint_Type_of_regval_def regval_of_DBGDSCRint_Type_def)

lemma regval_DBGDTRRXext_Type[simp]:
  "DBGDTRRXext_Type_of_regval (regval_of_DBGDTRRXext_Type v) = Some v"
  by (auto simp: DBGDTRRXext_Type_of_regval_def regval_of_DBGDTRRXext_Type_def)

lemma regval_DBGDTRRXint_Type[simp]:
  "DBGDTRRXint_Type_of_regval (regval_of_DBGDTRRXint_Type v) = Some v"
  by (auto simp: DBGDTRRXint_Type_of_regval_def regval_of_DBGDTRRXint_Type_def)

lemma regval_DBGDTRTXext_Type[simp]:
  "DBGDTRTXext_Type_of_regval (regval_of_DBGDTRTXext_Type v) = Some v"
  by (auto simp: DBGDTRTXext_Type_of_regval_def regval_of_DBGDTRTXext_Type_def)

lemma regval_DBGDTRTXint_Type[simp]:
  "DBGDTRTXint_Type_of_regval (regval_of_DBGDTRTXint_Type v) = Some v"
  by (auto simp: DBGDTRTXint_Type_of_regval_def regval_of_DBGDTRTXint_Type_def)

lemma regval_DBGDTR_EL0_Type[simp]:
  "DBGDTR_EL0_Type_of_regval (regval_of_DBGDTR_EL0_Type v) = Some v"
  by (auto simp: DBGDTR_EL0_Type_of_regval_def regval_of_DBGDTR_EL0_Type_def)

lemma regval_DBGOSDLR_Type[simp]:
  "DBGOSDLR_Type_of_regval (regval_of_DBGOSDLR_Type v) = Some v"
  by (auto simp: DBGOSDLR_Type_of_regval_def regval_of_DBGOSDLR_Type_def)

lemma regval_DBGOSECCR_Type[simp]:
  "DBGOSECCR_Type_of_regval (regval_of_DBGOSECCR_Type v) = Some v"
  by (auto simp: DBGOSECCR_Type_of_regval_def regval_of_DBGOSECCR_Type_def)

lemma regval_DBGOSLAR_Type[simp]:
  "DBGOSLAR_Type_of_regval (regval_of_DBGOSLAR_Type v) = Some v"
  by (auto simp: DBGOSLAR_Type_of_regval_def regval_of_DBGOSLAR_Type_def)

lemma regval_DBGOSLSR_Type[simp]:
  "DBGOSLSR_Type_of_regval (regval_of_DBGOSLSR_Type v) = Some v"
  by (auto simp: DBGOSLSR_Type_of_regval_def regval_of_DBGOSLSR_Type_def)

lemma regval_DBGPRCR_EL1_Type[simp]:
  "DBGPRCR_EL1_Type_of_regval (regval_of_DBGPRCR_EL1_Type v) = Some v"
  by (auto simp: DBGPRCR_EL1_Type_of_regval_def regval_of_DBGPRCR_EL1_Type_def)

lemma regval_DBGPRCR_Type[simp]:
  "DBGPRCR_Type_of_regval (regval_of_DBGPRCR_Type v) = Some v"
  by (auto simp: DBGPRCR_Type_of_regval_def regval_of_DBGPRCR_Type_def)

lemma regval_DBGVCR32_EL2_Type[simp]:
  "DBGVCR32_EL2_Type_of_regval (regval_of_DBGVCR32_EL2_Type v) = Some v"
  by (auto simp: DBGVCR32_EL2_Type_of_regval_def regval_of_DBGVCR32_EL2_Type_def)

lemma regval_DBGVCR_Type[simp]:
  "DBGVCR_Type_of_regval (regval_of_DBGVCR_Type v) = Some v"
  by (auto simp: DBGVCR_Type_of_regval_def regval_of_DBGVCR_Type_def)

lemma regval_DBGWCR_EL1_Type[simp]:
  "DBGWCR_EL1_Type_of_regval (regval_of_DBGWCR_EL1_Type v) = Some v"
  by (auto simp: DBGWCR_EL1_Type_of_regval_def regval_of_DBGWCR_EL1_Type_def)

lemma regval_DBGWCR_Type[simp]:
  "DBGWCR_Type_of_regval (regval_of_DBGWCR_Type v) = Some v"
  by (auto simp: DBGWCR_Type_of_regval_def regval_of_DBGWCR_Type_def)

lemma regval_DBGWVR_EL1_Type[simp]:
  "DBGWVR_EL1_Type_of_regval (regval_of_DBGWVR_EL1_Type v) = Some v"
  by (auto simp: DBGWVR_EL1_Type_of_regval_def regval_of_DBGWVR_EL1_Type_def)

lemma regval_DBGWVR_Type[simp]:
  "DBGWVR_Type_of_regval (regval_of_DBGWVR_Type v) = Some v"
  by (auto simp: DBGWVR_Type_of_regval_def regval_of_DBGWVR_Type_def)

lemma regval_DCZID_EL0_Type[simp]:
  "DCZID_EL0_Type_of_regval (regval_of_DCZID_EL0_Type v) = Some v"
  by (auto simp: DCZID_EL0_Type_of_regval_def regval_of_DCZID_EL0_Type_def)

lemma regval_DFSR_Type[simp]:
  "DFSR_Type_of_regval (regval_of_DFSR_Type v) = Some v"
  by (auto simp: DFSR_Type_of_regval_def regval_of_DFSR_Type_def)

lemma regval_DISR_EL1_Type[simp]:
  "DISR_EL1_Type_of_regval (regval_of_DISR_EL1_Type v) = Some v"
  by (auto simp: DISR_EL1_Type_of_regval_def regval_of_DISR_EL1_Type_def)

lemma regval_DISR_Type[simp]:
  "DISR_Type_of_regval (regval_of_DISR_Type v) = Some v"
  by (auto simp: DISR_Type_of_regval_def regval_of_DISR_Type_def)

lemma regval_DSPSR2_Type[simp]:
  "DSPSR2_Type_of_regval (regval_of_DSPSR2_Type v) = Some v"
  by (auto simp: DSPSR2_Type_of_regval_def regval_of_DSPSR2_Type_def)

lemma regval_DSPSR_EL0_Type[simp]:
  "DSPSR_EL0_Type_of_regval (regval_of_DSPSR_EL0_Type v) = Some v"
  by (auto simp: DSPSR_EL0_Type_of_regval_def regval_of_DSPSR_EL0_Type_def)

lemma regval_DSPSR_Type[simp]:
  "DSPSR_Type_of_regval (regval_of_DSPSR_Type v) = Some v"
  by (auto simp: DSPSR_Type_of_regval_def regval_of_DSPSR_Type_def)

lemma regval_DormantCtl_Type[simp]:
  "DormantCtl_Type_of_regval (regval_of_DormantCtl_Type v) = Some v"
  by (auto simp: DormantCtl_Type_of_regval_def regval_of_DormantCtl_Type_def)

lemma regval_EDAA32PFR_Type[simp]:
  "EDAA32PFR_Type_of_regval (regval_of_EDAA32PFR_Type v) = Some v"
  by (auto simp: EDAA32PFR_Type_of_regval_def regval_of_EDAA32PFR_Type_def)

lemma regval_EDCIDR0_Type[simp]:
  "EDCIDR0_Type_of_regval (regval_of_EDCIDR0_Type v) = Some v"
  by (auto simp: EDCIDR0_Type_of_regval_def regval_of_EDCIDR0_Type_def)

lemma regval_EDCIDR1_Type[simp]:
  "EDCIDR1_Type_of_regval (regval_of_EDCIDR1_Type v) = Some v"
  by (auto simp: EDCIDR1_Type_of_regval_def regval_of_EDCIDR1_Type_def)

lemma regval_EDCIDR2_Type[simp]:
  "EDCIDR2_Type_of_regval (regval_of_EDCIDR2_Type v) = Some v"
  by (auto simp: EDCIDR2_Type_of_regval_def regval_of_EDCIDR2_Type_def)

lemma regval_EDCIDR3_Type[simp]:
  "EDCIDR3_Type_of_regval (regval_of_EDCIDR3_Type v) = Some v"
  by (auto simp: EDCIDR3_Type_of_regval_def regval_of_EDCIDR3_Type_def)

lemma regval_EDDEVARCH_Type[simp]:
  "EDDEVARCH_Type_of_regval (regval_of_EDDEVARCH_Type v) = Some v"
  by (auto simp: EDDEVARCH_Type_of_regval_def regval_of_EDDEVARCH_Type_def)

lemma regval_EDDEVID1_Type[simp]:
  "EDDEVID1_Type_of_regval (regval_of_EDDEVID1_Type v) = Some v"
  by (auto simp: EDDEVID1_Type_of_regval_def regval_of_EDDEVID1_Type_def)

lemma regval_EDDEVID_Type[simp]:
  "EDDEVID_Type_of_regval (regval_of_EDDEVID_Type v) = Some v"
  by (auto simp: EDDEVID_Type_of_regval_def regval_of_EDDEVID_Type_def)

lemma regval_EDDEVTYPE_Type[simp]:
  "EDDEVTYPE_Type_of_regval (regval_of_EDDEVTYPE_Type v) = Some v"
  by (auto simp: EDDEVTYPE_Type_of_regval_def regval_of_EDDEVTYPE_Type_def)

lemma regval_EDDFR1_Type[simp]:
  "EDDFR1_Type_of_regval (regval_of_EDDFR1_Type v) = Some v"
  by (auto simp: EDDFR1_Type_of_regval_def regval_of_EDDFR1_Type_def)

lemma regval_EDDFR_Type[simp]:
  "EDDFR_Type_of_regval (regval_of_EDDFR_Type v) = Some v"
  by (auto simp: EDDFR_Type_of_regval_def regval_of_EDDFR_Type_def)

lemma regval_EDECCR_Type[simp]:
  "EDECCR_Type_of_regval (regval_of_EDECCR_Type v) = Some v"
  by (auto simp: EDECCR_Type_of_regval_def regval_of_EDECCR_Type_def)

lemma regval_EDECR_Type[simp]:
  "EDECR_Type_of_regval (regval_of_EDECR_Type v) = Some v"
  by (auto simp: EDECR_Type_of_regval_def regval_of_EDECR_Type_def)

lemma regval_EDESR_Type[simp]:
  "EDESR_Type_of_regval (regval_of_EDESR_Type v) = Some v"
  by (auto simp: EDESR_Type_of_regval_def regval_of_EDESR_Type_def)

lemma regval_EDHSR_Type[simp]:
  "EDHSR_Type_of_regval (regval_of_EDHSR_Type v) = Some v"
  by (auto simp: EDHSR_Type_of_regval_def regval_of_EDHSR_Type_def)

lemma regval_EDITCTRL_Type[simp]:
  "EDITCTRL_Type_of_regval (regval_of_EDITCTRL_Type v) = Some v"
  by (auto simp: EDITCTRL_Type_of_regval_def regval_of_EDITCTRL_Type_def)

lemma regval_EDLAR_Type[simp]:
  "EDLAR_Type_of_regval (regval_of_EDLAR_Type v) = Some v"
  by (auto simp: EDLAR_Type_of_regval_def regval_of_EDLAR_Type_def)

lemma regval_EDLSR_Type[simp]:
  "EDLSR_Type_of_regval (regval_of_EDLSR_Type v) = Some v"
  by (auto simp: EDLSR_Type_of_regval_def regval_of_EDLSR_Type_def)

lemma regval_EDPCSR_Type[simp]:
  "EDPCSR_Type_of_regval (regval_of_EDPCSR_Type v) = Some v"
  by (auto simp: EDPCSR_Type_of_regval_def regval_of_EDPCSR_Type_def)

lemma regval_EDPFR_Type[simp]:
  "EDPFR_Type_of_regval (regval_of_EDPFR_Type v) = Some v"
  by (auto simp: EDPFR_Type_of_regval_def regval_of_EDPFR_Type_def)

lemma regval_EDPIDR0_Type[simp]:
  "EDPIDR0_Type_of_regval (regval_of_EDPIDR0_Type v) = Some v"
  by (auto simp: EDPIDR0_Type_of_regval_def regval_of_EDPIDR0_Type_def)

lemma regval_EDPIDR1_Type[simp]:
  "EDPIDR1_Type_of_regval (regval_of_EDPIDR1_Type v) = Some v"
  by (auto simp: EDPIDR1_Type_of_regval_def regval_of_EDPIDR1_Type_def)

lemma regval_EDPIDR2_Type[simp]:
  "EDPIDR2_Type_of_regval (regval_of_EDPIDR2_Type v) = Some v"
  by (auto simp: EDPIDR2_Type_of_regval_def regval_of_EDPIDR2_Type_def)

lemma regval_EDPIDR3_Type[simp]:
  "EDPIDR3_Type_of_regval (regval_of_EDPIDR3_Type v) = Some v"
  by (auto simp: EDPIDR3_Type_of_regval_def regval_of_EDPIDR3_Type_def)

lemma regval_EDPIDR4_Type[simp]:
  "EDPIDR4_Type_of_regval (regval_of_EDPIDR4_Type v) = Some v"
  by (auto simp: EDPIDR4_Type_of_regval_def regval_of_EDPIDR4_Type_def)

lemma regval_EDPRCR_Type[simp]:
  "EDPRCR_Type_of_regval (regval_of_EDPRCR_Type v) = Some v"
  by (auto simp: EDPRCR_Type_of_regval_def regval_of_EDPRCR_Type_def)

lemma regval_EDPRSR_Type[simp]:
  "EDPRSR_Type_of_regval (regval_of_EDPRSR_Type v) = Some v"
  by (auto simp: EDPRSR_Type_of_regval_def regval_of_EDPRSR_Type_def)

lemma regval_EDRCR_Type[simp]:
  "EDRCR_Type_of_regval (regval_of_EDRCR_Type v) = Some v"
  by (auto simp: EDRCR_Type_of_regval_def regval_of_EDRCR_Type_def)

lemma regval_EDSCR2_Type[simp]:
  "EDSCR2_Type_of_regval (regval_of_EDSCR2_Type v) = Some v"
  by (auto simp: EDSCR2_Type_of_regval_def regval_of_EDSCR2_Type_def)

lemma regval_EDSCR_Type[simp]:
  "EDSCR_Type_of_regval (regval_of_EDSCR_Type v) = Some v"
  by (auto simp: EDSCR_Type_of_regval_def regval_of_EDSCR_Type_def)

lemma regval_EDVIDSR_Type[simp]:
  "EDVIDSR_Type_of_regval (regval_of_EDVIDSR_Type v) = Some v"
  by (auto simp: EDVIDSR_Type_of_regval_def regval_of_EDVIDSR_Type_def)

lemma regval_ERRIDR_EL1_Type[simp]:
  "ERRIDR_EL1_Type_of_regval (regval_of_ERRIDR_EL1_Type v) = Some v"
  by (auto simp: ERRIDR_EL1_Type_of_regval_def regval_of_ERRIDR_EL1_Type_def)

lemma regval_ERRIDR_Type[simp]:
  "ERRIDR_Type_of_regval (regval_of_ERRIDR_Type v) = Some v"
  by (auto simp: ERRIDR_Type_of_regval_def regval_of_ERRIDR_Type_def)

lemma regval_ERRSELR_EL1_Type[simp]:
  "ERRSELR_EL1_Type_of_regval (regval_of_ERRSELR_EL1_Type v) = Some v"
  by (auto simp: ERRSELR_EL1_Type_of_regval_def regval_of_ERRSELR_EL1_Type_def)

lemma regval_ERRSELR_Type[simp]:
  "ERRSELR_Type_of_regval (regval_of_ERRSELR_Type v) = Some v"
  by (auto simp: ERRSELR_Type_of_regval_def regval_of_ERRSELR_Type_def)

lemma regval_ERRnFR_ElemType[simp]:
  "ERRnFR_ElemType_of_regval (regval_of_ERRnFR_ElemType v) = Some v"
  by (auto simp: ERRnFR_ElemType_of_regval_def regval_of_ERRnFR_ElemType_def)

lemma regval_ERXGSR_EL1_Type[simp]:
  "ERXGSR_EL1_Type_of_regval (regval_of_ERXGSR_EL1_Type v) = Some v"
  by (auto simp: ERXGSR_EL1_Type_of_regval_def regval_of_ERXGSR_EL1_Type_def)

lemma regval_ESR_EL1_Type[simp]:
  "ESR_EL1_Type_of_regval (regval_of_ESR_EL1_Type v) = Some v"
  by (auto simp: ESR_EL1_Type_of_regval_def regval_of_ESR_EL1_Type_def)

lemma regval_ESR_EL2_Type[simp]:
  "ESR_EL2_Type_of_regval (regval_of_ESR_EL2_Type v) = Some v"
  by (auto simp: ESR_EL2_Type_of_regval_def regval_of_ESR_EL2_Type_def)

lemma regval_ESR_EL3_Type[simp]:
  "ESR_EL3_Type_of_regval (regval_of_ESR_EL3_Type v) = Some v"
  by (auto simp: ESR_EL3_Type_of_regval_def regval_of_ESR_EL3_Type_def)

lemma regval_FPCR_Type[simp]:
  "FPCR_Type_of_regval (regval_of_FPCR_Type v) = Some v"
  by (auto simp: FPCR_Type_of_regval_def regval_of_FPCR_Type_def)

lemma regval_FPEXC32_EL2_Type[simp]:
  "FPEXC32_EL2_Type_of_regval (regval_of_FPEXC32_EL2_Type v) = Some v"
  by (auto simp: FPEXC32_EL2_Type_of_regval_def regval_of_FPEXC32_EL2_Type_def)

lemma regval_FPEXC_Type[simp]:
  "FPEXC_Type_of_regval (regval_of_FPEXC_Type v) = Some v"
  by (auto simp: FPEXC_Type_of_regval_def regval_of_FPEXC_Type_def)

lemma regval_FPSCR_Type[simp]:
  "FPSCR_Type_of_regval (regval_of_FPSCR_Type v) = Some v"
  by (auto simp: FPSCR_Type_of_regval_def regval_of_FPSCR_Type_def)

lemma regval_FPSID_Type[simp]:
  "FPSID_Type_of_regval (regval_of_FPSID_Type v) = Some v"
  by (auto simp: FPSID_Type_of_regval_def regval_of_FPSID_Type_def)

lemma regval_FPSR_Type[simp]:
  "FPSR_Type_of_regval (regval_of_FPSR_Type v) = Some v"
  by (auto simp: FPSR_Type_of_regval_def regval_of_FPSR_Type_def)

lemma regval_GCR_EL1_Type[simp]:
  "GCR_EL1_Type_of_regval (regval_of_GCR_EL1_Type v) = Some v"
  by (auto simp: GCR_EL1_Type_of_regval_def regval_of_GCR_EL1_Type_def)

lemma regval_GCSCRE0_EL1_Type[simp]:
  "GCSCRE0_EL1_Type_of_regval (regval_of_GCSCRE0_EL1_Type v) = Some v"
  by (auto simp: GCSCRE0_EL1_Type_of_regval_def regval_of_GCSCRE0_EL1_Type_def)

lemma regval_GCSCR_EL1_Type[simp]:
  "GCSCR_EL1_Type_of_regval (regval_of_GCSCR_EL1_Type v) = Some v"
  by (auto simp: GCSCR_EL1_Type_of_regval_def regval_of_GCSCR_EL1_Type_def)

lemma regval_GCSCR_EL2_Type[simp]:
  "GCSCR_EL2_Type_of_regval (regval_of_GCSCR_EL2_Type v) = Some v"
  by (auto simp: GCSCR_EL2_Type_of_regval_def regval_of_GCSCR_EL2_Type_def)

lemma regval_GCSCR_EL3_Type[simp]:
  "GCSCR_EL3_Type_of_regval (regval_of_GCSCR_EL3_Type v) = Some v"
  by (auto simp: GCSCR_EL3_Type_of_regval_def regval_of_GCSCR_EL3_Type_def)

lemma regval_GCSPR_EL0_Type[simp]:
  "GCSPR_EL0_Type_of_regval (regval_of_GCSPR_EL0_Type v) = Some v"
  by (auto simp: GCSPR_EL0_Type_of_regval_def regval_of_GCSPR_EL0_Type_def)

lemma regval_GCSPR_EL1_Type[simp]:
  "GCSPR_EL1_Type_of_regval (regval_of_GCSPR_EL1_Type v) = Some v"
  by (auto simp: GCSPR_EL1_Type_of_regval_def regval_of_GCSPR_EL1_Type_def)

lemma regval_GCSPR_EL2_Type[simp]:
  "GCSPR_EL2_Type_of_regval (regval_of_GCSPR_EL2_Type v) = Some v"
  by (auto simp: GCSPR_EL2_Type_of_regval_def regval_of_GCSPR_EL2_Type_def)

lemma regval_GCSPR_EL3_Type[simp]:
  "GCSPR_EL3_Type_of_regval (regval_of_GCSPR_EL3_Type v) = Some v"
  by (auto simp: GCSPR_EL3_Type_of_regval_def regval_of_GCSPR_EL3_Type_def)

lemma regval_GICC_ABPR_Type[simp]:
  "GICC_ABPR_Type_of_regval (regval_of_GICC_ABPR_Type v) = Some v"
  by (auto simp: GICC_ABPR_Type_of_regval_def regval_of_GICC_ABPR_Type_def)

lemma regval_GICC_AEOIR_Type[simp]:
  "GICC_AEOIR_Type_of_regval (regval_of_GICC_AEOIR_Type v) = Some v"
  by (auto simp: GICC_AEOIR_Type_of_regval_def regval_of_GICC_AEOIR_Type_def)

lemma regval_GICC_AHPPIR_Type[simp]:
  "GICC_AHPPIR_Type_of_regval (regval_of_GICC_AHPPIR_Type v) = Some v"
  by (auto simp: GICC_AHPPIR_Type_of_regval_def regval_of_GICC_AHPPIR_Type_def)

lemma regval_GICC_AIAR_Type[simp]:
  "GICC_AIAR_Type_of_regval (regval_of_GICC_AIAR_Type v) = Some v"
  by (auto simp: GICC_AIAR_Type_of_regval_def regval_of_GICC_AIAR_Type_def)

lemma regval_GICC_BPR_Type[simp]:
  "GICC_BPR_Type_of_regval (regval_of_GICC_BPR_Type v) = Some v"
  by (auto simp: GICC_BPR_Type_of_regval_def regval_of_GICC_BPR_Type_def)

lemma regval_GICC_CTLR_Type[simp]:
  "GICC_CTLR_Type_of_regval (regval_of_GICC_CTLR_Type v) = Some v"
  by (auto simp: GICC_CTLR_Type_of_regval_def regval_of_GICC_CTLR_Type_def)

lemma regval_GICC_DIR_Type[simp]:
  "GICC_DIR_Type_of_regval (regval_of_GICC_DIR_Type v) = Some v"
  by (auto simp: GICC_DIR_Type_of_regval_def regval_of_GICC_DIR_Type_def)

lemma regval_GICC_EOIR_Type[simp]:
  "GICC_EOIR_Type_of_regval (regval_of_GICC_EOIR_Type v) = Some v"
  by (auto simp: GICC_EOIR_Type_of_regval_def regval_of_GICC_EOIR_Type_def)

lemma regval_GICC_HPPIR_Type[simp]:
  "GICC_HPPIR_Type_of_regval (regval_of_GICC_HPPIR_Type v) = Some v"
  by (auto simp: GICC_HPPIR_Type_of_regval_def regval_of_GICC_HPPIR_Type_def)

lemma regval_GICC_IAR_Type[simp]:
  "GICC_IAR_Type_of_regval (regval_of_GICC_IAR_Type v) = Some v"
  by (auto simp: GICC_IAR_Type_of_regval_def regval_of_GICC_IAR_Type_def)

lemma regval_GICC_PMR_Type[simp]:
  "GICC_PMR_Type_of_regval (regval_of_GICC_PMR_Type v) = Some v"
  by (auto simp: GICC_PMR_Type_of_regval_def regval_of_GICC_PMR_Type_def)

lemma regval_GICC_RPR_Type[simp]:
  "GICC_RPR_Type_of_regval (regval_of_GICC_RPR_Type v) = Some v"
  by (auto simp: GICC_RPR_Type_of_regval_def regval_of_GICC_RPR_Type_def)

lemma regval_GICC_STATUSR_Type[simp]:
  "GICC_STATUSR_Type_of_regval (regval_of_GICC_STATUSR_Type v) = Some v"
  by (auto simp: GICC_STATUSR_Type_of_regval_def regval_of_GICC_STATUSR_Type_def)

lemma regval_GICD_CLRSPI_NSR_Type[simp]:
  "GICD_CLRSPI_NSR_Type_of_regval (regval_of_GICD_CLRSPI_NSR_Type v) = Some v"
  by (auto simp: GICD_CLRSPI_NSR_Type_of_regval_def regval_of_GICD_CLRSPI_NSR_Type_def)

lemma regval_GICD_CLRSPI_SR_Type[simp]:
  "GICD_CLRSPI_SR_Type_of_regval (regval_of_GICD_CLRSPI_SR_Type v) = Some v"
  by (auto simp: GICD_CLRSPI_SR_Type_of_regval_def regval_of_GICD_CLRSPI_SR_Type_def)

lemma regval_GICD_CTLR_Type[simp]:
  "GICD_CTLR_Type_of_regval (regval_of_GICD_CTLR_Type v) = Some v"
  by (auto simp: GICD_CTLR_Type_of_regval_def regval_of_GICD_CTLR_Type_def)

lemma regval_GICD_IIDR_Type[simp]:
  "GICD_IIDR_Type_of_regval (regval_of_GICD_IIDR_Type v) = Some v"
  by (auto simp: GICD_IIDR_Type_of_regval_def regval_of_GICD_IIDR_Type_def)

lemma regval_GICD_SETSPI_NSR_Type[simp]:
  "GICD_SETSPI_NSR_Type_of_regval (regval_of_GICD_SETSPI_NSR_Type v) = Some v"
  by (auto simp: GICD_SETSPI_NSR_Type_of_regval_def regval_of_GICD_SETSPI_NSR_Type_def)

lemma regval_GICD_SETSPI_SR_Type[simp]:
  "GICD_SETSPI_SR_Type_of_regval (regval_of_GICD_SETSPI_SR_Type v) = Some v"
  by (auto simp: GICD_SETSPI_SR_Type_of_regval_def regval_of_GICD_SETSPI_SR_Type_def)

lemma regval_GICD_SGIR_Type[simp]:
  "GICD_SGIR_Type_of_regval (regval_of_GICD_SGIR_Type v) = Some v"
  by (auto simp: GICD_SGIR_Type_of_regval_def regval_of_GICD_SGIR_Type_def)

lemma regval_GICD_STATUSR_Type[simp]:
  "GICD_STATUSR_Type_of_regval (regval_of_GICD_STATUSR_Type v) = Some v"
  by (auto simp: GICD_STATUSR_Type_of_regval_def regval_of_GICD_STATUSR_Type_def)

lemma regval_GICD_TYPER2_Type[simp]:
  "GICD_TYPER2_Type_of_regval (regval_of_GICD_TYPER2_Type v) = Some v"
  by (auto simp: GICD_TYPER2_Type_of_regval_def regval_of_GICD_TYPER2_Type_def)

lemma regval_GICD_TYPER_Type[simp]:
  "GICD_TYPER_Type_of_regval (regval_of_GICD_TYPER_Type v) = Some v"
  by (auto simp: GICD_TYPER_Type_of_regval_def regval_of_GICD_TYPER_Type_def)

lemma regval_GICH_EISR_Type[simp]:
  "GICH_EISR_Type_of_regval (regval_of_GICH_EISR_Type v) = Some v"
  by (auto simp: GICH_EISR_Type_of_regval_def regval_of_GICH_EISR_Type_def)

lemma regval_GICH_ELRSR_Type[simp]:
  "GICH_ELRSR_Type_of_regval (regval_of_GICH_ELRSR_Type v) = Some v"
  by (auto simp: GICH_ELRSR_Type_of_regval_def regval_of_GICH_ELRSR_Type_def)

lemma regval_GICH_HCR_Type[simp]:
  "GICH_HCR_Type_of_regval (regval_of_GICH_HCR_Type v) = Some v"
  by (auto simp: GICH_HCR_Type_of_regval_def regval_of_GICH_HCR_Type_def)

lemma regval_GICH_MISR_Type[simp]:
  "GICH_MISR_Type_of_regval (regval_of_GICH_MISR_Type v) = Some v"
  by (auto simp: GICH_MISR_Type_of_regval_def regval_of_GICH_MISR_Type_def)

lemma regval_GICH_VMCR_Type[simp]:
  "GICH_VMCR_Type_of_regval (regval_of_GICH_VMCR_Type v) = Some v"
  by (auto simp: GICH_VMCR_Type_of_regval_def regval_of_GICH_VMCR_Type_def)

lemma regval_GICH_VTR_Type[simp]:
  "GICH_VTR_Type_of_regval (regval_of_GICH_VTR_Type v) = Some v"
  by (auto simp: GICH_VTR_Type_of_regval_def regval_of_GICH_VTR_Type_def)

lemma regval_GICM_CLRSPI_NSR_Type[simp]:
  "GICM_CLRSPI_NSR_Type_of_regval (regval_of_GICM_CLRSPI_NSR_Type v) = Some v"
  by (auto simp: GICM_CLRSPI_NSR_Type_of_regval_def regval_of_GICM_CLRSPI_NSR_Type_def)

lemma regval_GICM_CLRSPI_SR_Type[simp]:
  "GICM_CLRSPI_SR_Type_of_regval (regval_of_GICM_CLRSPI_SR_Type v) = Some v"
  by (auto simp: GICM_CLRSPI_SR_Type_of_regval_def regval_of_GICM_CLRSPI_SR_Type_def)

lemma regval_GICM_IIDR_Type[simp]:
  "GICM_IIDR_Type_of_regval (regval_of_GICM_IIDR_Type v) = Some v"
  by (auto simp: GICM_IIDR_Type_of_regval_def regval_of_GICM_IIDR_Type_def)

lemma regval_GICM_SETSPI_NSR_Type[simp]:
  "GICM_SETSPI_NSR_Type_of_regval (regval_of_GICM_SETSPI_NSR_Type v) = Some v"
  by (auto simp: GICM_SETSPI_NSR_Type_of_regval_def regval_of_GICM_SETSPI_NSR_Type_def)

lemma regval_GICM_SETSPI_SR_Type[simp]:
  "GICM_SETSPI_SR_Type_of_regval (regval_of_GICM_SETSPI_SR_Type v) = Some v"
  by (auto simp: GICM_SETSPI_SR_Type_of_regval_def regval_of_GICM_SETSPI_SR_Type_def)

lemma regval_GICM_TYPER_Type[simp]:
  "GICM_TYPER_Type_of_regval (regval_of_GICM_TYPER_Type v) = Some v"
  by (auto simp: GICM_TYPER_Type_of_regval_def regval_of_GICM_TYPER_Type_def)

lemma regval_GICR_CLRLPIR_Type[simp]:
  "GICR_CLRLPIR_Type_of_regval (regval_of_GICR_CLRLPIR_Type v) = Some v"
  by (auto simp: GICR_CLRLPIR_Type_of_regval_def regval_of_GICR_CLRLPIR_Type_def)

lemma regval_GICR_CTLR_Type[simp]:
  "GICR_CTLR_Type_of_regval (regval_of_GICR_CTLR_Type v) = Some v"
  by (auto simp: GICR_CTLR_Type_of_regval_def regval_of_GICR_CTLR_Type_def)

lemma regval_GICR_IIDR_Type[simp]:
  "GICR_IIDR_Type_of_regval (regval_of_GICR_IIDR_Type v) = Some v"
  by (auto simp: GICR_IIDR_Type_of_regval_def regval_of_GICR_IIDR_Type_def)

lemma regval_GICR_INMIR0_Type[simp]:
  "GICR_INMIR0_Type_of_regval (regval_of_GICR_INMIR0_Type v) = Some v"
  by (auto simp: GICR_INMIR0_Type_of_regval_def regval_of_GICR_INMIR0_Type_def)

lemma regval_GICR_INVALLR_Type[simp]:
  "GICR_INVALLR_Type_of_regval (regval_of_GICR_INVALLR_Type v) = Some v"
  by (auto simp: GICR_INVALLR_Type_of_regval_def regval_of_GICR_INVALLR_Type_def)

lemma regval_GICR_INVLPIR_Type[simp]:
  "GICR_INVLPIR_Type_of_regval (regval_of_GICR_INVLPIR_Type v) = Some v"
  by (auto simp: GICR_INVLPIR_Type_of_regval_def regval_of_GICR_INVLPIR_Type_def)

lemma regval_GICR_ISENABLER0_Type[simp]:
  "GICR_ISENABLER0_Type_of_regval (regval_of_GICR_ISENABLER0_Type v) = Some v"
  by (auto simp: GICR_ISENABLER0_Type_of_regval_def regval_of_GICR_ISENABLER0_Type_def)

lemma regval_GICR_MPAMIDR_Type[simp]:
  "GICR_MPAMIDR_Type_of_regval (regval_of_GICR_MPAMIDR_Type v) = Some v"
  by (auto simp: GICR_MPAMIDR_Type_of_regval_def regval_of_GICR_MPAMIDR_Type_def)

lemma regval_GICR_PARTIDR_Type[simp]:
  "GICR_PARTIDR_Type_of_regval (regval_of_GICR_PARTIDR_Type v) = Some v"
  by (auto simp: GICR_PARTIDR_Type_of_regval_def regval_of_GICR_PARTIDR_Type_def)

lemma regval_GICR_PENDBASER_Type[simp]:
  "GICR_PENDBASER_Type_of_regval (regval_of_GICR_PENDBASER_Type v) = Some v"
  by (auto simp: GICR_PENDBASER_Type_of_regval_def regval_of_GICR_PENDBASER_Type_def)

lemma regval_GICR_PROPBASER_Type[simp]:
  "GICR_PROPBASER_Type_of_regval (regval_of_GICR_PROPBASER_Type v) = Some v"
  by (auto simp: GICR_PROPBASER_Type_of_regval_def regval_of_GICR_PROPBASER_Type_def)

lemma regval_GICR_SETLPIR_Type[simp]:
  "GICR_SETLPIR_Type_of_regval (regval_of_GICR_SETLPIR_Type v) = Some v"
  by (auto simp: GICR_SETLPIR_Type_of_regval_def regval_of_GICR_SETLPIR_Type_def)

lemma regval_GICR_STATUSR_Type[simp]:
  "GICR_STATUSR_Type_of_regval (regval_of_GICR_STATUSR_Type v) = Some v"
  by (auto simp: GICR_STATUSR_Type_of_regval_def regval_of_GICR_STATUSR_Type_def)

lemma regval_GICR_SYNCR_Type[simp]:
  "GICR_SYNCR_Type_of_regval (regval_of_GICR_SYNCR_Type v) = Some v"
  by (auto simp: GICR_SYNCR_Type_of_regval_def regval_of_GICR_SYNCR_Type_def)

lemma regval_GICR_VPENDBASER_Type[simp]:
  "GICR_VPENDBASER_Type_of_regval (regval_of_GICR_VPENDBASER_Type v) = Some v"
  by (auto simp: GICR_VPENDBASER_Type_of_regval_def regval_of_GICR_VPENDBASER_Type_def)

lemma regval_GICR_VPROPBASER_Type[simp]:
  "GICR_VPROPBASER_Type_of_regval (regval_of_GICR_VPROPBASER_Type v) = Some v"
  by (auto simp: GICR_VPROPBASER_Type_of_regval_def regval_of_GICR_VPROPBASER_Type_def)

lemma regval_GICR_VSGIPENDR_Type[simp]:
  "GICR_VSGIPENDR_Type_of_regval (regval_of_GICR_VSGIPENDR_Type v) = Some v"
  by (auto simp: GICR_VSGIPENDR_Type_of_regval_def regval_of_GICR_VSGIPENDR_Type_def)

lemma regval_GICR_VSGIR_Type[simp]:
  "GICR_VSGIR_Type_of_regval (regval_of_GICR_VSGIR_Type v) = Some v"
  by (auto simp: GICR_VSGIR_Type_of_regval_def regval_of_GICR_VSGIR_Type_def)

lemma regval_GICR_WAKER_Type[simp]:
  "GICR_WAKER_Type_of_regval (regval_of_GICR_WAKER_Type v) = Some v"
  by (auto simp: GICR_WAKER_Type_of_regval_def regval_of_GICR_WAKER_Type_def)

lemma regval_GICV_ABPR_Type[simp]:
  "GICV_ABPR_Type_of_regval (regval_of_GICV_ABPR_Type v) = Some v"
  by (auto simp: GICV_ABPR_Type_of_regval_def regval_of_GICV_ABPR_Type_def)

lemma regval_GICV_AEOIR_Type[simp]:
  "GICV_AEOIR_Type_of_regval (regval_of_GICV_AEOIR_Type v) = Some v"
  by (auto simp: GICV_AEOIR_Type_of_regval_def regval_of_GICV_AEOIR_Type_def)

lemma regval_GICV_AHPPIR_Type[simp]:
  "GICV_AHPPIR_Type_of_regval (regval_of_GICV_AHPPIR_Type v) = Some v"
  by (auto simp: GICV_AHPPIR_Type_of_regval_def regval_of_GICV_AHPPIR_Type_def)

lemma regval_GICV_AIAR_Type[simp]:
  "GICV_AIAR_Type_of_regval (regval_of_GICV_AIAR_Type v) = Some v"
  by (auto simp: GICV_AIAR_Type_of_regval_def regval_of_GICV_AIAR_Type_def)

lemma regval_GICV_BPR_Type[simp]:
  "GICV_BPR_Type_of_regval (regval_of_GICV_BPR_Type v) = Some v"
  by (auto simp: GICV_BPR_Type_of_regval_def regval_of_GICV_BPR_Type_def)

lemma regval_GICV_CTLR_Type[simp]:
  "GICV_CTLR_Type_of_regval (regval_of_GICV_CTLR_Type v) = Some v"
  by (auto simp: GICV_CTLR_Type_of_regval_def regval_of_GICV_CTLR_Type_def)

lemma regval_GICV_DIR_Type[simp]:
  "GICV_DIR_Type_of_regval (regval_of_GICV_DIR_Type v) = Some v"
  by (auto simp: GICV_DIR_Type_of_regval_def regval_of_GICV_DIR_Type_def)

lemma regval_GICV_EOIR_Type[simp]:
  "GICV_EOIR_Type_of_regval (regval_of_GICV_EOIR_Type v) = Some v"
  by (auto simp: GICV_EOIR_Type_of_regval_def regval_of_GICV_EOIR_Type_def)

lemma regval_GICV_HPPIR_Type[simp]:
  "GICV_HPPIR_Type_of_regval (regval_of_GICV_HPPIR_Type v) = Some v"
  by (auto simp: GICV_HPPIR_Type_of_regval_def regval_of_GICV_HPPIR_Type_def)

lemma regval_GICV_IAR_Type[simp]:
  "GICV_IAR_Type_of_regval (regval_of_GICV_IAR_Type v) = Some v"
  by (auto simp: GICV_IAR_Type_of_regval_def regval_of_GICV_IAR_Type_def)

lemma regval_GICV_PMR_Type[simp]:
  "GICV_PMR_Type_of_regval (regval_of_GICV_PMR_Type v) = Some v"
  by (auto simp: GICV_PMR_Type_of_regval_def regval_of_GICV_PMR_Type_def)

lemma regval_GICV_RPR_Type[simp]:
  "GICV_RPR_Type_of_regval (regval_of_GICV_RPR_Type v) = Some v"
  by (auto simp: GICV_RPR_Type_of_regval_def regval_of_GICV_RPR_Type_def)

lemma regval_GICV_STATUSR_Type[simp]:
  "GICV_STATUSR_Type_of_regval (regval_of_GICV_STATUSR_Type v) = Some v"
  by (auto simp: GICV_STATUSR_Type_of_regval_def regval_of_GICV_STATUSR_Type_def)

lemma regval_GITS_CBASER_Type[simp]:
  "GITS_CBASER_Type_of_regval (regval_of_GITS_CBASER_Type v) = Some v"
  by (auto simp: GITS_CBASER_Type_of_regval_def regval_of_GITS_CBASER_Type_def)

lemma regval_GITS_CREADR_Type[simp]:
  "GITS_CREADR_Type_of_regval (regval_of_GITS_CREADR_Type v) = Some v"
  by (auto simp: GITS_CREADR_Type_of_regval_def regval_of_GITS_CREADR_Type_def)

lemma regval_GITS_CTLR_Type[simp]:
  "GITS_CTLR_Type_of_regval (regval_of_GITS_CTLR_Type v) = Some v"
  by (auto simp: GITS_CTLR_Type_of_regval_def regval_of_GITS_CTLR_Type_def)

lemma regval_GITS_CWRITER_Type[simp]:
  "GITS_CWRITER_Type_of_regval (regval_of_GITS_CWRITER_Type v) = Some v"
  by (auto simp: GITS_CWRITER_Type_of_regval_def regval_of_GITS_CWRITER_Type_def)

lemma regval_GITS_IIDR_Type[simp]:
  "GITS_IIDR_Type_of_regval (regval_of_GITS_IIDR_Type v) = Some v"
  by (auto simp: GITS_IIDR_Type_of_regval_def regval_of_GITS_IIDR_Type_def)

lemma regval_GITS_MPAMIDR_Type[simp]:
  "GITS_MPAMIDR_Type_of_regval (regval_of_GITS_MPAMIDR_Type v) = Some v"
  by (auto simp: GITS_MPAMIDR_Type_of_regval_def regval_of_GITS_MPAMIDR_Type_def)

lemma regval_GITS_MPIDR_Type[simp]:
  "GITS_MPIDR_Type_of_regval (regval_of_GITS_MPIDR_Type v) = Some v"
  by (auto simp: GITS_MPIDR_Type_of_regval_def regval_of_GITS_MPIDR_Type_def)

lemma regval_GITS_PARTIDR_Type[simp]:
  "GITS_PARTIDR_Type_of_regval (regval_of_GITS_PARTIDR_Type v) = Some v"
  by (auto simp: GITS_PARTIDR_Type_of_regval_def regval_of_GITS_PARTIDR_Type_def)

lemma regval_GITS_SGIR_Type[simp]:
  "GITS_SGIR_Type_of_regval (regval_of_GITS_SGIR_Type v) = Some v"
  by (auto simp: GITS_SGIR_Type_of_regval_def regval_of_GITS_SGIR_Type_def)

lemma regval_GITS_STATUSR_Type[simp]:
  "GITS_STATUSR_Type_of_regval (regval_of_GITS_STATUSR_Type v) = Some v"
  by (auto simp: GITS_STATUSR_Type_of_regval_def regval_of_GITS_STATUSR_Type_def)

lemma regval_GITS_TYPER_Type[simp]:
  "GITS_TYPER_Type_of_regval (regval_of_GITS_TYPER_Type v) = Some v"
  by (auto simp: GITS_TYPER_Type_of_regval_def regval_of_GITS_TYPER_Type_def)

lemma regval_GMID_EL1_Type[simp]:
  "GMID_EL1_Type_of_regval (regval_of_GMID_EL1_Type v) = Some v"
  by (auto simp: GMID_EL1_Type_of_regval_def regval_of_GMID_EL1_Type_def)

lemma regval_GPCCR_EL3_Type[simp]:
  "GPCCR_EL3_Type_of_regval (regval_of_GPCCR_EL3_Type v) = Some v"
  by (auto simp: GPCCR_EL3_Type_of_regval_def regval_of_GPCCR_EL3_Type_def)

lemma regval_GPTBR_EL3_Type[simp]:
  "GPTBR_EL3_Type_of_regval (regval_of_GPTBR_EL3_Type v) = Some v"
  by (auto simp: GPTBR_EL3_Type_of_regval_def regval_of_GPTBR_EL3_Type_def)

lemma regval_HAFGRTR_EL2_Type[simp]:
  "HAFGRTR_EL2_Type_of_regval (regval_of_HAFGRTR_EL2_Type v) = Some v"
  by (auto simp: HAFGRTR_EL2_Type_of_regval_def regval_of_HAFGRTR_EL2_Type_def)

lemma regval_HCPTR_Type[simp]:
  "HCPTR_Type_of_regval (regval_of_HCPTR_Type v) = Some v"
  by (auto simp: HCPTR_Type_of_regval_def regval_of_HCPTR_Type_def)

lemma regval_HCR2_Type[simp]:
  "HCR2_Type_of_regval (regval_of_HCR2_Type v) = Some v"
  by (auto simp: HCR2_Type_of_regval_def regval_of_HCR2_Type_def)

lemma regval_HCRX_EL2_Type[simp]:
  "HCRX_EL2_Type_of_regval (regval_of_HCRX_EL2_Type v) = Some v"
  by (auto simp: HCRX_EL2_Type_of_regval_def regval_of_HCRX_EL2_Type_def)

lemma regval_HCR_EL2_Type[simp]:
  "HCR_EL2_Type_of_regval (regval_of_HCR_EL2_Type v) = Some v"
  by (auto simp: HCR_EL2_Type_of_regval_def regval_of_HCR_EL2_Type_def)

lemma regval_HCR_Type[simp]:
  "HCR_Type_of_regval (regval_of_HCR_Type v) = Some v"
  by (auto simp: HCR_Type_of_regval_def regval_of_HCR_Type_def)

lemma regval_HDCR_Type[simp]:
  "HDCR_Type_of_regval (regval_of_HDCR_Type v) = Some v"
  by (auto simp: HDCR_Type_of_regval_def regval_of_HDCR_Type_def)

lemma regval_HDFGRTR2_EL2_Type[simp]:
  "HDFGRTR2_EL2_Type_of_regval (regval_of_HDFGRTR2_EL2_Type v) = Some v"
  by (auto simp: HDFGRTR2_EL2_Type_of_regval_def regval_of_HDFGRTR2_EL2_Type_def)

lemma regval_HDFGRTR_EL2_Type[simp]:
  "HDFGRTR_EL2_Type_of_regval (regval_of_HDFGRTR_EL2_Type v) = Some v"
  by (auto simp: HDFGRTR_EL2_Type_of_regval_def regval_of_HDFGRTR_EL2_Type_def)

lemma regval_HDFGWTR2_EL2_Type[simp]:
  "HDFGWTR2_EL2_Type_of_regval (regval_of_HDFGWTR2_EL2_Type v) = Some v"
  by (auto simp: HDFGWTR2_EL2_Type_of_regval_def regval_of_HDFGWTR2_EL2_Type_def)

lemma regval_HDFGWTR_EL2_Type[simp]:
  "HDFGWTR_EL2_Type_of_regval (regval_of_HDFGWTR_EL2_Type v) = Some v"
  by (auto simp: HDFGWTR_EL2_Type_of_regval_def regval_of_HDFGWTR_EL2_Type_def)

lemma regval_HFGITR_EL2_Type[simp]:
  "HFGITR_EL2_Type_of_regval (regval_of_HFGITR_EL2_Type v) = Some v"
  by (auto simp: HFGITR_EL2_Type_of_regval_def regval_of_HFGITR_EL2_Type_def)

lemma regval_HFGRTR2_EL2_Type[simp]:
  "HFGRTR2_EL2_Type_of_regval (regval_of_HFGRTR2_EL2_Type v) = Some v"
  by (auto simp: HFGRTR2_EL2_Type_of_regval_def regval_of_HFGRTR2_EL2_Type_def)

lemma regval_HFGRTR_EL2_Type[simp]:
  "HFGRTR_EL2_Type_of_regval (regval_of_HFGRTR_EL2_Type v) = Some v"
  by (auto simp: HFGRTR_EL2_Type_of_regval_def regval_of_HFGRTR_EL2_Type_def)

lemma regval_HFGWTR2_EL2_Type[simp]:
  "HFGWTR2_EL2_Type_of_regval (regval_of_HFGWTR2_EL2_Type v) = Some v"
  by (auto simp: HFGWTR2_EL2_Type_of_regval_def regval_of_HFGWTR2_EL2_Type_def)

lemma regval_HFGWTR_EL2_Type[simp]:
  "HFGWTR_EL2_Type_of_regval (regval_of_HFGWTR_EL2_Type v) = Some v"
  by (auto simp: HFGWTR_EL2_Type_of_regval_def regval_of_HFGWTR_EL2_Type_def)

lemma regval_HMAIR0_Type[simp]:
  "HMAIR0_Type_of_regval (regval_of_HMAIR0_Type v) = Some v"
  by (auto simp: HMAIR0_Type_of_regval_def regval_of_HMAIR0_Type_def)

lemma regval_HMAIR1_Type[simp]:
  "HMAIR1_Type_of_regval (regval_of_HMAIR1_Type v) = Some v"
  by (auto simp: HMAIR1_Type_of_regval_def regval_of_HMAIR1_Type_def)

lemma regval_HPFAR_EL2_Type[simp]:
  "HPFAR_EL2_Type_of_regval (regval_of_HPFAR_EL2_Type v) = Some v"
  by (auto simp: HPFAR_EL2_Type_of_regval_def regval_of_HPFAR_EL2_Type_def)

lemma regval_HPFAR_Type[simp]:
  "HPFAR_Type_of_regval (regval_of_HPFAR_Type v) = Some v"
  by (auto simp: HPFAR_Type_of_regval_def regval_of_HPFAR_Type_def)

lemma regval_HRMR_Type[simp]:
  "HRMR_Type_of_regval (regval_of_HRMR_Type v) = Some v"
  by (auto simp: HRMR_Type_of_regval_def regval_of_HRMR_Type_def)

lemma regval_HSCTLR_Type[simp]:
  "HSCTLR_Type_of_regval (regval_of_HSCTLR_Type v) = Some v"
  by (auto simp: HSCTLR_Type_of_regval_def regval_of_HSCTLR_Type_def)

lemma regval_HSR_Type[simp]:
  "HSR_Type_of_regval (regval_of_HSR_Type v) = Some v"
  by (auto simp: HSR_Type_of_regval_def regval_of_HSR_Type_def)

lemma regval_HSTR_EL2_Type[simp]:
  "HSTR_EL2_Type_of_regval (regval_of_HSTR_EL2_Type v) = Some v"
  by (auto simp: HSTR_EL2_Type_of_regval_def regval_of_HSTR_EL2_Type_def)

lemma regval_HSTR_Type[simp]:
  "HSTR_Type_of_regval (regval_of_HSTR_Type v) = Some v"
  by (auto simp: HSTR_Type_of_regval_def regval_of_HSTR_Type_def)

lemma regval_HTCR_Type[simp]:
  "HTCR_Type_of_regval (regval_of_HTCR_Type v) = Some v"
  by (auto simp: HTCR_Type_of_regval_def regval_of_HTCR_Type_def)

lemma regval_HTRFCR_Type[simp]:
  "HTRFCR_Type_of_regval (regval_of_HTRFCR_Type v) = Some v"
  by (auto simp: HTRFCR_Type_of_regval_def regval_of_HTRFCR_Type_def)

lemma regval_HTTBR_Type[simp]:
  "HTTBR_Type_of_regval (regval_of_HTTBR_Type v) = Some v"
  by (auto simp: HTTBR_Type_of_regval_def regval_of_HTTBR_Type_def)

lemma regval_ICC_AP1R_EL1_Type[simp]:
  "ICC_AP1R_EL1_Type_of_regval (regval_of_ICC_AP1R_EL1_Type v) = Some v"
  by (auto simp: ICC_AP1R_EL1_Type_of_regval_def regval_of_ICC_AP1R_EL1_Type_def)

lemma regval_ICC_ASGI1R_EL1_Type[simp]:
  "ICC_ASGI1R_EL1_Type_of_regval (regval_of_ICC_ASGI1R_EL1_Type v) = Some v"
  by (auto simp: ICC_ASGI1R_EL1_Type_of_regval_def regval_of_ICC_ASGI1R_EL1_Type_def)

lemma regval_ICC_ASGI1R_Type[simp]:
  "ICC_ASGI1R_Type_of_regval (regval_of_ICC_ASGI1R_Type v) = Some v"
  by (auto simp: ICC_ASGI1R_Type_of_regval_def regval_of_ICC_ASGI1R_Type_def)

lemma regval_ICC_BPR0_EL1_Type[simp]:
  "ICC_BPR0_EL1_Type_of_regval (regval_of_ICC_BPR0_EL1_Type v) = Some v"
  by (auto simp: ICC_BPR0_EL1_Type_of_regval_def regval_of_ICC_BPR0_EL1_Type_def)

lemma regval_ICC_BPR0_Type[simp]:
  "ICC_BPR0_Type_of_regval (regval_of_ICC_BPR0_Type v) = Some v"
  by (auto simp: ICC_BPR0_Type_of_regval_def regval_of_ICC_BPR0_Type_def)

lemma regval_ICC_BPR1_EL1_Type[simp]:
  "ICC_BPR1_EL1_Type_of_regval (regval_of_ICC_BPR1_EL1_Type v) = Some v"
  by (auto simp: ICC_BPR1_EL1_Type_of_regval_def regval_of_ICC_BPR1_EL1_Type_def)

lemma regval_ICC_BPR1_Type[simp]:
  "ICC_BPR1_Type_of_regval (regval_of_ICC_BPR1_Type v) = Some v"
  by (auto simp: ICC_BPR1_Type_of_regval_def regval_of_ICC_BPR1_Type_def)

lemma regval_ICC_CTLR_EL1_Type[simp]:
  "ICC_CTLR_EL1_Type_of_regval (regval_of_ICC_CTLR_EL1_Type v) = Some v"
  by (auto simp: ICC_CTLR_EL1_Type_of_regval_def regval_of_ICC_CTLR_EL1_Type_def)

lemma regval_ICC_CTLR_EL3_Type[simp]:
  "ICC_CTLR_EL3_Type_of_regval (regval_of_ICC_CTLR_EL3_Type v) = Some v"
  by (auto simp: ICC_CTLR_EL3_Type_of_regval_def regval_of_ICC_CTLR_EL3_Type_def)

lemma regval_ICC_CTLR_Type[simp]:
  "ICC_CTLR_Type_of_regval (regval_of_ICC_CTLR_Type v) = Some v"
  by (auto simp: ICC_CTLR_Type_of_regval_def regval_of_ICC_CTLR_Type_def)

lemma regval_ICC_DIR_EL1_Type[simp]:
  "ICC_DIR_EL1_Type_of_regval (regval_of_ICC_DIR_EL1_Type v) = Some v"
  by (auto simp: ICC_DIR_EL1_Type_of_regval_def regval_of_ICC_DIR_EL1_Type_def)

lemma regval_ICC_DIR_Type[simp]:
  "ICC_DIR_Type_of_regval (regval_of_ICC_DIR_Type v) = Some v"
  by (auto simp: ICC_DIR_Type_of_regval_def regval_of_ICC_DIR_Type_def)

lemma regval_ICC_EOIR0_EL1_Type[simp]:
  "ICC_EOIR0_EL1_Type_of_regval (regval_of_ICC_EOIR0_EL1_Type v) = Some v"
  by (auto simp: ICC_EOIR0_EL1_Type_of_regval_def regval_of_ICC_EOIR0_EL1_Type_def)

lemma regval_ICC_EOIR0_Type[simp]:
  "ICC_EOIR0_Type_of_regval (regval_of_ICC_EOIR0_Type v) = Some v"
  by (auto simp: ICC_EOIR0_Type_of_regval_def regval_of_ICC_EOIR0_Type_def)

lemma regval_ICC_EOIR1_EL1_Type[simp]:
  "ICC_EOIR1_EL1_Type_of_regval (regval_of_ICC_EOIR1_EL1_Type v) = Some v"
  by (auto simp: ICC_EOIR1_EL1_Type_of_regval_def regval_of_ICC_EOIR1_EL1_Type_def)

lemma regval_ICC_EOIR1_Type[simp]:
  "ICC_EOIR1_Type_of_regval (regval_of_ICC_EOIR1_Type v) = Some v"
  by (auto simp: ICC_EOIR1_Type_of_regval_def regval_of_ICC_EOIR1_Type_def)

lemma regval_ICC_HPPIR0_EL1_Type[simp]:
  "ICC_HPPIR0_EL1_Type_of_regval (regval_of_ICC_HPPIR0_EL1_Type v) = Some v"
  by (auto simp: ICC_HPPIR0_EL1_Type_of_regval_def regval_of_ICC_HPPIR0_EL1_Type_def)

lemma regval_ICC_HPPIR0_Type[simp]:
  "ICC_HPPIR0_Type_of_regval (regval_of_ICC_HPPIR0_Type v) = Some v"
  by (auto simp: ICC_HPPIR0_Type_of_regval_def regval_of_ICC_HPPIR0_Type_def)

lemma regval_ICC_HPPIR1_EL1_Type[simp]:
  "ICC_HPPIR1_EL1_Type_of_regval (regval_of_ICC_HPPIR1_EL1_Type v) = Some v"
  by (auto simp: ICC_HPPIR1_EL1_Type_of_regval_def regval_of_ICC_HPPIR1_EL1_Type_def)

lemma regval_ICC_HPPIR1_Type[simp]:
  "ICC_HPPIR1_Type_of_regval (regval_of_ICC_HPPIR1_Type v) = Some v"
  by (auto simp: ICC_HPPIR1_Type_of_regval_def regval_of_ICC_HPPIR1_Type_def)

lemma regval_ICC_HSRE_Type[simp]:
  "ICC_HSRE_Type_of_regval (regval_of_ICC_HSRE_Type v) = Some v"
  by (auto simp: ICC_HSRE_Type_of_regval_def regval_of_ICC_HSRE_Type_def)

lemma regval_ICC_IAR0_EL1_Type[simp]:
  "ICC_IAR0_EL1_Type_of_regval (regval_of_ICC_IAR0_EL1_Type v) = Some v"
  by (auto simp: ICC_IAR0_EL1_Type_of_regval_def regval_of_ICC_IAR0_EL1_Type_def)

lemma regval_ICC_IAR0_Type[simp]:
  "ICC_IAR0_Type_of_regval (regval_of_ICC_IAR0_Type v) = Some v"
  by (auto simp: ICC_IAR0_Type_of_regval_def regval_of_ICC_IAR0_Type_def)

lemma regval_ICC_IAR1_EL1_Type[simp]:
  "ICC_IAR1_EL1_Type_of_regval (regval_of_ICC_IAR1_EL1_Type v) = Some v"
  by (auto simp: ICC_IAR1_EL1_Type_of_regval_def regval_of_ICC_IAR1_EL1_Type_def)

lemma regval_ICC_IAR1_Type[simp]:
  "ICC_IAR1_Type_of_regval (regval_of_ICC_IAR1_Type v) = Some v"
  by (auto simp: ICC_IAR1_Type_of_regval_def regval_of_ICC_IAR1_Type_def)

lemma regval_ICC_IGRPEN0_EL1_Type[simp]:
  "ICC_IGRPEN0_EL1_Type_of_regval (regval_of_ICC_IGRPEN0_EL1_Type v) = Some v"
  by (auto simp: ICC_IGRPEN0_EL1_Type_of_regval_def regval_of_ICC_IGRPEN0_EL1_Type_def)

lemma regval_ICC_IGRPEN0_Type[simp]:
  "ICC_IGRPEN0_Type_of_regval (regval_of_ICC_IGRPEN0_Type v) = Some v"
  by (auto simp: ICC_IGRPEN0_Type_of_regval_def regval_of_ICC_IGRPEN0_Type_def)

lemma regval_ICC_IGRPEN1_EL1_Type[simp]:
  "ICC_IGRPEN1_EL1_Type_of_regval (regval_of_ICC_IGRPEN1_EL1_Type v) = Some v"
  by (auto simp: ICC_IGRPEN1_EL1_Type_of_regval_def regval_of_ICC_IGRPEN1_EL1_Type_def)

lemma regval_ICC_IGRPEN1_EL3_Type[simp]:
  "ICC_IGRPEN1_EL3_Type_of_regval (regval_of_ICC_IGRPEN1_EL3_Type v) = Some v"
  by (auto simp: ICC_IGRPEN1_EL3_Type_of_regval_def regval_of_ICC_IGRPEN1_EL3_Type_def)

lemma regval_ICC_IGRPEN1_Type[simp]:
  "ICC_IGRPEN1_Type_of_regval (regval_of_ICC_IGRPEN1_Type v) = Some v"
  by (auto simp: ICC_IGRPEN1_Type_of_regval_def regval_of_ICC_IGRPEN1_Type_def)

lemma regval_ICC_MCTLR_Type[simp]:
  "ICC_MCTLR_Type_of_regval (regval_of_ICC_MCTLR_Type v) = Some v"
  by (auto simp: ICC_MCTLR_Type_of_regval_def regval_of_ICC_MCTLR_Type_def)

lemma regval_ICC_MGRPEN1_Type[simp]:
  "ICC_MGRPEN1_Type_of_regval (regval_of_ICC_MGRPEN1_Type v) = Some v"
  by (auto simp: ICC_MGRPEN1_Type_of_regval_def regval_of_ICC_MGRPEN1_Type_def)

lemma regval_ICC_MSRE_Type[simp]:
  "ICC_MSRE_Type_of_regval (regval_of_ICC_MSRE_Type v) = Some v"
  by (auto simp: ICC_MSRE_Type_of_regval_def regval_of_ICC_MSRE_Type_def)

lemma regval_ICC_NMIAR1_EL1_Type[simp]:
  "ICC_NMIAR1_EL1_Type_of_regval (regval_of_ICC_NMIAR1_EL1_Type v) = Some v"
  by (auto simp: ICC_NMIAR1_EL1_Type_of_regval_def regval_of_ICC_NMIAR1_EL1_Type_def)

lemma regval_ICC_PMR_EL1_Type[simp]:
  "ICC_PMR_EL1_Type_of_regval (regval_of_ICC_PMR_EL1_Type v) = Some v"
  by (auto simp: ICC_PMR_EL1_Type_of_regval_def regval_of_ICC_PMR_EL1_Type_def)

lemma regval_ICC_PMR_Type[simp]:
  "ICC_PMR_Type_of_regval (regval_of_ICC_PMR_Type v) = Some v"
  by (auto simp: ICC_PMR_Type_of_regval_def regval_of_ICC_PMR_Type_def)

lemma regval_ICC_RPR_EL1_Type[simp]:
  "ICC_RPR_EL1_Type_of_regval (regval_of_ICC_RPR_EL1_Type v) = Some v"
  by (auto simp: ICC_RPR_EL1_Type_of_regval_def regval_of_ICC_RPR_EL1_Type_def)

lemma regval_ICC_RPR_Type[simp]:
  "ICC_RPR_Type_of_regval (regval_of_ICC_RPR_Type v) = Some v"
  by (auto simp: ICC_RPR_Type_of_regval_def regval_of_ICC_RPR_Type_def)

lemma regval_ICC_SGI0R_EL1_Type[simp]:
  "ICC_SGI0R_EL1_Type_of_regval (regval_of_ICC_SGI0R_EL1_Type v) = Some v"
  by (auto simp: ICC_SGI0R_EL1_Type_of_regval_def regval_of_ICC_SGI0R_EL1_Type_def)

lemma regval_ICC_SGI0R_Type[simp]:
  "ICC_SGI0R_Type_of_regval (regval_of_ICC_SGI0R_Type v) = Some v"
  by (auto simp: ICC_SGI0R_Type_of_regval_def regval_of_ICC_SGI0R_Type_def)

lemma regval_ICC_SGI1R_EL1_Type[simp]:
  "ICC_SGI1R_EL1_Type_of_regval (regval_of_ICC_SGI1R_EL1_Type v) = Some v"
  by (auto simp: ICC_SGI1R_EL1_Type_of_regval_def regval_of_ICC_SGI1R_EL1_Type_def)

lemma regval_ICC_SGI1R_Type[simp]:
  "ICC_SGI1R_Type_of_regval (regval_of_ICC_SGI1R_Type v) = Some v"
  by (auto simp: ICC_SGI1R_Type_of_regval_def regval_of_ICC_SGI1R_Type_def)

lemma regval_ICC_SRE_EL1_Type[simp]:
  "ICC_SRE_EL1_Type_of_regval (regval_of_ICC_SRE_EL1_Type v) = Some v"
  by (auto simp: ICC_SRE_EL1_Type_of_regval_def regval_of_ICC_SRE_EL1_Type_def)

lemma regval_ICC_SRE_EL2_Type[simp]:
  "ICC_SRE_EL2_Type_of_regval (regval_of_ICC_SRE_EL2_Type v) = Some v"
  by (auto simp: ICC_SRE_EL2_Type_of_regval_def regval_of_ICC_SRE_EL2_Type_def)

lemma regval_ICC_SRE_EL3_Type[simp]:
  "ICC_SRE_EL3_Type_of_regval (regval_of_ICC_SRE_EL3_Type v) = Some v"
  by (auto simp: ICC_SRE_EL3_Type_of_regval_def regval_of_ICC_SRE_EL3_Type_def)

lemma regval_ICC_SRE_Type[simp]:
  "ICC_SRE_Type_of_regval (regval_of_ICC_SRE_Type v) = Some v"
  by (auto simp: ICC_SRE_Type_of_regval_def regval_of_ICC_SRE_Type_def)

lemma regval_ICH_AP0R_EL2_Type[simp]:
  "ICH_AP0R_EL2_Type_of_regval (regval_of_ICH_AP0R_EL2_Type v) = Some v"
  by (auto simp: ICH_AP0R_EL2_Type_of_regval_def regval_of_ICH_AP0R_EL2_Type_def)

lemma regval_ICH_AP0R_Type[simp]:
  "ICH_AP0R_Type_of_regval (regval_of_ICH_AP0R_Type v) = Some v"
  by (auto simp: ICH_AP0R_Type_of_regval_def regval_of_ICH_AP0R_Type_def)

lemma regval_ICH_AP1R_EL2_Type[simp]:
  "ICH_AP1R_EL2_Type_of_regval (regval_of_ICH_AP1R_EL2_Type v) = Some v"
  by (auto simp: ICH_AP1R_EL2_Type_of_regval_def regval_of_ICH_AP1R_EL2_Type_def)

lemma regval_ICH_AP1R_Type[simp]:
  "ICH_AP1R_Type_of_regval (regval_of_ICH_AP1R_Type v) = Some v"
  by (auto simp: ICH_AP1R_Type_of_regval_def regval_of_ICH_AP1R_Type_def)

lemma regval_ICH_EISR_EL2_Type[simp]:
  "ICH_EISR_EL2_Type_of_regval (regval_of_ICH_EISR_EL2_Type v) = Some v"
  by (auto simp: ICH_EISR_EL2_Type_of_regval_def regval_of_ICH_EISR_EL2_Type_def)

lemma regval_ICH_EISR_Type[simp]:
  "ICH_EISR_Type_of_regval (regval_of_ICH_EISR_Type v) = Some v"
  by (auto simp: ICH_EISR_Type_of_regval_def regval_of_ICH_EISR_Type_def)

lemma regval_ICH_ELRSR_EL2_Type[simp]:
  "ICH_ELRSR_EL2_Type_of_regval (regval_of_ICH_ELRSR_EL2_Type v) = Some v"
  by (auto simp: ICH_ELRSR_EL2_Type_of_regval_def regval_of_ICH_ELRSR_EL2_Type_def)

lemma regval_ICH_ELRSR_Type[simp]:
  "ICH_ELRSR_Type_of_regval (regval_of_ICH_ELRSR_Type v) = Some v"
  by (auto simp: ICH_ELRSR_Type_of_regval_def regval_of_ICH_ELRSR_Type_def)

lemma regval_ICH_HCR_EL2_Type[simp]:
  "ICH_HCR_EL2_Type_of_regval (regval_of_ICH_HCR_EL2_Type v) = Some v"
  by (auto simp: ICH_HCR_EL2_Type_of_regval_def regval_of_ICH_HCR_EL2_Type_def)

lemma regval_ICH_HCR_Type[simp]:
  "ICH_HCR_Type_of_regval (regval_of_ICH_HCR_Type v) = Some v"
  by (auto simp: ICH_HCR_Type_of_regval_def regval_of_ICH_HCR_Type_def)

lemma regval_ICH_LRC_Type[simp]:
  "ICH_LRC_Type_of_regval (regval_of_ICH_LRC_Type v) = Some v"
  by (auto simp: ICH_LRC_Type_of_regval_def regval_of_ICH_LRC_Type_def)

lemma regval_ICH_LR_EL2_Type[simp]:
  "ICH_LR_EL2_Type_of_regval (regval_of_ICH_LR_EL2_Type v) = Some v"
  by (auto simp: ICH_LR_EL2_Type_of_regval_def regval_of_ICH_LR_EL2_Type_def)

lemma regval_ICH_LR_Type[simp]:
  "ICH_LR_Type_of_regval (regval_of_ICH_LR_Type v) = Some v"
  by (auto simp: ICH_LR_Type_of_regval_def regval_of_ICH_LR_Type_def)

lemma regval_ICH_MISR_EL2_Type[simp]:
  "ICH_MISR_EL2_Type_of_regval (regval_of_ICH_MISR_EL2_Type v) = Some v"
  by (auto simp: ICH_MISR_EL2_Type_of_regval_def regval_of_ICH_MISR_EL2_Type_def)

lemma regval_ICH_MISR_Type[simp]:
  "ICH_MISR_Type_of_regval (regval_of_ICH_MISR_Type v) = Some v"
  by (auto simp: ICH_MISR_Type_of_regval_def regval_of_ICH_MISR_Type_def)

lemma regval_ICH_VMCR_EL2_Type[simp]:
  "ICH_VMCR_EL2_Type_of_regval (regval_of_ICH_VMCR_EL2_Type v) = Some v"
  by (auto simp: ICH_VMCR_EL2_Type_of_regval_def regval_of_ICH_VMCR_EL2_Type_def)

lemma regval_ICH_VMCR_Type[simp]:
  "ICH_VMCR_Type_of_regval (regval_of_ICH_VMCR_Type v) = Some v"
  by (auto simp: ICH_VMCR_Type_of_regval_def regval_of_ICH_VMCR_Type_def)

lemma regval_ICH_VTR_EL2_Type[simp]:
  "ICH_VTR_EL2_Type_of_regval (regval_of_ICH_VTR_EL2_Type v) = Some v"
  by (auto simp: ICH_VTR_EL2_Type_of_regval_def regval_of_ICH_VTR_EL2_Type_def)

lemma regval_ICH_VTR_Type[simp]:
  "ICH_VTR_Type_of_regval (regval_of_ICH_VTR_Type v) = Some v"
  by (auto simp: ICH_VTR_Type_of_regval_def regval_of_ICH_VTR_Type_def)

lemma regval_ICV_AP1R_EL1_Type[simp]:
  "ICV_AP1R_EL1_Type_of_regval (regval_of_ICV_AP1R_EL1_Type v) = Some v"
  by (auto simp: ICV_AP1R_EL1_Type_of_regval_def regval_of_ICV_AP1R_EL1_Type_def)

lemma regval_ICV_BPR0_EL1_Type[simp]:
  "ICV_BPR0_EL1_Type_of_regval (regval_of_ICV_BPR0_EL1_Type v) = Some v"
  by (auto simp: ICV_BPR0_EL1_Type_of_regval_def regval_of_ICV_BPR0_EL1_Type_def)

lemma regval_ICV_BPR0_Type[simp]:
  "ICV_BPR0_Type_of_regval (regval_of_ICV_BPR0_Type v) = Some v"
  by (auto simp: ICV_BPR0_Type_of_regval_def regval_of_ICV_BPR0_Type_def)

lemma regval_ICV_BPR1_EL1_Type[simp]:
  "ICV_BPR1_EL1_Type_of_regval (regval_of_ICV_BPR1_EL1_Type v) = Some v"
  by (auto simp: ICV_BPR1_EL1_Type_of_regval_def regval_of_ICV_BPR1_EL1_Type_def)

lemma regval_ICV_BPR1_Type[simp]:
  "ICV_BPR1_Type_of_regval (regval_of_ICV_BPR1_Type v) = Some v"
  by (auto simp: ICV_BPR1_Type_of_regval_def regval_of_ICV_BPR1_Type_def)

lemma regval_ICV_CTLR_EL1_Type[simp]:
  "ICV_CTLR_EL1_Type_of_regval (regval_of_ICV_CTLR_EL1_Type v) = Some v"
  by (auto simp: ICV_CTLR_EL1_Type_of_regval_def regval_of_ICV_CTLR_EL1_Type_def)

lemma regval_ICV_CTLR_Type[simp]:
  "ICV_CTLR_Type_of_regval (regval_of_ICV_CTLR_Type v) = Some v"
  by (auto simp: ICV_CTLR_Type_of_regval_def regval_of_ICV_CTLR_Type_def)

lemma regval_ICV_DIR_EL1_Type[simp]:
  "ICV_DIR_EL1_Type_of_regval (regval_of_ICV_DIR_EL1_Type v) = Some v"
  by (auto simp: ICV_DIR_EL1_Type_of_regval_def regval_of_ICV_DIR_EL1_Type_def)

lemma regval_ICV_DIR_Type[simp]:
  "ICV_DIR_Type_of_regval (regval_of_ICV_DIR_Type v) = Some v"
  by (auto simp: ICV_DIR_Type_of_regval_def regval_of_ICV_DIR_Type_def)

lemma regval_ICV_EOIR0_EL1_Type[simp]:
  "ICV_EOIR0_EL1_Type_of_regval (regval_of_ICV_EOIR0_EL1_Type v) = Some v"
  by (auto simp: ICV_EOIR0_EL1_Type_of_regval_def regval_of_ICV_EOIR0_EL1_Type_def)

lemma regval_ICV_EOIR0_Type[simp]:
  "ICV_EOIR0_Type_of_regval (regval_of_ICV_EOIR0_Type v) = Some v"
  by (auto simp: ICV_EOIR0_Type_of_regval_def regval_of_ICV_EOIR0_Type_def)

lemma regval_ICV_EOIR1_EL1_Type[simp]:
  "ICV_EOIR1_EL1_Type_of_regval (regval_of_ICV_EOIR1_EL1_Type v) = Some v"
  by (auto simp: ICV_EOIR1_EL1_Type_of_regval_def regval_of_ICV_EOIR1_EL1_Type_def)

lemma regval_ICV_EOIR1_Type[simp]:
  "ICV_EOIR1_Type_of_regval (regval_of_ICV_EOIR1_Type v) = Some v"
  by (auto simp: ICV_EOIR1_Type_of_regval_def regval_of_ICV_EOIR1_Type_def)

lemma regval_ICV_HPPIR0_EL1_Type[simp]:
  "ICV_HPPIR0_EL1_Type_of_regval (regval_of_ICV_HPPIR0_EL1_Type v) = Some v"
  by (auto simp: ICV_HPPIR0_EL1_Type_of_regval_def regval_of_ICV_HPPIR0_EL1_Type_def)

lemma regval_ICV_HPPIR0_Type[simp]:
  "ICV_HPPIR0_Type_of_regval (regval_of_ICV_HPPIR0_Type v) = Some v"
  by (auto simp: ICV_HPPIR0_Type_of_regval_def regval_of_ICV_HPPIR0_Type_def)

lemma regval_ICV_HPPIR1_EL1_Type[simp]:
  "ICV_HPPIR1_EL1_Type_of_regval (regval_of_ICV_HPPIR1_EL1_Type v) = Some v"
  by (auto simp: ICV_HPPIR1_EL1_Type_of_regval_def regval_of_ICV_HPPIR1_EL1_Type_def)

lemma regval_ICV_HPPIR1_Type[simp]:
  "ICV_HPPIR1_Type_of_regval (regval_of_ICV_HPPIR1_Type v) = Some v"
  by (auto simp: ICV_HPPIR1_Type_of_regval_def regval_of_ICV_HPPIR1_Type_def)

lemma regval_ICV_IAR0_EL1_Type[simp]:
  "ICV_IAR0_EL1_Type_of_regval (regval_of_ICV_IAR0_EL1_Type v) = Some v"
  by (auto simp: ICV_IAR0_EL1_Type_of_regval_def regval_of_ICV_IAR0_EL1_Type_def)

lemma regval_ICV_IAR0_Type[simp]:
  "ICV_IAR0_Type_of_regval (regval_of_ICV_IAR0_Type v) = Some v"
  by (auto simp: ICV_IAR0_Type_of_regval_def regval_of_ICV_IAR0_Type_def)

lemma regval_ICV_IAR1_EL1_Type[simp]:
  "ICV_IAR1_EL1_Type_of_regval (regval_of_ICV_IAR1_EL1_Type v) = Some v"
  by (auto simp: ICV_IAR1_EL1_Type_of_regval_def regval_of_ICV_IAR1_EL1_Type_def)

lemma regval_ICV_IAR1_Type[simp]:
  "ICV_IAR1_Type_of_regval (regval_of_ICV_IAR1_Type v) = Some v"
  by (auto simp: ICV_IAR1_Type_of_regval_def regval_of_ICV_IAR1_Type_def)

lemma regval_ICV_IGRPEN0_EL1_Type[simp]:
  "ICV_IGRPEN0_EL1_Type_of_regval (regval_of_ICV_IGRPEN0_EL1_Type v) = Some v"
  by (auto simp: ICV_IGRPEN0_EL1_Type_of_regval_def regval_of_ICV_IGRPEN0_EL1_Type_def)

lemma regval_ICV_IGRPEN0_Type[simp]:
  "ICV_IGRPEN0_Type_of_regval (regval_of_ICV_IGRPEN0_Type v) = Some v"
  by (auto simp: ICV_IGRPEN0_Type_of_regval_def regval_of_ICV_IGRPEN0_Type_def)

lemma regval_ICV_IGRPEN1_EL1_Type[simp]:
  "ICV_IGRPEN1_EL1_Type_of_regval (regval_of_ICV_IGRPEN1_EL1_Type v) = Some v"
  by (auto simp: ICV_IGRPEN1_EL1_Type_of_regval_def regval_of_ICV_IGRPEN1_EL1_Type_def)

lemma regval_ICV_IGRPEN1_Type[simp]:
  "ICV_IGRPEN1_Type_of_regval (regval_of_ICV_IGRPEN1_Type v) = Some v"
  by (auto simp: ICV_IGRPEN1_Type_of_regval_def regval_of_ICV_IGRPEN1_Type_def)

lemma regval_ICV_NMIAR1_EL1_Type[simp]:
  "ICV_NMIAR1_EL1_Type_of_regval (regval_of_ICV_NMIAR1_EL1_Type v) = Some v"
  by (auto simp: ICV_NMIAR1_EL1_Type_of_regval_def regval_of_ICV_NMIAR1_EL1_Type_def)

lemma regval_ICV_PMR_EL1_Type[simp]:
  "ICV_PMR_EL1_Type_of_regval (regval_of_ICV_PMR_EL1_Type v) = Some v"
  by (auto simp: ICV_PMR_EL1_Type_of_regval_def regval_of_ICV_PMR_EL1_Type_def)

lemma regval_ICV_PMR_Type[simp]:
  "ICV_PMR_Type_of_regval (regval_of_ICV_PMR_Type v) = Some v"
  by (auto simp: ICV_PMR_Type_of_regval_def regval_of_ICV_PMR_Type_def)

lemma regval_ICV_RPR_EL1_Type[simp]:
  "ICV_RPR_EL1_Type_of_regval (regval_of_ICV_RPR_EL1_Type v) = Some v"
  by (auto simp: ICV_RPR_EL1_Type_of_regval_def regval_of_ICV_RPR_EL1_Type_def)

lemma regval_ICV_RPR_Type[simp]:
  "ICV_RPR_Type_of_regval (regval_of_ICV_RPR_Type v) = Some v"
  by (auto simp: ICV_RPR_Type_of_regval_def regval_of_ICV_RPR_Type_def)

lemma regval_ID_AA64DFR0_EL1_Type[simp]:
  "ID_AA64DFR0_EL1_Type_of_regval (regval_of_ID_AA64DFR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64DFR0_EL1_Type_of_regval_def regval_of_ID_AA64DFR0_EL1_Type_def)

lemma regval_ID_AA64DFR1_EL1_Type[simp]:
  "ID_AA64DFR1_EL1_Type_of_regval (regval_of_ID_AA64DFR1_EL1_Type v) = Some v"
  by (auto simp: ID_AA64DFR1_EL1_Type_of_regval_def regval_of_ID_AA64DFR1_EL1_Type_def)

lemma regval_ID_AA64ISAR0_EL1_Type[simp]:
  "ID_AA64ISAR0_EL1_Type_of_regval (regval_of_ID_AA64ISAR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64ISAR0_EL1_Type_of_regval_def regval_of_ID_AA64ISAR0_EL1_Type_def)

lemma regval_ID_AA64ISAR1_EL1_Type[simp]:
  "ID_AA64ISAR1_EL1_Type_of_regval (regval_of_ID_AA64ISAR1_EL1_Type v) = Some v"
  by (auto simp: ID_AA64ISAR1_EL1_Type_of_regval_def regval_of_ID_AA64ISAR1_EL1_Type_def)

lemma regval_ID_AA64ISAR2_EL1_Type[simp]:
  "ID_AA64ISAR2_EL1_Type_of_regval (regval_of_ID_AA64ISAR2_EL1_Type v) = Some v"
  by (auto simp: ID_AA64ISAR2_EL1_Type_of_regval_def regval_of_ID_AA64ISAR2_EL1_Type_def)

lemma regval_ID_AA64MMFR0_EL1_Type[simp]:
  "ID_AA64MMFR0_EL1_Type_of_regval (regval_of_ID_AA64MMFR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64MMFR0_EL1_Type_of_regval_def regval_of_ID_AA64MMFR0_EL1_Type_def)

lemma regval_ID_AA64MMFR1_EL1_Type[simp]:
  "ID_AA64MMFR1_EL1_Type_of_regval (regval_of_ID_AA64MMFR1_EL1_Type v) = Some v"
  by (auto simp: ID_AA64MMFR1_EL1_Type_of_regval_def regval_of_ID_AA64MMFR1_EL1_Type_def)

lemma regval_ID_AA64MMFR2_EL1_Type[simp]:
  "ID_AA64MMFR2_EL1_Type_of_regval (regval_of_ID_AA64MMFR2_EL1_Type v) = Some v"
  by (auto simp: ID_AA64MMFR2_EL1_Type_of_regval_def regval_of_ID_AA64MMFR2_EL1_Type_def)

lemma regval_ID_AA64MMFR3_EL1_Type[simp]:
  "ID_AA64MMFR3_EL1_Type_of_regval (regval_of_ID_AA64MMFR3_EL1_Type v) = Some v"
  by (auto simp: ID_AA64MMFR3_EL1_Type_of_regval_def regval_of_ID_AA64MMFR3_EL1_Type_def)

lemma regval_ID_AA64MMFR4_EL1_Type[simp]:
  "ID_AA64MMFR4_EL1_Type_of_regval (regval_of_ID_AA64MMFR4_EL1_Type v) = Some v"
  by (auto simp: ID_AA64MMFR4_EL1_Type_of_regval_def regval_of_ID_AA64MMFR4_EL1_Type_def)

lemma regval_ID_AA64PFR0_EL1_Type[simp]:
  "ID_AA64PFR0_EL1_Type_of_regval (regval_of_ID_AA64PFR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64PFR0_EL1_Type_of_regval_def regval_of_ID_AA64PFR0_EL1_Type_def)

lemma regval_ID_AA64PFR1_EL1_Type[simp]:
  "ID_AA64PFR1_EL1_Type_of_regval (regval_of_ID_AA64PFR1_EL1_Type v) = Some v"
  by (auto simp: ID_AA64PFR1_EL1_Type_of_regval_def regval_of_ID_AA64PFR1_EL1_Type_def)

lemma regval_ID_AA64PFR2_EL1_Type[simp]:
  "ID_AA64PFR2_EL1_Type_of_regval (regval_of_ID_AA64PFR2_EL1_Type v) = Some v"
  by (auto simp: ID_AA64PFR2_EL1_Type_of_regval_def regval_of_ID_AA64PFR2_EL1_Type_def)

lemma regval_ID_AA64SMFR0_EL1_Type[simp]:
  "ID_AA64SMFR0_EL1_Type_of_regval (regval_of_ID_AA64SMFR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64SMFR0_EL1_Type_of_regval_def regval_of_ID_AA64SMFR0_EL1_Type_def)

lemma regval_ID_AA64ZFR0_EL1_Type[simp]:
  "ID_AA64ZFR0_EL1_Type_of_regval (regval_of_ID_AA64ZFR0_EL1_Type v) = Some v"
  by (auto simp: ID_AA64ZFR0_EL1_Type_of_regval_def regval_of_ID_AA64ZFR0_EL1_Type_def)

lemma regval_ID_DFR0_EL1_Type[simp]:
  "ID_DFR0_EL1_Type_of_regval (regval_of_ID_DFR0_EL1_Type v) = Some v"
  by (auto simp: ID_DFR0_EL1_Type_of_regval_def regval_of_ID_DFR0_EL1_Type_def)

lemma regval_ID_DFR0_Type[simp]:
  "ID_DFR0_Type_of_regval (regval_of_ID_DFR0_Type v) = Some v"
  by (auto simp: ID_DFR0_Type_of_regval_def regval_of_ID_DFR0_Type_def)

lemma regval_ID_DFR1_EL1_Type[simp]:
  "ID_DFR1_EL1_Type_of_regval (regval_of_ID_DFR1_EL1_Type v) = Some v"
  by (auto simp: ID_DFR1_EL1_Type_of_regval_def regval_of_ID_DFR1_EL1_Type_def)

lemma regval_ID_DFR1_Type[simp]:
  "ID_DFR1_Type_of_regval (regval_of_ID_DFR1_Type v) = Some v"
  by (auto simp: ID_DFR1_Type_of_regval_def regval_of_ID_DFR1_Type_def)

lemma regval_ID_ISAR0_EL1_Type[simp]:
  "ID_ISAR0_EL1_Type_of_regval (regval_of_ID_ISAR0_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR0_EL1_Type_of_regval_def regval_of_ID_ISAR0_EL1_Type_def)

lemma regval_ID_ISAR0_Type[simp]:
  "ID_ISAR0_Type_of_regval (regval_of_ID_ISAR0_Type v) = Some v"
  by (auto simp: ID_ISAR0_Type_of_regval_def regval_of_ID_ISAR0_Type_def)

lemma regval_ID_ISAR1_EL1_Type[simp]:
  "ID_ISAR1_EL1_Type_of_regval (regval_of_ID_ISAR1_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR1_EL1_Type_of_regval_def regval_of_ID_ISAR1_EL1_Type_def)

lemma regval_ID_ISAR1_Type[simp]:
  "ID_ISAR1_Type_of_regval (regval_of_ID_ISAR1_Type v) = Some v"
  by (auto simp: ID_ISAR1_Type_of_regval_def regval_of_ID_ISAR1_Type_def)

lemma regval_ID_ISAR2_EL1_Type[simp]:
  "ID_ISAR2_EL1_Type_of_regval (regval_of_ID_ISAR2_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR2_EL1_Type_of_regval_def regval_of_ID_ISAR2_EL1_Type_def)

lemma regval_ID_ISAR2_Type[simp]:
  "ID_ISAR2_Type_of_regval (regval_of_ID_ISAR2_Type v) = Some v"
  by (auto simp: ID_ISAR2_Type_of_regval_def regval_of_ID_ISAR2_Type_def)

lemma regval_ID_ISAR3_EL1_Type[simp]:
  "ID_ISAR3_EL1_Type_of_regval (regval_of_ID_ISAR3_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR3_EL1_Type_of_regval_def regval_of_ID_ISAR3_EL1_Type_def)

lemma regval_ID_ISAR3_Type[simp]:
  "ID_ISAR3_Type_of_regval (regval_of_ID_ISAR3_Type v) = Some v"
  by (auto simp: ID_ISAR3_Type_of_regval_def regval_of_ID_ISAR3_Type_def)

lemma regval_ID_ISAR4_EL1_Type[simp]:
  "ID_ISAR4_EL1_Type_of_regval (regval_of_ID_ISAR4_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR4_EL1_Type_of_regval_def regval_of_ID_ISAR4_EL1_Type_def)

lemma regval_ID_ISAR4_Type[simp]:
  "ID_ISAR4_Type_of_regval (regval_of_ID_ISAR4_Type v) = Some v"
  by (auto simp: ID_ISAR4_Type_of_regval_def regval_of_ID_ISAR4_Type_def)

lemma regval_ID_ISAR5_EL1_Type[simp]:
  "ID_ISAR5_EL1_Type_of_regval (regval_of_ID_ISAR5_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR5_EL1_Type_of_regval_def regval_of_ID_ISAR5_EL1_Type_def)

lemma regval_ID_ISAR5_Type[simp]:
  "ID_ISAR5_Type_of_regval (regval_of_ID_ISAR5_Type v) = Some v"
  by (auto simp: ID_ISAR5_Type_of_regval_def regval_of_ID_ISAR5_Type_def)

lemma regval_ID_ISAR6_EL1_Type[simp]:
  "ID_ISAR6_EL1_Type_of_regval (regval_of_ID_ISAR6_EL1_Type v) = Some v"
  by (auto simp: ID_ISAR6_EL1_Type_of_regval_def regval_of_ID_ISAR6_EL1_Type_def)

lemma regval_ID_ISAR6_Type[simp]:
  "ID_ISAR6_Type_of_regval (regval_of_ID_ISAR6_Type v) = Some v"
  by (auto simp: ID_ISAR6_Type_of_regval_def regval_of_ID_ISAR6_Type_def)

lemma regval_ID_MMFR0_EL1_Type[simp]:
  "ID_MMFR0_EL1_Type_of_regval (regval_of_ID_MMFR0_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR0_EL1_Type_of_regval_def regval_of_ID_MMFR0_EL1_Type_def)

lemma regval_ID_MMFR0_Type[simp]:
  "ID_MMFR0_Type_of_regval (regval_of_ID_MMFR0_Type v) = Some v"
  by (auto simp: ID_MMFR0_Type_of_regval_def regval_of_ID_MMFR0_Type_def)

lemma regval_ID_MMFR1_EL1_Type[simp]:
  "ID_MMFR1_EL1_Type_of_regval (regval_of_ID_MMFR1_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR1_EL1_Type_of_regval_def regval_of_ID_MMFR1_EL1_Type_def)

lemma regval_ID_MMFR1_Type[simp]:
  "ID_MMFR1_Type_of_regval (regval_of_ID_MMFR1_Type v) = Some v"
  by (auto simp: ID_MMFR1_Type_of_regval_def regval_of_ID_MMFR1_Type_def)

lemma regval_ID_MMFR2_EL1_Type[simp]:
  "ID_MMFR2_EL1_Type_of_regval (regval_of_ID_MMFR2_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR2_EL1_Type_of_regval_def regval_of_ID_MMFR2_EL1_Type_def)

lemma regval_ID_MMFR2_Type[simp]:
  "ID_MMFR2_Type_of_regval (regval_of_ID_MMFR2_Type v) = Some v"
  by (auto simp: ID_MMFR2_Type_of_regval_def regval_of_ID_MMFR2_Type_def)

lemma regval_ID_MMFR3_EL1_Type[simp]:
  "ID_MMFR3_EL1_Type_of_regval (regval_of_ID_MMFR3_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR3_EL1_Type_of_regval_def regval_of_ID_MMFR3_EL1_Type_def)

lemma regval_ID_MMFR3_Type[simp]:
  "ID_MMFR3_Type_of_regval (regval_of_ID_MMFR3_Type v) = Some v"
  by (auto simp: ID_MMFR3_Type_of_regval_def regval_of_ID_MMFR3_Type_def)

lemma regval_ID_MMFR4_EL1_Type[simp]:
  "ID_MMFR4_EL1_Type_of_regval (regval_of_ID_MMFR4_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR4_EL1_Type_of_regval_def regval_of_ID_MMFR4_EL1_Type_def)

lemma regval_ID_MMFR4_Type[simp]:
  "ID_MMFR4_Type_of_regval (regval_of_ID_MMFR4_Type v) = Some v"
  by (auto simp: ID_MMFR4_Type_of_regval_def regval_of_ID_MMFR4_Type_def)

lemma regval_ID_MMFR5_EL1_Type[simp]:
  "ID_MMFR5_EL1_Type_of_regval (regval_of_ID_MMFR5_EL1_Type v) = Some v"
  by (auto simp: ID_MMFR5_EL1_Type_of_regval_def regval_of_ID_MMFR5_EL1_Type_def)

lemma regval_ID_MMFR5_Type[simp]:
  "ID_MMFR5_Type_of_regval (regval_of_ID_MMFR5_Type v) = Some v"
  by (auto simp: ID_MMFR5_Type_of_regval_def regval_of_ID_MMFR5_Type_def)

lemma regval_ID_PFR0_EL1_Type[simp]:
  "ID_PFR0_EL1_Type_of_regval (regval_of_ID_PFR0_EL1_Type v) = Some v"
  by (auto simp: ID_PFR0_EL1_Type_of_regval_def regval_of_ID_PFR0_EL1_Type_def)

lemma regval_ID_PFR0_Type[simp]:
  "ID_PFR0_Type_of_regval (regval_of_ID_PFR0_Type v) = Some v"
  by (auto simp: ID_PFR0_Type_of_regval_def regval_of_ID_PFR0_Type_def)

lemma regval_ID_PFR1_EL1_Type[simp]:
  "ID_PFR1_EL1_Type_of_regval (regval_of_ID_PFR1_EL1_Type v) = Some v"
  by (auto simp: ID_PFR1_EL1_Type_of_regval_def regval_of_ID_PFR1_EL1_Type_def)

lemma regval_ID_PFR1_Type[simp]:
  "ID_PFR1_Type_of_regval (regval_of_ID_PFR1_Type v) = Some v"
  by (auto simp: ID_PFR1_Type_of_regval_def regval_of_ID_PFR1_Type_def)

lemma regval_ID_PFR2_EL1_Type[simp]:
  "ID_PFR2_EL1_Type_of_regval (regval_of_ID_PFR2_EL1_Type v) = Some v"
  by (auto simp: ID_PFR2_EL1_Type_of_regval_def regval_of_ID_PFR2_EL1_Type_def)

lemma regval_ID_PFR2_Type[simp]:
  "ID_PFR2_Type_of_regval (regval_of_ID_PFR2_Type v) = Some v"
  by (auto simp: ID_PFR2_Type_of_regval_def regval_of_ID_PFR2_Type_def)

lemma regval_IFSR32_EL2_Type[simp]:
  "IFSR32_EL2_Type_of_regval (regval_of_IFSR32_EL2_Type v) = Some v"
  by (auto simp: IFSR32_EL2_Type_of_regval_def regval_of_IFSR32_EL2_Type_def)

lemma regval_IFSR_Type[simp]:
  "IFSR_Type_of_regval (regval_of_IFSR_Type v) = Some v"
  by (auto simp: IFSR_Type_of_regval_def regval_of_IFSR_Type_def)

lemma regval_ISR_EL1_Type[simp]:
  "ISR_EL1_Type_of_regval (regval_of_ISR_EL1_Type v) = Some v"
  by (auto simp: ISR_EL1_Type_of_regval_def regval_of_ISR_EL1_Type_def)

lemma regval_ISR_Type[simp]:
  "ISR_Type_of_regval (regval_of_ISR_Type v) = Some v"
  by (auto simp: ISR_Type_of_regval_def regval_of_ISR_Type_def)

lemma regval_LORC_EL1_Type[simp]:
  "LORC_EL1_Type_of_regval (regval_of_LORC_EL1_Type v) = Some v"
  by (auto simp: LORC_EL1_Type_of_regval_def regval_of_LORC_EL1_Type_def)

lemma regval_LOREA_EL1_Type[simp]:
  "LOREA_EL1_Type_of_regval (regval_of_LOREA_EL1_Type v) = Some v"
  by (auto simp: LOREA_EL1_Type_of_regval_def regval_of_LOREA_EL1_Type_def)

lemma regval_LORID_EL1_Type[simp]:
  "LORID_EL1_Type_of_regval (regval_of_LORID_EL1_Type v) = Some v"
  by (auto simp: LORID_EL1_Type_of_regval_def regval_of_LORID_EL1_Type_def)

lemma regval_LORN_EL1_Type[simp]:
  "LORN_EL1_Type_of_regval (regval_of_LORN_EL1_Type v) = Some v"
  by (auto simp: LORN_EL1_Type_of_regval_def regval_of_LORN_EL1_Type_def)

lemma regval_LORSA_EL1_Type[simp]:
  "LORSA_EL1_Type_of_regval (regval_of_LORSA_EL1_Type v) = Some v"
  by (auto simp: LORSA_EL1_Type_of_regval_def regval_of_LORSA_EL1_Type_def)

lemma regval_MAIR0_Type[simp]:
  "MAIR0_Type_of_regval (regval_of_MAIR0_Type v) = Some v"
  by (auto simp: MAIR0_Type_of_regval_def regval_of_MAIR0_Type_def)

lemma regval_MAIR1_Type[simp]:
  "MAIR1_Type_of_regval (regval_of_MAIR1_Type v) = Some v"
  by (auto simp: MAIR1_Type_of_regval_def regval_of_MAIR1_Type_def)

lemma regval_MAIR2_EL1_Type[simp]:
  "MAIR2_EL1_Type_of_regval (regval_of_MAIR2_EL1_Type v) = Some v"
  by (auto simp: MAIR2_EL1_Type_of_regval_def regval_of_MAIR2_EL1_Type_def)

lemma regval_MAIR2_EL2_Type[simp]:
  "MAIR2_EL2_Type_of_regval (regval_of_MAIR2_EL2_Type v) = Some v"
  by (auto simp: MAIR2_EL2_Type_of_regval_def regval_of_MAIR2_EL2_Type_def)

lemma regval_MAIR2_EL3_Type[simp]:
  "MAIR2_EL3_Type_of_regval (regval_of_MAIR2_EL3_Type v) = Some v"
  by (auto simp: MAIR2_EL3_Type_of_regval_def regval_of_MAIR2_EL3_Type_def)

lemma regval_MAIR_EL1_Type[simp]:
  "MAIR_EL1_Type_of_regval (regval_of_MAIR_EL1_Type v) = Some v"
  by (auto simp: MAIR_EL1_Type_of_regval_def regval_of_MAIR_EL1_Type_def)

lemma regval_MAIR_EL2_Type[simp]:
  "MAIR_EL2_Type_of_regval (regval_of_MAIR_EL2_Type v) = Some v"
  by (auto simp: MAIR_EL2_Type_of_regval_def regval_of_MAIR_EL2_Type_def)

lemma regval_MAIR_EL3_Type[simp]:
  "MAIR_EL3_Type_of_regval (regval_of_MAIR_EL3_Type v) = Some v"
  by (auto simp: MAIR_EL3_Type_of_regval_def regval_of_MAIR_EL3_Type_def)

lemma regval_MDCCINT_EL1_Type[simp]:
  "MDCCINT_EL1_Type_of_regval (regval_of_MDCCINT_EL1_Type v) = Some v"
  by (auto simp: MDCCINT_EL1_Type_of_regval_def regval_of_MDCCINT_EL1_Type_def)

lemma regval_MDCCSR_EL0_Type[simp]:
  "MDCCSR_EL0_Type_of_regval (regval_of_MDCCSR_EL0_Type v) = Some v"
  by (auto simp: MDCCSR_EL0_Type_of_regval_def regval_of_MDCCSR_EL0_Type_def)

lemma regval_MDCR_EL2_Type[simp]:
  "MDCR_EL2_Type_of_regval (regval_of_MDCR_EL2_Type v) = Some v"
  by (auto simp: MDCR_EL2_Type_of_regval_def regval_of_MDCR_EL2_Type_def)

lemma regval_MDCR_EL3_Type[simp]:
  "MDCR_EL3_Type_of_regval (regval_of_MDCR_EL3_Type v) = Some v"
  by (auto simp: MDCR_EL3_Type_of_regval_def regval_of_MDCR_EL3_Type_def)

lemma regval_MDRAR_EL1_Type[simp]:
  "MDRAR_EL1_Type_of_regval (regval_of_MDRAR_EL1_Type v) = Some v"
  by (auto simp: MDRAR_EL1_Type_of_regval_def regval_of_MDRAR_EL1_Type_def)

lemma regval_MDSCR_EL1_Type[simp]:
  "MDSCR_EL1_Type_of_regval (regval_of_MDSCR_EL1_Type v) = Some v"
  by (auto simp: MDSCR_EL1_Type_of_regval_def regval_of_MDSCR_EL1_Type_def)

lemma regval_MDSELR_EL1_Type[simp]:
  "MDSELR_EL1_Type_of_regval (regval_of_MDSELR_EL1_Type v) = Some v"
  by (auto simp: MDSELR_EL1_Type_of_regval_def regval_of_MDSELR_EL1_Type_def)

lemma regval_MECIDR_EL2_Type[simp]:
  "MECIDR_EL2_Type_of_regval (regval_of_MECIDR_EL2_Type v) = Some v"
  by (auto simp: MECIDR_EL2_Type_of_regval_def regval_of_MECIDR_EL2_Type_def)

lemma regval_MECID_A0_EL2_Type[simp]:
  "MECID_A0_EL2_Type_of_regval (regval_of_MECID_A0_EL2_Type v) = Some v"
  by (auto simp: MECID_A0_EL2_Type_of_regval_def regval_of_MECID_A0_EL2_Type_def)

lemma regval_MECID_A1_EL2_Type[simp]:
  "MECID_A1_EL2_Type_of_regval (regval_of_MECID_A1_EL2_Type v) = Some v"
  by (auto simp: MECID_A1_EL2_Type_of_regval_def regval_of_MECID_A1_EL2_Type_def)

lemma regval_MECID_P0_EL2_Type[simp]:
  "MECID_P0_EL2_Type_of_regval (regval_of_MECID_P0_EL2_Type v) = Some v"
  by (auto simp: MECID_P0_EL2_Type_of_regval_def regval_of_MECID_P0_EL2_Type_def)

lemma regval_MECID_P1_EL2_Type[simp]:
  "MECID_P1_EL2_Type_of_regval (regval_of_MECID_P1_EL2_Type v) = Some v"
  by (auto simp: MECID_P1_EL2_Type_of_regval_def regval_of_MECID_P1_EL2_Type_def)

lemma regval_MECID_RL_A_EL3_Type[simp]:
  "MECID_RL_A_EL3_Type_of_regval (regval_of_MECID_RL_A_EL3_Type v) = Some v"
  by (auto simp: MECID_RL_A_EL3_Type_of_regval_def regval_of_MECID_RL_A_EL3_Type_def)

lemma regval_MFAR_EL3_Type[simp]:
  "MFAR_EL3_Type_of_regval (regval_of_MFAR_EL3_Type v) = Some v"
  by (auto simp: MFAR_EL3_Type_of_regval_def regval_of_MFAR_EL3_Type_def)

lemma regval_MIDR_EL1_Type[simp]:
  "MIDR_EL1_Type_of_regval (regval_of_MIDR_EL1_Type v) = Some v"
  by (auto simp: MIDR_EL1_Type_of_regval_def regval_of_MIDR_EL1_Type_def)

lemma regval_MIDR_Type[simp]:
  "MIDR_Type_of_regval (regval_of_MIDR_Type v) = Some v"
  by (auto simp: MIDR_Type_of_regval_def regval_of_MIDR_Type_def)

lemma regval_MPAM0_EL1_Type[simp]:
  "MPAM0_EL1_Type_of_regval (regval_of_MPAM0_EL1_Type v) = Some v"
  by (auto simp: MPAM0_EL1_Type_of_regval_def regval_of_MPAM0_EL1_Type_def)

lemma regval_MPAM1_EL1_Type[simp]:
  "MPAM1_EL1_Type_of_regval (regval_of_MPAM1_EL1_Type v) = Some v"
  by (auto simp: MPAM1_EL1_Type_of_regval_def regval_of_MPAM1_EL1_Type_def)

lemma regval_MPAM2_EL2_Type[simp]:
  "MPAM2_EL2_Type_of_regval (regval_of_MPAM2_EL2_Type v) = Some v"
  by (auto simp: MPAM2_EL2_Type_of_regval_def regval_of_MPAM2_EL2_Type_def)

lemma regval_MPAM3_EL3_Type[simp]:
  "MPAM3_EL3_Type_of_regval (regval_of_MPAM3_EL3_Type v) = Some v"
  by (auto simp: MPAM3_EL3_Type_of_regval_def regval_of_MPAM3_EL3_Type_def)

lemma regval_MPAMHCR_EL2_Type[simp]:
  "MPAMHCR_EL2_Type_of_regval (regval_of_MPAMHCR_EL2_Type v) = Some v"
  by (auto simp: MPAMHCR_EL2_Type_of_regval_def regval_of_MPAMHCR_EL2_Type_def)

lemma regval_MPAMIDR_EL1_Type[simp]:
  "MPAMIDR_EL1_Type_of_regval (regval_of_MPAMIDR_EL1_Type v) = Some v"
  by (auto simp: MPAMIDR_EL1_Type_of_regval_def regval_of_MPAMIDR_EL1_Type_def)

lemma regval_MPAMSM_EL1_Type[simp]:
  "MPAMSM_EL1_Type_of_regval (regval_of_MPAMSM_EL1_Type v) = Some v"
  by (auto simp: MPAMSM_EL1_Type_of_regval_def regval_of_MPAMSM_EL1_Type_def)

lemma regval_MPAMVPM0_EL2_Type[simp]:
  "MPAMVPM0_EL2_Type_of_regval (regval_of_MPAMVPM0_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM0_EL2_Type_of_regval_def regval_of_MPAMVPM0_EL2_Type_def)

lemma regval_MPAMVPM1_EL2_Type[simp]:
  "MPAMVPM1_EL2_Type_of_regval (regval_of_MPAMVPM1_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM1_EL2_Type_of_regval_def regval_of_MPAMVPM1_EL2_Type_def)

lemma regval_MPAMVPM2_EL2_Type[simp]:
  "MPAMVPM2_EL2_Type_of_regval (regval_of_MPAMVPM2_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM2_EL2_Type_of_regval_def regval_of_MPAMVPM2_EL2_Type_def)

lemma regval_MPAMVPM3_EL2_Type[simp]:
  "MPAMVPM3_EL2_Type_of_regval (regval_of_MPAMVPM3_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM3_EL2_Type_of_regval_def regval_of_MPAMVPM3_EL2_Type_def)

lemma regval_MPAMVPM4_EL2_Type[simp]:
  "MPAMVPM4_EL2_Type_of_regval (regval_of_MPAMVPM4_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM4_EL2_Type_of_regval_def regval_of_MPAMVPM4_EL2_Type_def)

lemma regval_MPAMVPM5_EL2_Type[simp]:
  "MPAMVPM5_EL2_Type_of_regval (regval_of_MPAMVPM5_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM5_EL2_Type_of_regval_def regval_of_MPAMVPM5_EL2_Type_def)

lemma regval_MPAMVPM6_EL2_Type[simp]:
  "MPAMVPM6_EL2_Type_of_regval (regval_of_MPAMVPM6_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM6_EL2_Type_of_regval_def regval_of_MPAMVPM6_EL2_Type_def)

lemma regval_MPAMVPM7_EL2_Type[simp]:
  "MPAMVPM7_EL2_Type_of_regval (regval_of_MPAMVPM7_EL2_Type v) = Some v"
  by (auto simp: MPAMVPM7_EL2_Type_of_regval_def regval_of_MPAMVPM7_EL2_Type_def)

lemma regval_MPAMVPMV_EL2_Type[simp]:
  "MPAMVPMV_EL2_Type_of_regval (regval_of_MPAMVPMV_EL2_Type v) = Some v"
  by (auto simp: MPAMVPMV_EL2_Type_of_regval_def regval_of_MPAMVPMV_EL2_Type_def)

lemma regval_MPIDR_EL1_Type[simp]:
  "MPIDR_EL1_Type_of_regval (regval_of_MPIDR_EL1_Type v) = Some v"
  by (auto simp: MPIDR_EL1_Type_of_regval_def regval_of_MPIDR_EL1_Type_def)

lemma regval_MPIDR_Type[simp]:
  "MPIDR_Type_of_regval (regval_of_MPIDR_Type v) = Some v"
  by (auto simp: MPIDR_Type_of_regval_def regval_of_MPIDR_Type_def)

lemma regval_MVBAR_Type[simp]:
  "MVBAR_Type_of_regval (regval_of_MVBAR_Type v) = Some v"
  by (auto simp: MVBAR_Type_of_regval_def regval_of_MVBAR_Type_def)

lemma regval_MVFR0_EL1_Type[simp]:
  "MVFR0_EL1_Type_of_regval (regval_of_MVFR0_EL1_Type v) = Some v"
  by (auto simp: MVFR0_EL1_Type_of_regval_def regval_of_MVFR0_EL1_Type_def)

lemma regval_MVFR0_Type[simp]:
  "MVFR0_Type_of_regval (regval_of_MVFR0_Type v) = Some v"
  by (auto simp: MVFR0_Type_of_regval_def regval_of_MVFR0_Type_def)

lemma regval_MVFR1_EL1_Type[simp]:
  "MVFR1_EL1_Type_of_regval (regval_of_MVFR1_EL1_Type v) = Some v"
  by (auto simp: MVFR1_EL1_Type_of_regval_def regval_of_MVFR1_EL1_Type_def)

lemma regval_MVFR1_Type[simp]:
  "MVFR1_Type_of_regval (regval_of_MVFR1_Type v) = Some v"
  by (auto simp: MVFR1_Type_of_regval_def regval_of_MVFR1_Type_def)

lemma regval_MVFR2_EL1_Type[simp]:
  "MVFR2_EL1_Type_of_regval (regval_of_MVFR2_EL1_Type v) = Some v"
  by (auto simp: MVFR2_EL1_Type_of_regval_def regval_of_MVFR2_EL1_Type_def)

lemma regval_MVFR2_Type[simp]:
  "MVFR2_Type_of_regval (regval_of_MVFR2_Type v) = Some v"
  by (auto simp: MVFR2_Type_of_regval_def regval_of_MVFR2_Type_def)

lemma regval_NMRR_Type[simp]:
  "NMRR_Type_of_regval (regval_of_NMRR_Type v) = Some v"
  by (auto simp: NMRR_Type_of_regval_def regval_of_NMRR_Type_def)

lemma regval_NSACR_Type[simp]:
  "NSACR_Type_of_regval (regval_of_NSACR_Type v) = Some v"
  by (auto simp: NSACR_Type_of_regval_def regval_of_NSACR_Type_def)

lemma regval_OSDLR_EL1_Type[simp]:
  "OSDLR_EL1_Type_of_regval (regval_of_OSDLR_EL1_Type v) = Some v"
  by (auto simp: OSDLR_EL1_Type_of_regval_def regval_of_OSDLR_EL1_Type_def)

lemma regval_OSECCR_EL1_Type[simp]:
  "OSECCR_EL1_Type_of_regval (regval_of_OSECCR_EL1_Type v) = Some v"
  by (auto simp: OSECCR_EL1_Type_of_regval_def regval_of_OSECCR_EL1_Type_def)

lemma regval_OSLAR_EL1_Type[simp]:
  "OSLAR_EL1_Type_of_regval (regval_of_OSLAR_EL1_Type v) = Some v"
  by (auto simp: OSLAR_EL1_Type_of_regval_def regval_of_OSLAR_EL1_Type_def)

lemma regval_OSLSR_EL1_Type[simp]:
  "OSLSR_EL1_Type_of_regval (regval_of_OSLSR_EL1_Type v) = Some v"
  by (auto simp: OSLSR_EL1_Type_of_regval_def regval_of_OSLSR_EL1_Type_def)

lemma regval_PAR_EL1_Type[simp]:
  "PAR_EL1_Type_of_regval (regval_of_PAR_EL1_Type v) = Some v"
  by (auto simp: PAR_EL1_Type_of_regval_def regval_of_PAR_EL1_Type_def)

lemma regval_PAR_Type[simp]:
  "PAR_Type_of_regval (regval_of_PAR_Type v) = Some v"
  by (auto simp: PAR_Type_of_regval_def regval_of_PAR_Type_def)

lemma regval_PFAR_EL1_Type[simp]:
  "PFAR_EL1_Type_of_regval (regval_of_PFAR_EL1_Type v) = Some v"
  by (auto simp: PFAR_EL1_Type_of_regval_def regval_of_PFAR_EL1_Type_def)

lemma regval_PFAR_EL2_Type[simp]:
  "PFAR_EL2_Type_of_regval (regval_of_PFAR_EL2_Type v) = Some v"
  by (auto simp: PFAR_EL2_Type_of_regval_def regval_of_PFAR_EL2_Type_def)

lemma regval_PIRE0_EL1_Type[simp]:
  "PIRE0_EL1_Type_of_regval (regval_of_PIRE0_EL1_Type v) = Some v"
  by (auto simp: PIRE0_EL1_Type_of_regval_def regval_of_PIRE0_EL1_Type_def)

lemma regval_PIRE0_EL2_Type[simp]:
  "PIRE0_EL2_Type_of_regval (regval_of_PIRE0_EL2_Type v) = Some v"
  by (auto simp: PIRE0_EL2_Type_of_regval_def regval_of_PIRE0_EL2_Type_def)

lemma regval_PIR_EL1_Type[simp]:
  "PIR_EL1_Type_of_regval (regval_of_PIR_EL1_Type v) = Some v"
  by (auto simp: PIR_EL1_Type_of_regval_def regval_of_PIR_EL1_Type_def)

lemma regval_PIR_EL2_Type[simp]:
  "PIR_EL2_Type_of_regval (regval_of_PIR_EL2_Type v) = Some v"
  by (auto simp: PIR_EL2_Type_of_regval_def regval_of_PIR_EL2_Type_def)

lemma regval_PIR_EL3_Type[simp]:
  "PIR_EL3_Type_of_regval (regval_of_PIR_EL3_Type v) = Some v"
  by (auto simp: PIR_EL3_Type_of_regval_def regval_of_PIR_EL3_Type_def)

lemma regval_PMAUTHSTATUS_Type[simp]:
  "PMAUTHSTATUS_Type_of_regval (regval_of_PMAUTHSTATUS_Type v) = Some v"
  by (auto simp: PMAUTHSTATUS_Type_of_regval_def regval_of_PMAUTHSTATUS_Type_def)

lemma regval_PMBIDR_EL1_Type[simp]:
  "PMBIDR_EL1_Type_of_regval (regval_of_PMBIDR_EL1_Type v) = Some v"
  by (auto simp: PMBIDR_EL1_Type_of_regval_def regval_of_PMBIDR_EL1_Type_def)

lemma regval_PMBLIMITR_EL1_Type[simp]:
  "PMBLIMITR_EL1_Type_of_regval (regval_of_PMBLIMITR_EL1_Type v) = Some v"
  by (auto simp: PMBLIMITR_EL1_Type_of_regval_def regval_of_PMBLIMITR_EL1_Type_def)

lemma regval_PMBPTR_EL1_Type[simp]:
  "PMBPTR_EL1_Type_of_regval (regval_of_PMBPTR_EL1_Type v) = Some v"
  by (auto simp: PMBPTR_EL1_Type_of_regval_def regval_of_PMBPTR_EL1_Type_def)

lemma regval_PMBSR_EL1_Type[simp]:
  "PMBSR_EL1_Type_of_regval (regval_of_PMBSR_EL1_Type v) = Some v"
  by (auto simp: PMBSR_EL1_Type_of_regval_def regval_of_PMBSR_EL1_Type_def)

lemma regval_PMCCFILTR_EL0_Type[simp]:
  "PMCCFILTR_EL0_Type_of_regval (regval_of_PMCCFILTR_EL0_Type v) = Some v"
  by (auto simp: PMCCFILTR_EL0_Type_of_regval_def regval_of_PMCCFILTR_EL0_Type_def)

lemma regval_PMCCFILTR_Type[simp]:
  "PMCCFILTR_Type_of_regval (regval_of_PMCCFILTR_Type v) = Some v"
  by (auto simp: PMCCFILTR_Type_of_regval_def regval_of_PMCCFILTR_Type_def)

lemma regval_PMCCNTR_EL0_Type[simp]:
  "PMCCNTR_EL0_Type_of_regval (regval_of_PMCCNTR_EL0_Type v) = Some v"
  by (auto simp: PMCCNTR_EL0_Type_of_regval_def regval_of_PMCCNTR_EL0_Type_def)

lemma regval_PMCCNTR_Type[simp]:
  "PMCCNTR_Type_of_regval (regval_of_PMCCNTR_Type v) = Some v"
  by (auto simp: PMCCNTR_Type_of_regval_def regval_of_PMCCNTR_Type_def)

lemma regval_PMCCNTSVR_EL1_Type[simp]:
  "PMCCNTSVR_EL1_Type_of_regval (regval_of_PMCCNTSVR_EL1_Type v) = Some v"
  by (auto simp: PMCCNTSVR_EL1_Type_of_regval_def regval_of_PMCCNTSVR_EL1_Type_def)

lemma regval_PMCEID0_EL0_Type[simp]:
  "PMCEID0_EL0_Type_of_regval (regval_of_PMCEID0_EL0_Type v) = Some v"
  by (auto simp: PMCEID0_EL0_Type_of_regval_def regval_of_PMCEID0_EL0_Type_def)

lemma regval_PMCEID0_Type[simp]:
  "PMCEID0_Type_of_regval (regval_of_PMCEID0_Type v) = Some v"
  by (auto simp: PMCEID0_Type_of_regval_def regval_of_PMCEID0_Type_def)

lemma regval_PMCEID1_EL0_Type[simp]:
  "PMCEID1_EL0_Type_of_regval (regval_of_PMCEID1_EL0_Type v) = Some v"
  by (auto simp: PMCEID1_EL0_Type_of_regval_def regval_of_PMCEID1_EL0_Type_def)

lemma regval_PMCEID1_Type[simp]:
  "PMCEID1_Type_of_regval (regval_of_PMCEID1_Type v) = Some v"
  by (auto simp: PMCEID1_Type_of_regval_def regval_of_PMCEID1_Type_def)

lemma regval_PMCEID2_Type[simp]:
  "PMCEID2_Type_of_regval (regval_of_PMCEID2_Type v) = Some v"
  by (auto simp: PMCEID2_Type_of_regval_def regval_of_PMCEID2_Type_def)

lemma regval_PMCEID3_Type[simp]:
  "PMCEID3_Type_of_regval (regval_of_PMCEID3_Type v) = Some v"
  by (auto simp: PMCEID3_Type_of_regval_def regval_of_PMCEID3_Type_def)

lemma regval_PMCFGR_Type[simp]:
  "PMCFGR_Type_of_regval (regval_of_PMCFGR_Type v) = Some v"
  by (auto simp: PMCFGR_Type_of_regval_def regval_of_PMCFGR_Type_def)

lemma regval_PMCGCR0_Type[simp]:
  "PMCGCR0_Type_of_regval (regval_of_PMCGCR0_Type v) = Some v"
  by (auto simp: PMCGCR0_Type_of_regval_def regval_of_PMCGCR0_Type_def)

lemma regval_PMCIDR0_Type[simp]:
  "PMCIDR0_Type_of_regval (regval_of_PMCIDR0_Type v) = Some v"
  by (auto simp: PMCIDR0_Type_of_regval_def regval_of_PMCIDR0_Type_def)

lemma regval_PMCIDR1_Type[simp]:
  "PMCIDR1_Type_of_regval (regval_of_PMCIDR1_Type v) = Some v"
  by (auto simp: PMCIDR1_Type_of_regval_def regval_of_PMCIDR1_Type_def)

lemma regval_PMCIDR2_Type[simp]:
  "PMCIDR2_Type_of_regval (regval_of_PMCIDR2_Type v) = Some v"
  by (auto simp: PMCIDR2_Type_of_regval_def regval_of_PMCIDR2_Type_def)

lemma regval_PMCIDR3_Type[simp]:
  "PMCIDR3_Type_of_regval (regval_of_PMCIDR3_Type v) = Some v"
  by (auto simp: PMCIDR3_Type_of_regval_def regval_of_PMCIDR3_Type_def)

lemma regval_PMCNTENCLR_EL0_Type[simp]:
  "PMCNTENCLR_EL0_Type_of_regval (regval_of_PMCNTENCLR_EL0_Type v) = Some v"
  by (auto simp: PMCNTENCLR_EL0_Type_of_regval_def regval_of_PMCNTENCLR_EL0_Type_def)

lemma regval_PMCNTENCLR_Type[simp]:
  "PMCNTENCLR_Type_of_regval (regval_of_PMCNTENCLR_Type v) = Some v"
  by (auto simp: PMCNTENCLR_Type_of_regval_def regval_of_PMCNTENCLR_Type_def)

lemma regval_PMCNTENSET_EL0_Type[simp]:
  "PMCNTENSET_EL0_Type_of_regval (regval_of_PMCNTENSET_EL0_Type v) = Some v"
  by (auto simp: PMCNTENSET_EL0_Type_of_regval_def regval_of_PMCNTENSET_EL0_Type_def)

lemma regval_PMCNTENSET_Type[simp]:
  "PMCNTENSET_Type_of_regval (regval_of_PMCNTENSET_Type v) = Some v"
  by (auto simp: PMCNTENSET_Type_of_regval_def regval_of_PMCNTENSET_Type_def)

lemma regval_PMCNTEN_Type[simp]:
  "PMCNTEN_Type_of_regval (regval_of_PMCNTEN_Type v) = Some v"
  by (auto simp: PMCNTEN_Type_of_regval_def regval_of_PMCNTEN_Type_def)

lemma regval_PMCR_EL0_Type[simp]:
  "PMCR_EL0_Type_of_regval (regval_of_PMCR_EL0_Type v) = Some v"
  by (auto simp: PMCR_EL0_Type_of_regval_def regval_of_PMCR_EL0_Type_def)

lemma regval_PMCR_Type[simp]:
  "PMCR_Type_of_regval (regval_of_PMCR_Type v) = Some v"
  by (auto simp: PMCR_Type_of_regval_def regval_of_PMCR_Type_def)

lemma regval_PMDEVID_Type[simp]:
  "PMDEVID_Type_of_regval (regval_of_PMDEVID_Type v) = Some v"
  by (auto simp: PMDEVID_Type_of_regval_def regval_of_PMDEVID_Type_def)

lemma regval_PMDEVTYPE_Type[simp]:
  "PMDEVTYPE_Type_of_regval (regval_of_PMDEVTYPE_Type v) = Some v"
  by (auto simp: PMDEVTYPE_Type_of_regval_def regval_of_PMDEVTYPE_Type_def)

lemma regval_PMECR_EL1_Type[simp]:
  "PMECR_EL1_Type_of_regval (regval_of_PMECR_EL1_Type v) = Some v"
  by (auto simp: PMECR_EL1_Type_of_regval_def regval_of_PMECR_EL1_Type_def)

lemma regval_PMEVCNTSVR_EL1_Type[simp]:
  "PMEVCNTSVR_EL1_Type_of_regval (regval_of_PMEVCNTSVR_EL1_Type v) = Some v"
  by (auto simp: PMEVCNTSVR_EL1_Type_of_regval_def regval_of_PMEVCNTSVR_EL1_Type_def)

lemma regval_PMEVTYPER_EL0_Type[simp]:
  "PMEVTYPER_EL0_Type_of_regval (regval_of_PMEVTYPER_EL0_Type v) = Some v"
  by (auto simp: PMEVTYPER_EL0_Type_of_regval_def regval_of_PMEVTYPER_EL0_Type_def)

lemma regval_PMEVTYPER_Type[simp]:
  "PMEVTYPER_Type_of_regval (regval_of_PMEVTYPER_Type v) = Some v"
  by (auto simp: PMEVTYPER_Type_of_regval_def regval_of_PMEVTYPER_Type_def)

lemma regval_PMIAR_EL1_Type[simp]:
  "PMIAR_EL1_Type_of_regval (regval_of_PMIAR_EL1_Type v) = Some v"
  by (auto simp: PMIAR_EL1_Type_of_regval_def regval_of_PMIAR_EL1_Type_def)

lemma regval_PMICFILTR_EL0_Type[simp]:
  "PMICFILTR_EL0_Type_of_regval (regval_of_PMICFILTR_EL0_Type v) = Some v"
  by (auto simp: PMICFILTR_EL0_Type_of_regval_def regval_of_PMICFILTR_EL0_Type_def)

lemma regval_PMICNTR_EL0_Type[simp]:
  "PMICNTR_EL0_Type_of_regval (regval_of_PMICNTR_EL0_Type v) = Some v"
  by (auto simp: PMICNTR_EL0_Type_of_regval_def regval_of_PMICNTR_EL0_Type_def)

lemma regval_PMICNTSVR_EL1_Type[simp]:
  "PMICNTSVR_EL1_Type_of_regval (regval_of_PMICNTSVR_EL1_Type v) = Some v"
  by (auto simp: PMICNTSVR_EL1_Type_of_regval_def regval_of_PMICNTSVR_EL1_Type_def)

lemma regval_PMIIDR_Type[simp]:
  "PMIIDR_Type_of_regval (regval_of_PMIIDR_Type v) = Some v"
  by (auto simp: PMIIDR_Type_of_regval_def regval_of_PMIIDR_Type_def)

lemma regval_PMINTENCLR_EL1_Type[simp]:
  "PMINTENCLR_EL1_Type_of_regval (regval_of_PMINTENCLR_EL1_Type v) = Some v"
  by (auto simp: PMINTENCLR_EL1_Type_of_regval_def regval_of_PMINTENCLR_EL1_Type_def)

lemma regval_PMINTENCLR_Type[simp]:
  "PMINTENCLR_Type_of_regval (regval_of_PMINTENCLR_Type v) = Some v"
  by (auto simp: PMINTENCLR_Type_of_regval_def regval_of_PMINTENCLR_Type_def)

lemma regval_PMINTENSET_EL1_Type[simp]:
  "PMINTENSET_EL1_Type_of_regval (regval_of_PMINTENSET_EL1_Type v) = Some v"
  by (auto simp: PMINTENSET_EL1_Type_of_regval_def regval_of_PMINTENSET_EL1_Type_def)

lemma regval_PMINTENSET_Type[simp]:
  "PMINTENSET_Type_of_regval (regval_of_PMINTENSET_Type v) = Some v"
  by (auto simp: PMINTENSET_Type_of_regval_def regval_of_PMINTENSET_Type_def)

lemma regval_PMINTEN_Type[simp]:
  "PMINTEN_Type_of_regval (regval_of_PMINTEN_Type v) = Some v"
  by (auto simp: PMINTEN_Type_of_regval_def regval_of_PMINTEN_Type_def)

lemma regval_PMITCTRL_Type[simp]:
  "PMITCTRL_Type_of_regval (regval_of_PMITCTRL_Type v) = Some v"
  by (auto simp: PMITCTRL_Type_of_regval_def regval_of_PMITCTRL_Type_def)

lemma regval_PMLAR_Type[simp]:
  "PMLAR_Type_of_regval (regval_of_PMLAR_Type v) = Some v"
  by (auto simp: PMLAR_Type_of_regval_def regval_of_PMLAR_Type_def)

lemma regval_PMLSR_Type[simp]:
  "PMLSR_Type_of_regval (regval_of_PMLSR_Type v) = Some v"
  by (auto simp: PMLSR_Type_of_regval_def regval_of_PMLSR_Type_def)

lemma regval_PMMIR_EL1_Type[simp]:
  "PMMIR_EL1_Type_of_regval (regval_of_PMMIR_EL1_Type v) = Some v"
  by (auto simp: PMMIR_EL1_Type_of_regval_def regval_of_PMMIR_EL1_Type_def)

lemma regval_PMMIR_Type[simp]:
  "PMMIR_Type_of_regval (regval_of_PMMIR_Type v) = Some v"
  by (auto simp: PMMIR_Type_of_regval_def regval_of_PMMIR_Type_def)

lemma regval_PMOVSCLR_EL0_Type[simp]:
  "PMOVSCLR_EL0_Type_of_regval (regval_of_PMOVSCLR_EL0_Type v) = Some v"
  by (auto simp: PMOVSCLR_EL0_Type_of_regval_def regval_of_PMOVSCLR_EL0_Type_def)

lemma regval_PMOVSR_Type[simp]:
  "PMOVSR_Type_of_regval (regval_of_PMOVSR_Type v) = Some v"
  by (auto simp: PMOVSR_Type_of_regval_def regval_of_PMOVSR_Type_def)

lemma regval_PMOVSSET_EL0_Type[simp]:
  "PMOVSSET_EL0_Type_of_regval (regval_of_PMOVSSET_EL0_Type v) = Some v"
  by (auto simp: PMOVSSET_EL0_Type_of_regval_def regval_of_PMOVSSET_EL0_Type_def)

lemma regval_PMOVSSET_Type[simp]:
  "PMOVSSET_Type_of_regval (regval_of_PMOVSSET_Type v) = Some v"
  by (auto simp: PMOVSSET_Type_of_regval_def regval_of_PMOVSSET_Type_def)

lemma regval_PMOVS_Type[simp]:
  "PMOVS_Type_of_regval (regval_of_PMOVS_Type v) = Some v"
  by (auto simp: PMOVS_Type_of_regval_def regval_of_PMOVS_Type_def)

lemma regval_PMPCSCTL_Type[simp]:
  "PMPCSCTL_Type_of_regval (regval_of_PMPCSCTL_Type v) = Some v"
  by (auto simp: PMPCSCTL_Type_of_regval_def regval_of_PMPCSCTL_Type_def)

lemma regval_PMPCSR_Type[simp]:
  "PMPCSR_Type_of_regval (regval_of_PMPCSR_Type v) = Some v"
  by (auto simp: PMPCSR_Type_of_regval_def regval_of_PMPCSR_Type_def)

lemma regval_PMPIDR0_Type[simp]:
  "PMPIDR0_Type_of_regval (regval_of_PMPIDR0_Type v) = Some v"
  by (auto simp: PMPIDR0_Type_of_regval_def regval_of_PMPIDR0_Type_def)

lemma regval_PMPIDR1_Type[simp]:
  "PMPIDR1_Type_of_regval (regval_of_PMPIDR1_Type v) = Some v"
  by (auto simp: PMPIDR1_Type_of_regval_def regval_of_PMPIDR1_Type_def)

lemma regval_PMPIDR2_Type[simp]:
  "PMPIDR2_Type_of_regval (regval_of_PMPIDR2_Type v) = Some v"
  by (auto simp: PMPIDR2_Type_of_regval_def regval_of_PMPIDR2_Type_def)

lemma regval_PMPIDR3_Type[simp]:
  "PMPIDR3_Type_of_regval (regval_of_PMPIDR3_Type v) = Some v"
  by (auto simp: PMPIDR3_Type_of_regval_def regval_of_PMPIDR3_Type_def)

lemma regval_PMPIDR4_Type[simp]:
  "PMPIDR4_Type_of_regval (regval_of_PMPIDR4_Type v) = Some v"
  by (auto simp: PMPIDR4_Type_of_regval_def regval_of_PMPIDR4_Type_def)

lemma regval_PMSCR_EL1_Type[simp]:
  "PMSCR_EL1_Type_of_regval (regval_of_PMSCR_EL1_Type v) = Some v"
  by (auto simp: PMSCR_EL1_Type_of_regval_def regval_of_PMSCR_EL1_Type_def)

lemma regval_PMSCR_EL2_Type[simp]:
  "PMSCR_EL2_Type_of_regval (regval_of_PMSCR_EL2_Type v) = Some v"
  by (auto simp: PMSCR_EL2_Type_of_regval_def regval_of_PMSCR_EL2_Type_def)

lemma regval_PMSDSFR_EL1_Type[simp]:
  "PMSDSFR_EL1_Type_of_regval (regval_of_PMSDSFR_EL1_Type v) = Some v"
  by (auto simp: PMSDSFR_EL1_Type_of_regval_def regval_of_PMSDSFR_EL1_Type_def)

lemma regval_PMSELR_EL0_Type[simp]:
  "PMSELR_EL0_Type_of_regval (regval_of_PMSELR_EL0_Type v) = Some v"
  by (auto simp: PMSELR_EL0_Type_of_regval_def regval_of_PMSELR_EL0_Type_def)

lemma regval_PMSELR_Type[simp]:
  "PMSELR_Type_of_regval (regval_of_PMSELR_Type v) = Some v"
  by (auto simp: PMSELR_Type_of_regval_def regval_of_PMSELR_Type_def)

lemma regval_PMSEVFR_EL1_Type[simp]:
  "PMSEVFR_EL1_Type_of_regval (regval_of_PMSEVFR_EL1_Type v) = Some v"
  by (auto simp: PMSEVFR_EL1_Type_of_regval_def regval_of_PMSEVFR_EL1_Type_def)

lemma regval_PMSFCR_EL1_Type[simp]:
  "PMSFCR_EL1_Type_of_regval (regval_of_PMSFCR_EL1_Type v) = Some v"
  by (auto simp: PMSFCR_EL1_Type_of_regval_def regval_of_PMSFCR_EL1_Type_def)

lemma regval_PMSICR_EL1_Type[simp]:
  "PMSICR_EL1_Type_of_regval (regval_of_PMSICR_EL1_Type v) = Some v"
  by (auto simp: PMSICR_EL1_Type_of_regval_def regval_of_PMSICR_EL1_Type_def)

lemma regval_PMSIDR_EL1_Type[simp]:
  "PMSIDR_EL1_Type_of_regval (regval_of_PMSIDR_EL1_Type v) = Some v"
  by (auto simp: PMSIDR_EL1_Type_of_regval_def regval_of_PMSIDR_EL1_Type_def)

lemma regval_PMSIRR_EL1_Type[simp]:
  "PMSIRR_EL1_Type_of_regval (regval_of_PMSIRR_EL1_Type v) = Some v"
  by (auto simp: PMSIRR_EL1_Type_of_regval_def regval_of_PMSIRR_EL1_Type_def)

lemma regval_PMSLATFR_EL1_Type[simp]:
  "PMSLATFR_EL1_Type_of_regval (regval_of_PMSLATFR_EL1_Type v) = Some v"
  by (auto simp: PMSLATFR_EL1_Type_of_regval_def regval_of_PMSLATFR_EL1_Type_def)

lemma regval_PMSNEVFR_EL1_Type[simp]:
  "PMSNEVFR_EL1_Type_of_regval (regval_of_PMSNEVFR_EL1_Type v) = Some v"
  by (auto simp: PMSNEVFR_EL1_Type_of_regval_def regval_of_PMSNEVFR_EL1_Type_def)

lemma regval_PMSSCR_EL1_Type[simp]:
  "PMSSCR_EL1_Type_of_regval (regval_of_PMSSCR_EL1_Type v) = Some v"
  by (auto simp: PMSSCR_EL1_Type_of_regval_def regval_of_PMSSCR_EL1_Type_def)

lemma regval_PMSWINC_EL0_Type[simp]:
  "PMSWINC_EL0_Type_of_regval (regval_of_PMSWINC_EL0_Type v) = Some v"
  by (auto simp: PMSWINC_EL0_Type_of_regval_def regval_of_PMSWINC_EL0_Type_def)

lemma regval_PMSWINC_Type[simp]:
  "PMSWINC_Type_of_regval (regval_of_PMSWINC_Type v) = Some v"
  by (auto simp: PMSWINC_Type_of_regval_def regval_of_PMSWINC_Type_def)

lemma regval_PMUACR_EL1_Type[simp]:
  "PMUACR_EL1_Type_of_regval (regval_of_PMUACR_EL1_Type v) = Some v"
  by (auto simp: PMUACR_EL1_Type_of_regval_def regval_of_PMUACR_EL1_Type_def)

lemma regval_PMUSERENR_EL0_Type[simp]:
  "PMUSERENR_EL0_Type_of_regval (regval_of_PMUSERENR_EL0_Type v) = Some v"
  by (auto simp: PMUSERENR_EL0_Type_of_regval_def regval_of_PMUSERENR_EL0_Type_def)

lemma regval_PMUSERENR_Type[simp]:
  "PMUSERENR_Type_of_regval (regval_of_PMUSERENR_Type v) = Some v"
  by (auto simp: PMUSERENR_Type_of_regval_def regval_of_PMUSERENR_Type_def)

lemma regval_PMVCIDSR_Type[simp]:
  "PMVCIDSR_Type_of_regval (regval_of_PMVCIDSR_Type v) = Some v"
  by (auto simp: PMVCIDSR_Type_of_regval_def regval_of_PMVCIDSR_Type_def)

lemma regval_PMVIDSR_Type[simp]:
  "PMVIDSR_Type_of_regval (regval_of_PMVIDSR_Type v) = Some v"
  by (auto simp: PMVIDSR_Type_of_regval_def regval_of_PMVIDSR_Type_def)

lemma regval_PMXEVCNTR_EL0_Type[simp]:
  "PMXEVCNTR_EL0_Type_of_regval (regval_of_PMXEVCNTR_EL0_Type v) = Some v"
  by (auto simp: PMXEVCNTR_EL0_Type_of_regval_def regval_of_PMXEVCNTR_EL0_Type_def)

lemma regval_PMZR_EL0_Type[simp]:
  "PMZR_EL0_Type_of_regval (regval_of_PMZR_EL0_Type v) = Some v"
  by (auto simp: PMZR_EL0_Type_of_regval_def regval_of_PMZR_EL0_Type_def)

lemma regval_POR_EL0_Type[simp]:
  "POR_EL0_Type_of_regval (regval_of_POR_EL0_Type v) = Some v"
  by (auto simp: POR_EL0_Type_of_regval_def regval_of_POR_EL0_Type_def)

lemma regval_POR_EL1_Type[simp]:
  "POR_EL1_Type_of_regval (regval_of_POR_EL1_Type v) = Some v"
  by (auto simp: POR_EL1_Type_of_regval_def regval_of_POR_EL1_Type_def)

lemma regval_POR_EL2_Type[simp]:
  "POR_EL2_Type_of_regval (regval_of_POR_EL2_Type v) = Some v"
  by (auto simp: POR_EL2_Type_of_regval_def regval_of_POR_EL2_Type_def)

lemma regval_POR_EL3_Type[simp]:
  "POR_EL3_Type_of_regval (regval_of_POR_EL3_Type v) = Some v"
  by (auto simp: POR_EL3_Type_of_regval_def regval_of_POR_EL3_Type_def)

lemma regval_PRRR_Type[simp]:
  "PRRR_Type_of_regval (regval_of_PRRR_Type v) = Some v"
  by (auto simp: PRRR_Type_of_regval_def regval_of_PRRR_Type_def)

lemma regval_RCWMASK_EL1_Type[simp]:
  "RCWMASK_EL1_Type_of_regval (regval_of_RCWMASK_EL1_Type v) = Some v"
  by (auto simp: RCWMASK_EL1_Type_of_regval_def regval_of_RCWMASK_EL1_Type_def)

lemma regval_RCWSMASK_EL1_Type[simp]:
  "RCWSMASK_EL1_Type_of_regval (regval_of_RCWSMASK_EL1_Type v) = Some v"
  by (auto simp: RCWSMASK_EL1_Type_of_regval_def regval_of_RCWSMASK_EL1_Type_def)

lemma regval_RGSR_EL1_Type[simp]:
  "RGSR_EL1_Type_of_regval (regval_of_RGSR_EL1_Type v) = Some v"
  by (auto simp: RGSR_EL1_Type_of_regval_def regval_of_RGSR_EL1_Type_def)

lemma regval_RMR_EL1_Type[simp]:
  "RMR_EL1_Type_of_regval (regval_of_RMR_EL1_Type v) = Some v"
  by (auto simp: RMR_EL1_Type_of_regval_def regval_of_RMR_EL1_Type_def)

lemma regval_RMR_EL2_Type[simp]:
  "RMR_EL2_Type_of_regval (regval_of_RMR_EL2_Type v) = Some v"
  by (auto simp: RMR_EL2_Type_of_regval_def regval_of_RMR_EL2_Type_def)

lemma regval_RMR_EL3_Type[simp]:
  "RMR_EL3_Type_of_regval (regval_of_RMR_EL3_Type v) = Some v"
  by (auto simp: RMR_EL3_Type_of_regval_def regval_of_RMR_EL3_Type_def)

lemma regval_RMR_Type[simp]:
  "RMR_Type_of_regval (regval_of_RMR_Type v) = Some v"
  by (auto simp: RMR_Type_of_regval_def regval_of_RMR_Type_def)

lemma regval_RNDRRS_Type[simp]:
  "RNDRRS_Type_of_regval (regval_of_RNDRRS_Type v) = Some v"
  by (auto simp: RNDRRS_Type_of_regval_def regval_of_RNDRRS_Type_def)

lemma regval_RNDR_Type[simp]:
  "RNDR_Type_of_regval (regval_of_RNDR_Type v) = Some v"
  by (auto simp: RNDR_Type_of_regval_def regval_of_RNDR_Type_def)

lemma regval_RVBAR_EL1_Type[simp]:
  "RVBAR_EL1_Type_of_regval (regval_of_RVBAR_EL1_Type v) = Some v"
  by (auto simp: RVBAR_EL1_Type_of_regval_def regval_of_RVBAR_EL1_Type_def)

lemma regval_RVBAR_EL2_Type[simp]:
  "RVBAR_EL2_Type_of_regval (regval_of_RVBAR_EL2_Type v) = Some v"
  by (auto simp: RVBAR_EL2_Type_of_regval_def regval_of_RVBAR_EL2_Type_def)

lemma regval_RVBAR_EL3_Type[simp]:
  "RVBAR_EL3_Type_of_regval (regval_of_RVBAR_EL3_Type v) = Some v"
  by (auto simp: RVBAR_EL3_Type_of_regval_def regval_of_RVBAR_EL3_Type_def)

lemma regval_S2PIR_EL2_Type[simp]:
  "S2PIR_EL2_Type_of_regval (regval_of_S2PIR_EL2_Type v) = Some v"
  by (auto simp: S2PIR_EL2_Type_of_regval_def regval_of_S2PIR_EL2_Type_def)

lemma regval_S2POR_EL1_Type[simp]:
  "S2POR_EL1_Type_of_regval (regval_of_S2POR_EL1_Type v) = Some v"
  by (auto simp: S2POR_EL1_Type_of_regval_def regval_of_S2POR_EL1_Type_def)

lemma regval_SCR_EL3_Type[simp]:
  "SCR_EL3_Type_of_regval (regval_of_SCR_EL3_Type v) = Some v"
  by (auto simp: SCR_EL3_Type_of_regval_def regval_of_SCR_EL3_Type_def)

lemma regval_SCR_Type[simp]:
  "SCR_Type_of_regval (regval_of_SCR_Type v) = Some v"
  by (auto simp: SCR_Type_of_regval_def regval_of_SCR_Type_def)

lemma regval_SCTLR2_EL1_Type[simp]:
  "SCTLR2_EL1_Type_of_regval (regval_of_SCTLR2_EL1_Type v) = Some v"
  by (auto simp: SCTLR2_EL1_Type_of_regval_def regval_of_SCTLR2_EL1_Type_def)

lemma regval_SCTLR2_EL2_Type[simp]:
  "SCTLR2_EL2_Type_of_regval (regval_of_SCTLR2_EL2_Type v) = Some v"
  by (auto simp: SCTLR2_EL2_Type_of_regval_def regval_of_SCTLR2_EL2_Type_def)

lemma regval_SCTLR2_EL3_Type[simp]:
  "SCTLR2_EL3_Type_of_regval (regval_of_SCTLR2_EL3_Type v) = Some v"
  by (auto simp: SCTLR2_EL3_Type_of_regval_def regval_of_SCTLR2_EL3_Type_def)

lemma regval_SCTLR_EL1_Type[simp]:
  "SCTLR_EL1_Type_of_regval (regval_of_SCTLR_EL1_Type v) = Some v"
  by (auto simp: SCTLR_EL1_Type_of_regval_def regval_of_SCTLR_EL1_Type_def)

lemma regval_SCTLR_EL2_Type[simp]:
  "SCTLR_EL2_Type_of_regval (regval_of_SCTLR_EL2_Type v) = Some v"
  by (auto simp: SCTLR_EL2_Type_of_regval_def regval_of_SCTLR_EL2_Type_def)

lemma regval_SCTLR_EL3_Type[simp]:
  "SCTLR_EL3_Type_of_regval (regval_of_SCTLR_EL3_Type v) = Some v"
  by (auto simp: SCTLR_EL3_Type_of_regval_def regval_of_SCTLR_EL3_Type_def)

lemma regval_SCTLR_Type[simp]:
  "SCTLR_Type_of_regval (regval_of_SCTLR_Type v) = Some v"
  by (auto simp: SCTLR_Type_of_regval_def regval_of_SCTLR_Type_def)

lemma regval_SDCR_Type[simp]:
  "SDCR_Type_of_regval (regval_of_SDCR_Type v) = Some v"
  by (auto simp: SDCR_Type_of_regval_def regval_of_SDCR_Type_def)

lemma regval_SDER32_EL2_Type[simp]:
  "SDER32_EL2_Type_of_regval (regval_of_SDER32_EL2_Type v) = Some v"
  by (auto simp: SDER32_EL2_Type_of_regval_def regval_of_SDER32_EL2_Type_def)

lemma regval_SDER32_EL3_Type[simp]:
  "SDER32_EL3_Type_of_regval (regval_of_SDER32_EL3_Type v) = Some v"
  by (auto simp: SDER32_EL3_Type_of_regval_def regval_of_SDER32_EL3_Type_def)

lemma regval_SDER_Type[simp]:
  "SDER_Type_of_regval (regval_of_SDER_Type v) = Some v"
  by (auto simp: SDER_Type_of_regval_def regval_of_SDER_Type_def)

lemma regval_SMCR_EL1_Type[simp]:
  "SMCR_EL1_Type_of_regval (regval_of_SMCR_EL1_Type v) = Some v"
  by (auto simp: SMCR_EL1_Type_of_regval_def regval_of_SMCR_EL1_Type_def)

lemma regval_SMCR_EL2_Type[simp]:
  "SMCR_EL2_Type_of_regval (regval_of_SMCR_EL2_Type v) = Some v"
  by (auto simp: SMCR_EL2_Type_of_regval_def regval_of_SMCR_EL2_Type_def)

lemma regval_SMCR_EL3_Type[simp]:
  "SMCR_EL3_Type_of_regval (regval_of_SMCR_EL3_Type v) = Some v"
  by (auto simp: SMCR_EL3_Type_of_regval_def regval_of_SMCR_EL3_Type_def)

lemma regval_SMIDR_EL1_Type[simp]:
  "SMIDR_EL1_Type_of_regval (regval_of_SMIDR_EL1_Type v) = Some v"
  by (auto simp: SMIDR_EL1_Type_of_regval_def regval_of_SMIDR_EL1_Type_def)

lemma regval_SMPRIMAP_EL2_Type[simp]:
  "SMPRIMAP_EL2_Type_of_regval (regval_of_SMPRIMAP_EL2_Type v) = Some v"
  by (auto simp: SMPRIMAP_EL2_Type_of_regval_def regval_of_SMPRIMAP_EL2_Type_def)

lemma regval_SMPRI_EL1_Type[simp]:
  "SMPRI_EL1_Type_of_regval (regval_of_SMPRI_EL1_Type v) = Some v"
  by (auto simp: SMPRI_EL1_Type_of_regval_def regval_of_SMPRI_EL1_Type_def)

lemma regval_SPMACCESSR_EL1_Type[simp]:
  "SPMACCESSR_EL1_Type_of_regval (regval_of_SPMACCESSR_EL1_Type v) = Some v"
  by (auto simp: SPMACCESSR_EL1_Type_of_regval_def regval_of_SPMACCESSR_EL1_Type_def)

lemma regval_SPMACCESSR_EL2_Type[simp]:
  "SPMACCESSR_EL2_Type_of_regval (regval_of_SPMACCESSR_EL2_Type v) = Some v"
  by (auto simp: SPMACCESSR_EL2_Type_of_regval_def regval_of_SPMACCESSR_EL2_Type_def)

lemma regval_SPMACCESSR_EL3_Type[simp]:
  "SPMACCESSR_EL3_Type_of_regval (regval_of_SPMACCESSR_EL3_Type v) = Some v"
  by (auto simp: SPMACCESSR_EL3_Type_of_regval_def regval_of_SPMACCESSR_EL3_Type_def)

lemma regval_SPMSELR_EL0_Type[simp]:
  "SPMSELR_EL0_Type_of_regval (regval_of_SPMSELR_EL0_Type v) = Some v"
  by (auto simp: SPMSELR_EL0_Type_of_regval_def regval_of_SPMSELR_EL0_Type_def)

lemma regval_SPSR_EL1_Type[simp]:
  "SPSR_EL1_Type_of_regval (regval_of_SPSR_EL1_Type v) = Some v"
  by (auto simp: SPSR_EL1_Type_of_regval_def regval_of_SPSR_EL1_Type_def)

lemma regval_SPSR_EL2_Type[simp]:
  "SPSR_EL2_Type_of_regval (regval_of_SPSR_EL2_Type v) = Some v"
  by (auto simp: SPSR_EL2_Type_of_regval_def regval_of_SPSR_EL2_Type_def)

lemma regval_SPSR_EL3_Type[simp]:
  "SPSR_EL3_Type_of_regval (regval_of_SPSR_EL3_Type v) = Some v"
  by (auto simp: SPSR_EL3_Type_of_regval_def regval_of_SPSR_EL3_Type_def)

lemma regval_SPSR_abt_Type[simp]:
  "SPSR_abt_Type_of_regval (regval_of_SPSR_abt_Type v) = Some v"
  by (auto simp: SPSR_abt_Type_of_regval_def regval_of_SPSR_abt_Type_def)

lemma regval_SPSR_fiq_Type[simp]:
  "SPSR_fiq_Type_of_regval (regval_of_SPSR_fiq_Type v) = Some v"
  by (auto simp: SPSR_fiq_Type_of_regval_def regval_of_SPSR_fiq_Type_def)

lemma regval_SPSR_hyp_Type[simp]:
  "SPSR_hyp_Type_of_regval (regval_of_SPSR_hyp_Type v) = Some v"
  by (auto simp: SPSR_hyp_Type_of_regval_def regval_of_SPSR_hyp_Type_def)

lemma regval_SPSR_irq_Type[simp]:
  "SPSR_irq_Type_of_regval (regval_of_SPSR_irq_Type v) = Some v"
  by (auto simp: SPSR_irq_Type_of_regval_def regval_of_SPSR_irq_Type_def)

lemma regval_SPSR_mon_Type[simp]:
  "SPSR_mon_Type_of_regval (regval_of_SPSR_mon_Type v) = Some v"
  by (auto simp: SPSR_mon_Type_of_regval_def regval_of_SPSR_mon_Type_def)

lemma regval_SPSR_svc_Type[simp]:
  "SPSR_svc_Type_of_regval (regval_of_SPSR_svc_Type v) = Some v"
  by (auto simp: SPSR_svc_Type_of_regval_def regval_of_SPSR_svc_Type_def)

lemma regval_SPSR_und_Type[simp]:
  "SPSR_und_Type_of_regval (regval_of_SPSR_und_Type v) = Some v"
  by (auto simp: SPSR_und_Type_of_regval_def regval_of_SPSR_und_Type_def)

lemma regval_TCR2_EL1_Type[simp]:
  "TCR2_EL1_Type_of_regval (regval_of_TCR2_EL1_Type v) = Some v"
  by (auto simp: TCR2_EL1_Type_of_regval_def regval_of_TCR2_EL1_Type_def)

lemma regval_TCR2_EL2_Type[simp]:
  "TCR2_EL2_Type_of_regval (regval_of_TCR2_EL2_Type v) = Some v"
  by (auto simp: TCR2_EL2_Type_of_regval_def regval_of_TCR2_EL2_Type_def)

lemma regval_TCR_EL1_Type[simp]:
  "TCR_EL1_Type_of_regval (regval_of_TCR_EL1_Type v) = Some v"
  by (auto simp: TCR_EL1_Type_of_regval_def regval_of_TCR_EL1_Type_def)

lemma regval_TCR_EL2_Type[simp]:
  "TCR_EL2_Type_of_regval (regval_of_TCR_EL2_Type v) = Some v"
  by (auto simp: TCR_EL2_Type_of_regval_def regval_of_TCR_EL2_Type_def)

lemma regval_TCR_EL3_Type[simp]:
  "TCR_EL3_Type_of_regval (regval_of_TCR_EL3_Type v) = Some v"
  by (auto simp: TCR_EL3_Type_of_regval_def regval_of_TCR_EL3_Type_def)

lemma regval_TFSRE0_EL1_Type[simp]:
  "TFSRE0_EL1_Type_of_regval (regval_of_TFSRE0_EL1_Type v) = Some v"
  by (auto simp: TFSRE0_EL1_Type_of_regval_def regval_of_TFSRE0_EL1_Type_def)

lemma regval_TFSR_EL1_Type[simp]:
  "TFSR_EL1_Type_of_regval (regval_of_TFSR_EL1_Type v) = Some v"
  by (auto simp: TFSR_EL1_Type_of_regval_def regval_of_TFSR_EL1_Type_def)

lemma regval_TFSR_EL2_Type[simp]:
  "TFSR_EL2_Type_of_regval (regval_of_TFSR_EL2_Type v) = Some v"
  by (auto simp: TFSR_EL2_Type_of_regval_def regval_of_TFSR_EL2_Type_def)

lemma regval_TFSR_EL3_Type[simp]:
  "TFSR_EL3_Type_of_regval (regval_of_TFSR_EL3_Type v) = Some v"
  by (auto simp: TFSR_EL3_Type_of_regval_def regval_of_TFSR_EL3_Type_def)

lemma regval_TLBTR_Type[simp]:
  "TLBTR_Type_of_regval (regval_of_TLBTR_Type v) = Some v"
  by (auto simp: TLBTR_Type_of_regval_def regval_of_TLBTR_Type_def)

lemma regval_TRFCR_EL1_Type[simp]:
  "TRFCR_EL1_Type_of_regval (regval_of_TRFCR_EL1_Type v) = Some v"
  by (auto simp: TRFCR_EL1_Type_of_regval_def regval_of_TRFCR_EL1_Type_def)

lemma regval_TRFCR_EL2_Type[simp]:
  "TRFCR_EL2_Type_of_regval (regval_of_TRFCR_EL2_Type v) = Some v"
  by (auto simp: TRFCR_EL2_Type_of_regval_def regval_of_TRFCR_EL2_Type_def)

lemma regval_TRFCR_Type[simp]:
  "TRFCR_Type_of_regval (regval_of_TRFCR_Type v) = Some v"
  by (auto simp: TRFCR_Type_of_regval_def regval_of_TRFCR_Type_def)

lemma regval_TTBCR2_Type[simp]:
  "TTBCR2_Type_of_regval (regval_of_TTBCR2_Type v) = Some v"
  by (auto simp: TTBCR2_Type_of_regval_def regval_of_TTBCR2_Type_def)

lemma regval_TTBCR_Type[simp]:
  "TTBCR_Type_of_regval (regval_of_TTBCR_Type v) = Some v"
  by (auto simp: TTBCR_Type_of_regval_def regval_of_TTBCR_Type_def)

lemma regval_TTBR0_EL1_Type[simp]:
  "TTBR0_EL1_Type_of_regval (regval_of_TTBR0_EL1_Type v) = Some v"
  by (auto simp: TTBR0_EL1_Type_of_regval_def regval_of_TTBR0_EL1_Type_def)

lemma regval_TTBR0_EL2_Type[simp]:
  "TTBR0_EL2_Type_of_regval (regval_of_TTBR0_EL2_Type v) = Some v"
  by (auto simp: TTBR0_EL2_Type_of_regval_def regval_of_TTBR0_EL2_Type_def)

lemma regval_TTBR0_EL3_Type[simp]:
  "TTBR0_EL3_Type_of_regval (regval_of_TTBR0_EL3_Type v) = Some v"
  by (auto simp: TTBR0_EL3_Type_of_regval_def regval_of_TTBR0_EL3_Type_def)

lemma regval_TTBR0_Type[simp]:
  "TTBR0_Type_of_regval (regval_of_TTBR0_Type v) = Some v"
  by (auto simp: TTBR0_Type_of_regval_def regval_of_TTBR0_Type_def)

lemma regval_TTBR1_EL1_Type[simp]:
  "TTBR1_EL1_Type_of_regval (regval_of_TTBR1_EL1_Type v) = Some v"
  by (auto simp: TTBR1_EL1_Type_of_regval_def regval_of_TTBR1_EL1_Type_def)

lemma regval_TTBR1_EL2_Type[simp]:
  "TTBR1_EL2_Type_of_regval (regval_of_TTBR1_EL2_Type v) = Some v"
  by (auto simp: TTBR1_EL2_Type_of_regval_def regval_of_TTBR1_EL2_Type_def)

lemma regval_TTBR1_Type[simp]:
  "TTBR1_Type_of_regval (regval_of_TTBR1_Type v) = Some v"
  by (auto simp: TTBR1_Type_of_regval_def regval_of_TTBR1_Type_def)

lemma regval_VDFSR_Type[simp]:
  "VDFSR_Type_of_regval (regval_of_VDFSR_Type v) = Some v"
  by (auto simp: VDFSR_Type_of_regval_def regval_of_VDFSR_Type_def)

lemma regval_VDISR_EL2_Type[simp]:
  "VDISR_EL2_Type_of_regval (regval_of_VDISR_EL2_Type v) = Some v"
  by (auto simp: VDISR_EL2_Type_of_regval_def regval_of_VDISR_EL2_Type_def)

lemma regval_VDISR_Type[simp]:
  "VDISR_Type_of_regval (regval_of_VDISR_Type v) = Some v"
  by (auto simp: VDISR_Type_of_regval_def regval_of_VDISR_Type_def)

lemma regval_VMECID_A_EL2_Type[simp]:
  "VMECID_A_EL2_Type_of_regval (regval_of_VMECID_A_EL2_Type v) = Some v"
  by (auto simp: VMECID_A_EL2_Type_of_regval_def regval_of_VMECID_A_EL2_Type_def)

lemma regval_VMECID_P_EL2_Type[simp]:
  "VMECID_P_EL2_Type_of_regval (regval_of_VMECID_P_EL2_Type v) = Some v"
  by (auto simp: VMECID_P_EL2_Type_of_regval_def regval_of_VMECID_P_EL2_Type_def)

lemma regval_VMPIDR_EL2_Type[simp]:
  "VMPIDR_EL2_Type_of_regval (regval_of_VMPIDR_EL2_Type v) = Some v"
  by (auto simp: VMPIDR_EL2_Type_of_regval_def regval_of_VMPIDR_EL2_Type_def)

lemma regval_VMPIDR_Type[simp]:
  "VMPIDR_Type_of_regval (regval_of_VMPIDR_Type v) = Some v"
  by (auto simp: VMPIDR_Type_of_regval_def regval_of_VMPIDR_Type_def)

lemma regval_VNCR_EL2_Type[simp]:
  "VNCR_EL2_Type_of_regval (regval_of_VNCR_EL2_Type v) = Some v"
  by (auto simp: VNCR_EL2_Type_of_regval_def regval_of_VNCR_EL2_Type_def)

lemma regval_VPIDR_EL2_Type[simp]:
  "VPIDR_EL2_Type_of_regval (regval_of_VPIDR_EL2_Type v) = Some v"
  by (auto simp: VPIDR_EL2_Type_of_regval_def regval_of_VPIDR_EL2_Type_def)

lemma regval_VPIDR_Type[simp]:
  "VPIDR_Type_of_regval (regval_of_VPIDR_Type v) = Some v"
  by (auto simp: VPIDR_Type_of_regval_def regval_of_VPIDR_Type_def)

lemma regval_VSESR_EL2_Type[simp]:
  "VSESR_EL2_Type_of_regval (regval_of_VSESR_EL2_Type v) = Some v"
  by (auto simp: VSESR_EL2_Type_of_regval_def regval_of_VSESR_EL2_Type_def)

lemma regval_VSTCR_EL2_Type[simp]:
  "VSTCR_EL2_Type_of_regval (regval_of_VSTCR_EL2_Type v) = Some v"
  by (auto simp: VSTCR_EL2_Type_of_regval_def regval_of_VSTCR_EL2_Type_def)

lemma regval_VSTTBR_EL2_Type[simp]:
  "VSTTBR_EL2_Type_of_regval (regval_of_VSTTBR_EL2_Type v) = Some v"
  by (auto simp: VSTTBR_EL2_Type_of_regval_def regval_of_VSTTBR_EL2_Type_def)

lemma regval_VTCR_EL2_Type[simp]:
  "VTCR_EL2_Type_of_regval (regval_of_VTCR_EL2_Type v) = Some v"
  by (auto simp: VTCR_EL2_Type_of_regval_def regval_of_VTCR_EL2_Type_def)

lemma regval_VTCR_Type[simp]:
  "VTCR_Type_of_regval (regval_of_VTCR_Type v) = Some v"
  by (auto simp: VTCR_Type_of_regval_def regval_of_VTCR_Type_def)

lemma regval_VTTBR_EL2_Type[simp]:
  "VTTBR_EL2_Type_of_regval (regval_of_VTTBR_EL2_Type v) = Some v"
  by (auto simp: VTTBR_EL2_Type_of_regval_def regval_of_VTTBR_EL2_Type_def)

lemma regval_VTTBR_Type[simp]:
  "VTTBR_Type_of_regval (regval_of_VTTBR_Type v) = Some v"
  by (auto simp: VTTBR_Type_of_regval_def regval_of_VTTBR_Type_def)

lemma regval_ZCR_EL1_Type[simp]:
  "ZCR_EL1_Type_of_regval (regval_of_ZCR_EL1_Type v) = Some v"
  by (auto simp: ZCR_EL1_Type_of_regval_def regval_of_ZCR_EL1_Type_def)

lemma regval_ZCR_EL2_Type[simp]:
  "ZCR_EL2_Type_of_regval (regval_of_ZCR_EL2_Type v) = Some v"
  by (auto simp: ZCR_EL2_Type_of_regval_def regval_of_ZCR_EL2_Type_def)

lemma regval_ZCR_EL3_Type[simp]:
  "ZCR_EL3_Type_of_regval (regval_of_ZCR_EL3_Type v) = Some v"
  by (auto simp: ZCR_EL3_Type_of_regval_def regval_of_ZCR_EL3_Type_def)

lemma vector_of_rv_rv_of_vector[simp]:
  assumes "\<And>v. of_rv (rv_of v) = Some v"
  shows "vector_of_regval of_rv (regval_of_vector rv_of v) = Some v"
proof -
  from assms have "of_rv \<circ> rv_of = Some" by auto
  then show ?thesis by (auto simp: regval_of_vector_def)
qed

lemma option_of_rv_rv_of_option[simp]:
  assumes "\<And>v. of_rv (rv_of v) = Some v"
  shows "option_of_regval of_rv (regval_of_option rv_of v) = Some v"
  using assms by (cases v) (auto simp: regval_of_option_def)

lemma list_of_rv_rv_of_list[simp]:
  assumes "\<And>v. of_rv (rv_of v) = Some v"
  shows "list_of_regval of_rv (regval_of_list rv_of v) = Some v"
proof -
  from assms have "of_rv \<circ> rv_of = Some" by auto
  with assms show ?thesis by (induction v) (auto simp: regval_of_list_def)
qed

(*lemma liftS_read_reg_emulator_termination_opcode[liftState_simp]:
  "\<lbrakk>read_reg emulator_termination_opcode_ref\<rbrakk>\<^sub>S = read_regS emulator_termination_opcode_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_emulator_termination_opcode[liftState_simp]:
  "\<lbrakk>write_reg emulator_termination_opcode_ref v\<rbrakk>\<^sub>S = write_regS emulator_termination_opcode_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HACTLR2[liftState_simp]:
  "\<lbrakk>read_reg HACTLR2_ref\<rbrakk>\<^sub>S = read_regS HACTLR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HACTLR2[liftState_simp]:
  "\<lbrakk>write_reg HACTLR2_ref v\<rbrakk>\<^sub>S = write_regS HACTLR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXSTATUS[liftState_simp]:
  "\<lbrakk>read_reg ERXSTATUS_ref\<rbrakk>\<^sub>S = read_regS ERXSTATUS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXSTATUS[liftState_simp]:
  "\<lbrakk>write_reg ERXSTATUS_ref v\<rbrakk>\<^sub>S = write_regS ERXSTATUS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC3[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC3_ref\<rbrakk>\<^sub>S = read_regS ERXMISC3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC3[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC3_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC7[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC7_ref\<rbrakk>\<^sub>S = read_regS ERXMISC7_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC7[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC7_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC7_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXADDR2[liftState_simp]:
  "\<lbrakk>read_reg ERXADDR2_ref\<rbrakk>\<^sub>S = read_regS ERXADDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXADDR2[liftState_simp]:
  "\<lbrakk>write_reg ERXADDR2_ref v\<rbrakk>\<^sub>S = write_regS ERXADDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC4[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC4_ref\<rbrakk>\<^sub>S = read_regS ERXMISC4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC4[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC4_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC6[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC6_ref\<rbrakk>\<^sub>S = read_regS ERXMISC6_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC6[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC6_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC6_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXCTLR[liftState_simp]:
  "\<lbrakk>read_reg ERXCTLR_ref\<rbrakk>\<^sub>S = read_regS ERXCTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXCTLR[liftState_simp]:
  "\<lbrakk>write_reg ERXCTLR_ref v\<rbrakk>\<^sub>S = write_regS ERXCTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC1[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC1_ref\<rbrakk>\<^sub>S = read_regS ERXMISC1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC1[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC1_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXCTLR2[liftState_simp]:
  "\<lbrakk>read_reg ERXCTLR2_ref\<rbrakk>\<^sub>S = read_regS ERXCTLR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXCTLR2[liftState_simp]:
  "\<lbrakk>write_reg ERXCTLR2_ref v\<rbrakk>\<^sub>S = write_regS ERXCTLR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC5[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC5_ref\<rbrakk>\<^sub>S = read_regS ERXMISC5_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC5[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC5_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC5_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC0[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC0_ref\<rbrakk>\<^sub>S = read_regS ERXMISC0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC0[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC0_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXADDR[liftState_simp]:
  "\<lbrakk>read_reg ERXADDR_ref\<rbrakk>\<^sub>S = read_regS ERXADDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXADDR[liftState_simp]:
  "\<lbrakk>write_reg ERXADDR_ref v\<rbrakk>\<^sub>S = write_regS ERXADDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXFR[liftState_simp]:
  "\<lbrakk>read_reg ERXFR_ref\<rbrakk>\<^sub>S = read_regS ERXFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXFR[liftState_simp]:
  "\<lbrakk>write_reg ERXFR_ref v\<rbrakk>\<^sub>S = write_regS ERXFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC2[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC2_ref\<rbrakk>\<^sub>S = read_regS ERXMISC2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC2[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC2_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXFR2[liftState_simp]:
  "\<lbrakk>read_reg ERXFR2_ref\<rbrakk>\<^sub>S = read_regS ERXFR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXFR2[liftState_simp]:
  "\<lbrakk>write_reg ERXFR2_ref v\<rbrakk>\<^sub>S = write_regS ERXFR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVTYPER1[liftState_simp]:
  "\<lbrakk>read_reg AMEVTYPER1_ref\<rbrakk>\<^sub>S = read_regS AMEVTYPER1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVTYPER1[liftState_simp]:
  "\<lbrakk>write_reg AMEVTYPER1_ref v\<rbrakk>\<^sub>S = write_regS AMEVTYPER1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVTYPER0[liftState_simp]:
  "\<lbrakk>read_reg AMEVTYPER0_ref\<rbrakk>\<^sub>S = read_regS AMEVTYPER0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVTYPER0[liftState_simp]:
  "\<lbrakk>write_reg AMEVTYPER0_ref v\<rbrakk>\<^sub>S = write_regS AMEVTYPER0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_LRC[liftState_simp]:
  "\<lbrakk>read_reg ICH_LRC_ref\<rbrakk>\<^sub>S = read_regS ICH_LRC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_LRC[liftState_simp]:
  "\<lbrakk>write_reg ICH_LRC_ref v\<rbrakk>\<^sub>S = write_regS ICH_LRC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR1_NS[liftState_simp]:
  "\<lbrakk>read_reg AMAIR1_NS_ref\<rbrakk>\<^sub>S = read_regS AMAIR1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR1_NS[liftState_simp]:
  "\<lbrakk>write_reg AMAIR1_NS_ref v\<rbrakk>\<^sub>S = write_regS AMAIR1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR1_S[liftState_simp]:
  "\<lbrakk>read_reg AMAIR1_S_ref\<rbrakk>\<^sub>S = read_regS AMAIR1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR1_S[liftState_simp]:
  "\<lbrakk>write_reg AMAIR1_S_ref v\<rbrakk>\<^sub>S = write_regS AMAIR1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRTXint[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRTXint_ref\<rbrakk>\<^sub>S = read_regS DBGDTRTXint_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRTXint[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRTXint_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRTXint_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HTPIDR[liftState_simp]:
  "\<lbrakk>read_reg HTPIDR_ref\<rbrakk>\<^sub>S = read_regS HTPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HTPIDR[liftState_simp]:
  "\<lbrakk>write_reg HTPIDR_ref v\<rbrakk>\<^sub>S = write_regS HTPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRRXint[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRRXint_ref\<rbrakk>\<^sub>S = read_regS DBGDTRRXint_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRRXint[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRRXint_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRRXint_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRPRW_NS[liftState_simp]:
  "\<lbrakk>read_reg TPIDRPRW_NS_ref\<rbrakk>\<^sub>S = read_regS TPIDRPRW_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRPRW_NS[liftState_simp]:
  "\<lbrakk>write_reg TPIDRPRW_NS_ref v\<rbrakk>\<^sub>S = write_regS TPIDRPRW_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRPRW_S[liftState_simp]:
  "\<lbrakk>read_reg TPIDRPRW_S_ref\<rbrakk>\<^sub>S = read_regS TPIDRPRW_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRPRW_S[liftState_simp]:
  "\<lbrakk>write_reg TPIDRPRW_S_ref v\<rbrakk>\<^sub>S = write_regS TPIDRPRW_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP0R[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP0R_ref\<rbrakk>\<^sub>S = read_regS ICC_AP0R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP0R[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP0R_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP0R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HAIFSR[liftState_simp]:
  "\<lbrakk>read_reg HAIFSR_ref\<rbrakk>\<^sub>S = read_regS HAIFSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HAIFSR[liftState_simp]:
  "\<lbrakk>write_reg HAIFSR_ref v\<rbrakk>\<^sub>S = write_regS HAIFSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HAMAIR1[liftState_simp]:
  "\<lbrakk>read_reg HAMAIR1_ref\<rbrakk>\<^sub>S = read_regS HAMAIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HAMAIR1[liftState_simp]:
  "\<lbrakk>write_reg HAMAIR1_ref v\<rbrakk>\<^sub>S = write_regS HAMAIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR2_NS[liftState_simp]:
  "\<lbrakk>read_reg ACTLR2_NS_ref\<rbrakk>\<^sub>S = read_regS ACTLR2_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR2_NS[liftState_simp]:
  "\<lbrakk>write_reg ACTLR2_NS_ref v\<rbrakk>\<^sub>S = write_regS ACTLR2_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR2_S[liftState_simp]:
  "\<lbrakk>read_reg ACTLR2_S_ref\<rbrakk>\<^sub>S = read_regS ACTLR2_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR2_S[liftState_simp]:
  "\<lbrakk>write_reg ACTLR2_S_ref v\<rbrakk>\<^sub>S = write_regS ACTLR2_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGOSECCR[liftState_simp]:
  "\<lbrakk>read_reg DBGOSECCR_ref\<rbrakk>\<^sub>S = read_regS DBGOSECCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGOSECCR[liftState_simp]:
  "\<lbrakk>write_reg DBGOSECCR_ref v\<rbrakk>\<^sub>S = write_regS DBGOSECCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMINTENSET[liftState_simp]:
  "\<lbrakk>read_reg PMINTENSET_ref\<rbrakk>\<^sub>S = read_regS PMINTENSET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMINTENSET[liftState_simp]:
  "\<lbrakk>write_reg PMINTENSET_ref v\<rbrakk>\<^sub>S = write_regS PMINTENSET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTFRQ[liftState_simp]:
  "\<lbrakk>read_reg CNTFRQ_ref\<rbrakk>\<^sub>S = read_regS CNTFRQ_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTFRQ[liftState_simp]:
  "\<lbrakk>write_reg CNTFRQ_ref v\<rbrakk>\<^sub>S = write_regS CNTFRQ_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HADFSR[liftState_simp]:
  "\<lbrakk>read_reg HADFSR_ref\<rbrakk>\<^sub>S = read_regS HADFSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HADFSR[liftState_simp]:
  "\<lbrakk>write_reg HADFSR_ref v\<rbrakk>\<^sub>S = write_regS HADFSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_LR[liftState_simp]:
  "\<lbrakk>read_reg ICH_LR_ref\<rbrakk>\<^sub>S = read_regS ICH_LR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_LR[liftState_simp]:
  "\<lbrakk>write_reg ICH_LR_ref v\<rbrakk>\<^sub>S = write_regS ICH_LR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AIDR[liftState_simp]:
  "\<lbrakk>read_reg AIDR_ref\<rbrakk>\<^sub>S = read_regS AIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AIDR[liftState_simp]:
  "\<lbrakk>write_reg AIDR_ref v\<rbrakk>\<^sub>S = write_regS AIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_AP0R[liftState_simp]:
  "\<lbrakk>read_reg ICH_AP0R_ref\<rbrakk>\<^sub>S = read_regS ICH_AP0R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_AP0R[liftState_simp]:
  "\<lbrakk>write_reg ICH_AP0R_ref v\<rbrakk>\<^sub>S = write_regS ICH_AP0R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HAMAIR0[liftState_simp]:
  "\<lbrakk>read_reg HAMAIR0_ref\<rbrakk>\<^sub>S = read_regS HAMAIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HAMAIR0[liftState_simp]:
  "\<lbrakk>write_reg HAMAIR0_ref v\<rbrakk>\<^sub>S = write_regS HAMAIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR0_NS[liftState_simp]:
  "\<lbrakk>read_reg AMAIR0_NS_ref\<rbrakk>\<^sub>S = read_regS AMAIR0_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR0_NS[liftState_simp]:
  "\<lbrakk>write_reg AMAIR0_NS_ref v\<rbrakk>\<^sub>S = write_regS AMAIR0_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR0_S[liftState_simp]:
  "\<lbrakk>read_reg AMAIR0_S_ref\<rbrakk>\<^sub>S = read_regS AMAIR0_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR0_S[liftState_simp]:
  "\<lbrakk>write_reg AMAIR0_S_ref v\<rbrakk>\<^sub>S = write_regS AMAIR0_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_AP1R[liftState_simp]:
  "\<lbrakk>read_reg ICH_AP1R_ref\<rbrakk>\<^sub>S = read_regS ICH_AP1R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_AP1R[liftState_simp]:
  "\<lbrakk>write_reg ICH_AP1R_ref v\<rbrakk>\<^sub>S = write_regS ICH_AP1R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP1R_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP1R_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_AP1R_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP1R_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP1R_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP1R_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP1R_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP1R_S_ref\<rbrakk>\<^sub>S = read_regS ICC_AP1R_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP1R_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP1R_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP1R_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRRXext[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRRXext_ref\<rbrakk>\<^sub>S = read_regS DBGDTRRXext_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRRXext[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRRXext_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRRXext_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGOSLAR[liftState_simp]:
  "\<lbrakk>read_reg DBGOSLAR_ref\<rbrakk>\<^sub>S = read_regS DBGOSLAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGOSLAR[liftState_simp]:
  "\<lbrakk>write_reg DBGOSLAR_ref v\<rbrakk>\<^sub>S = write_regS DBGOSLAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR_NS[liftState_simp]:
  "\<lbrakk>read_reg ACTLR_NS_ref\<rbrakk>\<^sub>S = read_regS ACTLR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR_NS[liftState_simp]:
  "\<lbrakk>write_reg ACTLR_NS_ref v\<rbrakk>\<^sub>S = write_regS ACTLR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR_S[liftState_simp]:
  "\<lbrakk>read_reg ACTLR_S_ref\<rbrakk>\<^sub>S = read_regS ACTLR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR_S[liftState_simp]:
  "\<lbrakk>write_reg ACTLR_S_ref v\<rbrakk>\<^sub>S = write_regS ACTLR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRTXext[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRTXext_ref\<rbrakk>\<^sub>S = read_regS DBGDTRTXext_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRTXext[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRTXext_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRTXext_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRURO_NS[liftState_simp]:
  "\<lbrakk>read_reg TPIDRURO_NS_ref\<rbrakk>\<^sub>S = read_regS TPIDRURO_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRURO_NS[liftState_simp]:
  "\<lbrakk>write_reg TPIDRURO_NS_ref v\<rbrakk>\<^sub>S = write_regS TPIDRURO_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRURO_S[liftState_simp]:
  "\<lbrakk>read_reg TPIDRURO_S_ref\<rbrakk>\<^sub>S = read_regS TPIDRURO_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRURO_S[liftState_simp]:
  "\<lbrakk>write_reg TPIDRURO_S_ref v\<rbrakk>\<^sub>S = write_regS TPIDRURO_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_REVIDR[liftState_simp]:
  "\<lbrakk>read_reg REVIDR_ref\<rbrakk>\<^sub>S = read_regS REVIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_REVIDR[liftState_simp]:
  "\<lbrakk>write_reg REVIDR_ref v\<rbrakk>\<^sub>S = write_regS REVIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ADFSR_NS[liftState_simp]:
  "\<lbrakk>read_reg ADFSR_NS_ref\<rbrakk>\<^sub>S = read_regS ADFSR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ADFSR_NS[liftState_simp]:
  "\<lbrakk>write_reg ADFSR_NS_ref v\<rbrakk>\<^sub>S = write_regS ADFSR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ADFSR_S[liftState_simp]:
  "\<lbrakk>read_reg ADFSR_S_ref\<rbrakk>\<^sub>S = read_regS ADFSR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ADFSR_S[liftState_simp]:
  "\<lbrakk>write_reg ADFSR_S_ref v\<rbrakk>\<^sub>S = write_regS ADFSR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_AP1R[liftState_simp]:
  "\<lbrakk>read_reg ICV_AP1R_ref\<rbrakk>\<^sub>S = read_regS ICV_AP1R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_AP1R[liftState_simp]:
  "\<lbrakk>write_reg ICV_AP1R_ref v\<rbrakk>\<^sub>S = write_regS ICV_AP1R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRURW_NS[liftState_simp]:
  "\<lbrakk>read_reg TPIDRURW_NS_ref\<rbrakk>\<^sub>S = read_regS TPIDRURW_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRURW_NS[liftState_simp]:
  "\<lbrakk>write_reg TPIDRURW_NS_ref v\<rbrakk>\<^sub>S = write_regS TPIDRURW_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRURW_S[liftState_simp]:
  "\<lbrakk>read_reg TPIDRURW_S_ref\<rbrakk>\<^sub>S = read_regS TPIDRURW_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRURW_S[liftState_simp]:
  "\<lbrakk>write_reg TPIDRURW_S_ref v\<rbrakk>\<^sub>S = write_regS TPIDRURW_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_AP0R[liftState_simp]:
  "\<lbrakk>read_reg ICV_AP0R_ref\<rbrakk>\<^sub>S = read_regS ICV_AP0R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_AP0R[liftState_simp]:
  "\<lbrakk>write_reg ICV_AP0R_ref v\<rbrakk>\<^sub>S = write_regS ICV_AP0R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCMTR[liftState_simp]:
  "\<lbrakk>read_reg TCMTR_ref\<rbrakk>\<^sub>S = read_regS TCMTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCMTR[liftState_simp]:
  "\<lbrakk>write_reg TCMTR_ref v\<rbrakk>\<^sub>S = write_regS TCMTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HACTLR[liftState_simp]:
  "\<lbrakk>read_reg HACTLR_ref\<rbrakk>\<^sub>S = read_regS HACTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HACTLR[liftState_simp]:
  "\<lbrakk>write_reg HACTLR_ref v\<rbrakk>\<^sub>S = write_regS HACTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HACR[liftState_simp]:
  "\<lbrakk>read_reg HACR_ref\<rbrakk>\<^sub>S = read_regS HACR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HACR[liftState_simp]:
  "\<lbrakk>write_reg HACR_ref v\<rbrakk>\<^sub>S = write_regS HACR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AIFSR_NS[liftState_simp]:
  "\<lbrakk>read_reg AIFSR_NS_ref\<rbrakk>\<^sub>S = read_regS AIFSR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AIFSR_NS[liftState_simp]:
  "\<lbrakk>write_reg AIFSR_NS_ref v\<rbrakk>\<^sub>S = write_regS AIFSR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AIFSR_S[liftState_simp]:
  "\<lbrakk>read_reg AIFSR_S_ref\<rbrakk>\<^sub>S = read_regS AIFSR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AIFSR_S[liftState_simp]:
  "\<lbrakk>write_reg AIFSR_S_ref v\<rbrakk>\<^sub>S = write_regS AIFSR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBSRC_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBSRC_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBSRC_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBSRC_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBSRC_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBSRC_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBTGT_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBTGT_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBTGT_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBTGT_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBTGT_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBTGT_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBINF_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBINF_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBINF_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBINF_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBINF_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBINF_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXPFGCTL_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXPFGCTL_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXPFGCTL_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXPFGCTL_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXPFGCTL_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXPFGCTL_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC2_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXMISC2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC3_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC3_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXMISC3_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC3_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC3_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC3_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXGSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXGSR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXGSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXGSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXGSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXGSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXFR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXFR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXFR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXFR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXFR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXFR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXSTATUS_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXSTATUS_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXSTATUS_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXSTATUS_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXSTATUS_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXSTATUS_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXCTLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXCTLR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXCTLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXCTLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXCTLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXCTLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC1_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXMISC1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXPFGF_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXPFGF_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXPFGF_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXPFGF_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXPFGF_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXPFGF_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXPFGCDN_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXPFGCDN_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXPFGCDN_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXPFGCDN_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXPFGCDN_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXPFGCDN_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXMISC0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXMISC0_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXMISC0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXMISC0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXMISC0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXMISC0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERXADDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERXADDR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERXADDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERXADDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERXADDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERXADDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVTYPER1_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMEVTYPER1_EL0_ref\<rbrakk>\<^sub>S = read_regS AMEVTYPER1_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVTYPER1_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMEVTYPER1_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMEVTYPER1_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTVOFF1_EL2[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTVOFF1_EL2_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTVOFF1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTVOFF1_EL2[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTVOFF1_EL2_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTVOFF1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTR0_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTR0_EL0_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTR0_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTR0_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTR0_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTR0_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTR1[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTR1_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTR1[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTR1_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTR0[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTR0_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTR0[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTR0_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTVOFF0_EL2[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTVOFF0_EL2_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTVOFF0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTVOFF0_EL2[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTVOFF0_EL2_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTVOFF0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVCNTR1_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMEVCNTR1_EL0_ref\<rbrakk>\<^sub>S = read_regS AMEVCNTR1_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVCNTR1_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMEVCNTR1_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMEVCNTR1_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTV_CVAL[liftState_simp]:
  "\<lbrakk>read_reg CNTV_CVAL_ref\<rbrakk>\<^sub>S = read_regS CNTV_CVAL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTV_CVAL[liftState_simp]:
  "\<lbrakk>write_reg CNTV_CVAL_ref v\<rbrakk>\<^sub>S = write_regS CNTV_CVAL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTVOFF[liftState_simp]:
  "\<lbrakk>read_reg CNTVOFF_ref\<rbrakk>\<^sub>S = read_regS CNTVOFF_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTVOFF[liftState_simp]:
  "\<lbrakk>write_reg CNTVOFF_ref v\<rbrakk>\<^sub>S = write_regS CNTVOFF_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPMACCESSR_EL3[liftState_simp]:
  "\<lbrakk>read_reg SPMACCESSR_EL3_ref\<rbrakk>\<^sub>S = read_regS SPMACCESSR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPMACCESSR_EL3[liftState_simp]:
  "\<lbrakk>write_reg SPMACCESSR_EL3_ref v\<rbrakk>\<^sub>S = write_regS SPMACCESSR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg AMAIR2_EL1_ref\<rbrakk>\<^sub>S = read_regS AMAIR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg AMAIR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS AMAIR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR0_EL2[liftState_simp]:
  "\<lbrakk>read_reg AFSR0_EL2_ref\<rbrakk>\<^sub>S = read_regS AFSR0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR0_EL2[liftState_simp]:
  "\<lbrakk>write_reg AFSR0_EL2_ref v\<rbrakk>\<^sub>S = write_regS AFSR0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_AP1R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_AP1R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_AP1R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_AP1R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_AP1R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_AP1R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR1_EL3[liftState_simp]:
  "\<lbrakk>read_reg AFSR1_EL3_ref\<rbrakk>\<^sub>S = read_regS AFSR1_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR1_EL3[liftState_simp]:
  "\<lbrakk>write_reg AFSR1_EL3_ref v\<rbrakk>\<^sub>S = write_regS AFSR1_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR2_EL3[liftState_simp]:
  "\<lbrakk>read_reg AMAIR2_EL3_ref\<rbrakk>\<^sub>S = read_regS AMAIR2_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR2_EL3[liftState_simp]:
  "\<lbrakk>write_reg AMAIR2_EL3_ref v\<rbrakk>\<^sub>S = write_regS AMAIR2_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HACR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HACR_EL2_ref\<rbrakk>\<^sub>S = read_regS HACR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HACR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HACR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HACR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RNDR[liftState_simp]:
  "\<lbrakk>read_reg RNDR_ref\<rbrakk>\<^sub>S = read_regS RNDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RNDR[liftState_simp]:
  "\<lbrakk>write_reg RNDR_ref v\<rbrakk>\<^sub>S = write_regS RNDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMPRIMAP_EL2[liftState_simp]:
  "\<lbrakk>read_reg SMPRIMAP_EL2_ref\<rbrakk>\<^sub>S = read_regS SMPRIMAP_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMPRIMAP_EL2[liftState_simp]:
  "\<lbrakk>write_reg SMPRIMAP_EL2_ref v\<rbrakk>\<^sub>S = write_regS SMPRIMAP_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RNDRRS[liftState_simp]:
  "\<lbrakk>read_reg RNDRRS_ref\<rbrakk>\<^sub>S = read_regS RNDRRS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RNDRRS[liftState_simp]:
  "\<lbrakk>write_reg RNDRRS_ref v\<rbrakk>\<^sub>S = write_regS RNDRRS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDR_EL0[liftState_simp]:
  "\<lbrakk>read_reg TPIDR_EL0_ref\<rbrakk>\<^sub>S = read_regS TPIDR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDR_EL0[liftState_simp]:
  "\<lbrakk>write_reg TPIDR_EL0_ref v\<rbrakk>\<^sub>S = write_regS TPIDR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCXTNUM_EL3[liftState_simp]:
  "\<lbrakk>read_reg SCXTNUM_EL3_ref\<rbrakk>\<^sub>S = read_regS SCXTNUM_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCXTNUM_EL3[liftState_simp]:
  "\<lbrakk>write_reg SCXTNUM_EL3_ref v\<rbrakk>\<^sub>S = write_regS SCXTNUM_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDR2_EL0[liftState_simp]:
  "\<lbrakk>read_reg TPIDR2_EL0_ref\<rbrakk>\<^sub>S = read_regS TPIDR2_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDR2_EL0[liftState_simp]:
  "\<lbrakk>write_reg TPIDR2_EL0_ref v\<rbrakk>\<^sub>S = write_regS TPIDR2_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCXTNUM_EL0[liftState_simp]:
  "\<lbrakk>read_reg SCXTNUM_EL0_ref\<rbrakk>\<^sub>S = read_regS SCXTNUM_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCXTNUM_EL0[liftState_simp]:
  "\<lbrakk>write_reg SCXTNUM_EL0_ref v\<rbrakk>\<^sub>S = write_regS SCXTNUM_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg AMAIR_EL1_ref\<rbrakk>\<^sub>S = read_regS AMAIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg AMAIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS AMAIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDRRO_EL0[liftState_simp]:
  "\<lbrakk>read_reg TPIDRRO_EL0_ref\<rbrakk>\<^sub>S = read_regS TPIDRRO_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDRRO_EL0[liftState_simp]:
  "\<lbrakk>write_reg TPIDRRO_EL0_ref v\<rbrakk>\<^sub>S = write_regS TPIDRRO_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCXTNUM_EL1[liftState_simp]:
  "\<lbrakk>read_reg SCXTNUM_EL1_ref\<rbrakk>\<^sub>S = read_regS SCXTNUM_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCXTNUM_EL1[liftState_simp]:
  "\<lbrakk>write_reg SCXTNUM_EL1_ref v\<rbrakk>\<^sub>S = write_regS SCXTNUM_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR_EL3[liftState_simp]:
  "\<lbrakk>read_reg AMAIR_EL3_ref\<rbrakk>\<^sub>S = read_regS AMAIR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR_EL3[liftState_simp]:
  "\<lbrakk>write_reg AMAIR_EL3_ref v\<rbrakk>\<^sub>S = write_regS AMAIR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR_EL2[liftState_simp]:
  "\<lbrakk>read_reg AMAIR_EL2_ref\<rbrakk>\<^sub>S = read_regS AMAIR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR_EL2[liftState_simp]:
  "\<lbrakk>write_reg AMAIR_EL2_ref v\<rbrakk>\<^sub>S = write_regS AMAIR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR_EL3[liftState_simp]:
  "\<lbrakk>read_reg ACTLR_EL3_ref\<rbrakk>\<^sub>S = read_regS ACTLR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR_EL3[liftState_simp]:
  "\<lbrakk>write_reg ACTLR_EL3_ref v\<rbrakk>\<^sub>S = write_regS ACTLR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDR_EL3[liftState_simp]:
  "\<lbrakk>read_reg TPIDR_EL3_ref\<rbrakk>\<^sub>S = read_regS TPIDR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDR_EL3[liftState_simp]:
  "\<lbrakk>write_reg TPIDR_EL3_ref v\<rbrakk>\<^sub>S = write_regS TPIDR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMIAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMIAR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMIAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMIAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMIAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMIAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCXTNUM_EL2[liftState_simp]:
  "\<lbrakk>read_reg SCXTNUM_EL2_ref\<rbrakk>\<^sub>S = read_regS SCXTNUM_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCXTNUM_EL2[liftState_simp]:
  "\<lbrakk>write_reg SCXTNUM_EL2_ref v\<rbrakk>\<^sub>S = write_regS SCXTNUM_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMICNTSVR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMICNTSVR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMICNTSVR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMICNTSVR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMICNTSVR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMICNTSVR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPMACCESSR_EL2[liftState_simp]:
  "\<lbrakk>read_reg SPMACCESSR_EL2_ref\<rbrakk>\<^sub>S = read_regS SPMACCESSR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPMACCESSR_EL2[liftState_simp]:
  "\<lbrakk>write_reg SPMACCESSR_EL2_ref v\<rbrakk>\<^sub>S = write_regS SPMACCESSR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg AFSR0_EL1_ref\<rbrakk>\<^sub>S = read_regS AFSR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg AFSR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS AFSR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR1_EL2[liftState_simp]:
  "\<lbrakk>read_reg AFSR1_EL2_ref\<rbrakk>\<^sub>S = read_regS AFSR1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR1_EL2[liftState_simp]:
  "\<lbrakk>write_reg AFSR1_EL2_ref v\<rbrakk>\<^sub>S = write_regS AFSR1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR0_EL3[liftState_simp]:
  "\<lbrakk>read_reg AFSR0_EL3_ref\<rbrakk>\<^sub>S = read_regS AFSR0_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR0_EL3[liftState_simp]:
  "\<lbrakk>write_reg AFSR0_EL3_ref v\<rbrakk>\<^sub>S = write_regS AFSR0_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_AP0R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_AP0R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_AP0R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_AP0R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_AP0R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_AP0R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMAIR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg AMAIR2_EL2_ref\<rbrakk>\<^sub>S = read_regS AMAIR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMAIR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg AMAIR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS AMAIR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCCNTSVR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMCCNTSVR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMCCNTSVR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCCNTSVR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMCCNTSVR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMCCNTSVR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AFSR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg AFSR1_EL1_ref\<rbrakk>\<^sub>S = read_regS AFSR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AFSR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg AFSR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS AFSR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP1R_EL1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP1R_EL1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_AP1R_EL1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP1R_EL1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP1R_EL1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP1R_EL1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP1R_EL1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP1R_EL1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_AP1R_EL1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP1R_EL1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP1R_EL1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP1R_EL1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ACTLR_EL1_ref\<rbrakk>\<^sub>S = read_regS ACTLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ACTLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ACTLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg TPIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS TPIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg TPIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS TPIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_AP0R_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_AP0R_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_AP0R_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_AP0R_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_AP0R_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_AP0R_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMEVCNTSVR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMEVCNTSVR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMEVCNTSVR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMEVCNTSVR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMEVCNTSVR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMEVCNTSVR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_AP1R_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_AP1R_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_AP1R_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_AP1R_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_AP1R_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_AP1R_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPMACCESSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg SPMACCESSR_EL1_ref\<rbrakk>\<^sub>S = read_regS SPMACCESSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPMACCESSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg SPMACCESSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS SPMACCESSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACTLR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ACTLR_EL2_ref\<rbrakk>\<^sub>S = read_regS ACTLR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACTLR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ACTLR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ACTLR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TPIDR_EL2[liftState_simp]:
  "\<lbrakk>read_reg TPIDR_EL2_ref\<rbrakk>\<^sub>S = read_regS TPIDR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TPIDR_EL2[liftState_simp]:
  "\<lbrakk>write_reg TPIDR_EL2_ref v\<rbrakk>\<^sub>S = write_regS TPIDR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_REVIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg REVIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS REVIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_REVIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg REVIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS REVIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg AIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS AIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg AIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS AIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_AP0R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_AP0R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_AP0R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_AP0R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_AP0R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_AP0R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_LR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_LR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_LR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_LR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_LR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_LR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCCNTR[liftState_simp]:
  "\<lbrakk>read_reg PMCCNTR_ref\<rbrakk>\<^sub>S = read_regS PMCCNTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCCNTR[liftState_simp]:
  "\<lbrakk>write_reg PMCCNTR_ref v\<rbrakk>\<^sub>S = write_regS PMCCNTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMOVSSET[liftState_simp]:
  "\<lbrakk>read_reg PMOVSSET_ref\<rbrakk>\<^sub>S = read_regS PMOVSSET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMOVSSET[liftState_simp]:
  "\<lbrakk>write_reg PMOVSSET_ref v\<rbrakk>\<^sub>S = write_regS PMOVSSET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMEVCNTR[liftState_simp]:
  "\<lbrakk>read_reg PMEVCNTR_ref\<rbrakk>\<^sub>S = read_regS PMEVCNTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMEVCNTR[liftState_simp]:
  "\<lbrakk>write_reg PMEVCNTR_ref v\<rbrakk>\<^sub>S = write_regS PMEVCNTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGWVR[liftState_simp]:
  "\<lbrakk>read_reg DBGWVR_ref\<rbrakk>\<^sub>S = read_regS DBGWVR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGWVR[liftState_simp]:
  "\<lbrakk>write_reg DBGWVR_ref v\<rbrakk>\<^sub>S = write_regS DBGWVR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGWCR[liftState_simp]:
  "\<lbrakk>read_reg DBGWCR_ref\<rbrakk>\<^sub>S = read_regS DBGWCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGWCR[liftState_simp]:
  "\<lbrakk>write_reg DBGWCR_ref v\<rbrakk>\<^sub>S = write_regS DBGWCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGBXVR[liftState_simp]:
  "\<lbrakk>read_reg DBGBXVR_ref\<rbrakk>\<^sub>S = read_regS DBGBXVR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGBXVR[liftState_simp]:
  "\<lbrakk>write_reg DBGBXVR_ref v\<rbrakk>\<^sub>S = write_regS DBGBXVR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGBVR[liftState_simp]:
  "\<lbrakk>read_reg DBGBVR_ref\<rbrakk>\<^sub>S = read_regS DBGBVR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGBVR[liftState_simp]:
  "\<lbrakk>write_reg DBGBVR_ref v\<rbrakk>\<^sub>S = write_regS DBGBVR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGBCR[liftState_simp]:
  "\<lbrakk>read_reg DBGBCR_ref\<rbrakk>\<^sub>S = read_regS DBGBCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGBCR[liftState_simp]:
  "\<lbrakk>write_reg DBGBCR_ref v\<rbrakk>\<^sub>S = write_regS DBGBCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_STACK_LIMIT[liftState_simp]:
  "\<lbrakk>read_reg STACK_LIMIT_ref\<rbrakk>\<^sub>S = read_regS STACK_LIMIT_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_STACK_LIMIT[liftState_simp]:
  "\<lbrakk>write_reg STACK_LIMIT_ref v\<rbrakk>\<^sub>S = write_regS STACK_LIMIT_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_STACK_BASE[liftState_simp]:
  "\<lbrakk>read_reg STACK_BASE_ref\<rbrakk>\<^sub>S = read_regS STACK_BASE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_STACK_BASE[liftState_simp]:
  "\<lbrakk>write_reg STACK_BASE_ref v\<rbrakk>\<^sub>S = write_regS STACK_BASE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HEAP_LIMIT[liftState_simp]:
  "\<lbrakk>read_reg HEAP_LIMIT_ref\<rbrakk>\<^sub>S = read_regS HEAP_LIMIT_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HEAP_LIMIT[liftState_simp]:
  "\<lbrakk>write_reg HEAP_LIMIT_ref v\<rbrakk>\<^sub>S = write_regS HEAP_LIMIT_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HEAP_BASE[liftState_simp]:
  "\<lbrakk>read_reg HEAP_BASE_ref\<rbrakk>\<^sub>S = read_regS HEAP_BASE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HEAP_BASE[liftState_simp]:
  "\<lbrakk>write_reg HEAP_BASE_ref v\<rbrakk>\<^sub>S = write_regS HEAP_BASE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_has_spe_pseudo_cycles[liftState_simp]:
  "\<lbrakk>read_reg has_spe_pseudo_cycles_ref\<rbrakk>\<^sub>S = read_regS has_spe_pseudo_cycles_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_has_spe_pseudo_cycles[liftState_simp]:
  "\<lbrakk>write_reg has_spe_pseudo_cycles_ref v\<rbrakk>\<^sub>S = write_regS has_spe_pseudo_cycles_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMCR_EL3_LEN_VALUE[liftState_simp]:
  "\<lbrakk>read_reg SMCR_EL3_LEN_VALUE_ref\<rbrakk>\<^sub>S = read_regS SMCR_EL3_LEN_VALUE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMCR_EL3_LEN_VALUE[liftState_simp]:
  "\<lbrakk>write_reg SMCR_EL3_LEN_VALUE_ref v\<rbrakk>\<^sub>S = write_regS SMCR_EL3_LEN_VALUE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPTR_EL3_ESM_VALUE[liftState_simp]:
  "\<lbrakk>read_reg CPTR_EL3_ESM_VALUE_ref\<rbrakk>\<^sub>S = read_regS CPTR_EL3_ESM_VALUE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPTR_EL3_ESM_VALUE[liftState_simp]:
  "\<lbrakk>write_reg CPTR_EL3_ESM_VALUE_ref v\<rbrakk>\<^sub>S = write_regS CPTR_EL3_ESM_VALUE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPTR_EL3_EZ_VALUE[liftState_simp]:
  "\<lbrakk>read_reg CPTR_EL3_EZ_VALUE_ref\<rbrakk>\<^sub>S = read_regS CPTR_EL3_EZ_VALUE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPTR_EL3_EZ_VALUE[liftState_simp]:
  "\<lbrakk>write_reg CPTR_EL3_EZ_VALUE_ref v\<rbrakk>\<^sub>S = write_regS CPTR_EL3_EZ_VALUE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZCR_EL3_LEN_VALUE[liftState_simp]:
  "\<lbrakk>read_reg ZCR_EL3_LEN_VALUE_ref\<rbrakk>\<^sub>S = read_regS ZCR_EL3_LEN_VALUE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZCR_EL3_LEN_VALUE[liftState_simp]:
  "\<lbrakk>write_reg ZCR_EL3_LEN_VALUE_ref v\<rbrakk>\<^sub>S = write_regS ZCR_EL3_LEN_VALUE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CFG_RMR_AA64[liftState_simp]:
  "\<lbrakk>read_reg CFG_RMR_AA64_ref\<rbrakk>\<^sub>S = read_regS CFG_RMR_AA64_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CFG_RMR_AA64[liftState_simp]:
  "\<lbrakk>write_reg CFG_RMR_AA64_ref v\<rbrakk>\<^sub>S = write_regS CFG_RMR_AA64_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBG_ROM_ADDR[liftState_simp]:
  "\<lbrakk>read_reg DBG_ROM_ADDR_ref\<rbrakk>\<^sub>S = read_regS DBG_ROM_ADDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBG_ROM_ADDR[liftState_simp]:
  "\<lbrakk>write_reg DBG_ROM_ADDR_ref v\<rbrakk>\<^sub>S = write_regS DBG_ROM_ADDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mops_forward_copy[liftState_simp]:
  "\<lbrakk>read_reg mops_forward_copy_ref\<rbrakk>\<^sub>S = read_regS mops_forward_copy_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mops_forward_copy[liftState_simp]:
  "\<lbrakk>write_reg mops_forward_copy_ref v\<rbrakk>\<^sub>S = write_regS mops_forward_copy_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_trickbox_enabled[liftState_simp]:
  "\<lbrakk>read_reg trickbox_enabled_ref\<rbrakk>\<^sub>S = read_regS trickbox_enabled_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_trickbox_enabled[liftState_simp]:
  "\<lbrakk>write_reg trickbox_enabled_ref v\<rbrakk>\<^sub>S = write_regS trickbox_enabled_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ignore_rvbar_in_aarch32[liftState_simp]:
  "\<lbrakk>read_reg ignore_rvbar_in_aarch32_ref\<rbrakk>\<^sub>S = read_regS ignore_rvbar_in_aarch32_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ignore_rvbar_in_aarch32[liftState_simp]:
  "\<lbrakk>write_reg ignore_rvbar_in_aarch32_ref v\<rbrakk>\<^sub>S = write_regS ignore_rvbar_in_aarch32_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_unpred_tsize_aborts[liftState_simp]:
  "\<lbrakk>read_reg unpred_tsize_aborts_ref\<rbrakk>\<^sub>S = read_regS unpred_tsize_aborts_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_unpred_tsize_aborts[liftState_simp]:
  "\<lbrakk>write_reg unpred_tsize_aborts_ref v\<rbrakk>\<^sub>S = write_regS unpred_tsize_aborts_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnDeviceWrite[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnDeviceWrite_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnDeviceWrite_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnDeviceWrite[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnDeviceWrite_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnDeviceWrite_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnWriteNormNonCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnWriteNormNonCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnWriteNormNonCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnWriteNormNonCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnWriteNormNonCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnWriteNormNonCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnWriteNormCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnWriteNormCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnWriteNormCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnWriteNormCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnWriteNormCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnWriteNormCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnTTWNonCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnTTWNonCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnTTWNonCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnTTWNonCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnTTWNonCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnTTWNonCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnTTWCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnTTWCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnTTWCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnTTWCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnTTWCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnTTWCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnPrefetch[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnPrefetch_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnPrefetch_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnPrefetch[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnPrefetch_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnPrefetch_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnSoWrite[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnSoWrite_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnSoWrite_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnSoWrite[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnSoWrite_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnSoWrite_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnSoRead[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnSoRead_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnSoRead_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnSoRead[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnSoRead_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnSoRead_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnDeviceRead[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnDeviceRead_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnDeviceRead_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnDeviceRead[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnDeviceRead_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnDeviceRead_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnReadNormNonCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnReadNormNonCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnReadNormNonCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnReadNormNonCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnReadNormNonCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnReadNormNonCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_syncAbortOnReadNormCache[liftState_simp]:
  "\<lbrakk>read_reg syncAbortOnReadNormCache_ref\<rbrakk>\<^sub>S = read_regS syncAbortOnReadNormCache_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_syncAbortOnReadNormCache[liftState_simp]:
  "\<lbrakk>write_reg syncAbortOnReadNormCache_ref v\<rbrakk>\<^sub>S = write_regS syncAbortOnReadNormCache_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMUBase[liftState_simp]:
  "\<lbrakk>read_reg PMUBase_ref\<rbrakk>\<^sub>S = read_regS PMUBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMUBase[liftState_simp]:
  "\<lbrakk>write_reg PMUBase_ref v\<rbrakk>\<^sub>S = write_regS PMUBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICITSControlBase[liftState_simp]:
  "\<lbrakk>read_reg GICITSControlBase_ref\<rbrakk>\<^sub>S = read_regS GICITSControlBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICITSControlBase[liftState_simp]:
  "\<lbrakk>write_reg GICITSControlBase_ref v\<rbrakk>\<^sub>S = write_regS GICITSControlBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICDistBase[liftState_simp]:
  "\<lbrakk>read_reg GICDistBase_ref\<rbrakk>\<^sub>S = read_regS GICDistBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICDistBase[liftState_simp]:
  "\<lbrakk>write_reg GICDistBase_ref v\<rbrakk>\<^sub>S = write_regS GICDistBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICCPUInterfaceBase[liftState_simp]:
  "\<lbrakk>read_reg GICCPUInterfaceBase_ref\<rbrakk>\<^sub>S = read_regS GICCPUInterfaceBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICCPUInterfaceBase[liftState_simp]:
  "\<lbrakk>write_reg GICCPUInterfaceBase_ref v\<rbrakk>\<^sub>S = write_regS GICCPUInterfaceBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ExtDebugBase[liftState_simp]:
  "\<lbrakk>read_reg ExtDebugBase_ref\<rbrakk>\<^sub>S = read_regS ExtDebugBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ExtDebugBase[liftState_simp]:
  "\<lbrakk>write_reg ExtDebugBase_ref v\<rbrakk>\<^sub>S = write_regS ExtDebugBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTControlBase[liftState_simp]:
  "\<lbrakk>read_reg CNTControlBase_ref\<rbrakk>\<^sub>S = read_regS CNTControlBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTControlBase[liftState_simp]:
  "\<lbrakk>write_reg CNTControlBase_ref v\<rbrakk>\<^sub>S = write_regS CNTControlBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIBase[liftState_simp]:
  "\<lbrakk>read_reg CTIBase_ref\<rbrakk>\<^sub>S = read_regS CTIBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIBase[liftState_simp]:
  "\<lbrakk>write_reg CTIBase_ref v\<rbrakk>\<^sub>S = write_regS CTIBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg DBGDTR_EL0_ref\<rbrakk>\<^sub>S = read_regS DBGDTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg DBGDTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS DBGDTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DACR_S[liftState_simp]:
  "\<lbrakk>read_reg DACR_S_ref\<rbrakk>\<^sub>S = read_regS DACR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DACR_S[liftState_simp]:
  "\<lbrakk>write_reg DACR_S_ref v\<rbrakk>\<^sub>S = write_regS DACR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DACR_NS[liftState_simp]:
  "\<lbrakk>read_reg DACR_NS_ref\<rbrakk>\<^sub>S = read_regS DACR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DACR_NS[liftState_simp]:
  "\<lbrakk>write_reg DACR_NS_ref v\<rbrakk>\<^sub>S = write_regS DACR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HMAIR1[liftState_simp]:
  "\<lbrakk>read_reg HMAIR1_ref\<rbrakk>\<^sub>S = read_regS HMAIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HMAIR1[liftState_simp]:
  "\<lbrakk>write_reg HMAIR1_ref v\<rbrakk>\<^sub>S = write_regS HMAIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HMAIR0[liftState_simp]:
  "\<lbrakk>read_reg HMAIR0_ref\<rbrakk>\<^sub>S = read_regS HMAIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HMAIR0[liftState_simp]:
  "\<lbrakk>write_reg HMAIR0_ref v\<rbrakk>\<^sub>S = write_regS HMAIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR1_S[liftState_simp]:
  "\<lbrakk>read_reg MAIR1_S_ref\<rbrakk>\<^sub>S = read_regS MAIR1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR1_S[liftState_simp]:
  "\<lbrakk>write_reg MAIR1_S_ref v\<rbrakk>\<^sub>S = write_regS MAIR1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR1_NS[liftState_simp]:
  "\<lbrakk>read_reg MAIR1_NS_ref\<rbrakk>\<^sub>S = read_regS MAIR1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR1_NS[liftState_simp]:
  "\<lbrakk>write_reg MAIR1_NS_ref v\<rbrakk>\<^sub>S = write_regS MAIR1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR0_S[liftState_simp]:
  "\<lbrakk>read_reg MAIR0_S_ref\<rbrakk>\<^sub>S = read_regS MAIR0_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR0_S[liftState_simp]:
  "\<lbrakk>write_reg MAIR0_S_ref v\<rbrakk>\<^sub>S = write_regS MAIR0_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR0_NS[liftState_simp]:
  "\<lbrakk>read_reg MAIR0_NS_ref\<rbrakk>\<^sub>S = read_regS MAIR0_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR0_NS[liftState_simp]:
  "\<lbrakk>write_reg MAIR0_NS_ref v\<rbrakk>\<^sub>S = write_regS MAIR0_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBTGTINJ_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBTGTINJ_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBTGTINJ_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBTGTINJ_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBTGTINJ_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBTGTINJ_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBSRCINJ_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBSRCINJ_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBSRCINJ_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBSRCINJ_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBSRCINJ_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBSRCINJ_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleCounter[liftState_simp]:
  "\<lbrakk>read_reg SPESampleCounter_ref\<rbrakk>\<^sub>S = read_regS SPESampleCounter_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleCounter[liftState_simp]:
  "\<lbrakk>write_reg SPESampleCounter_ref v\<rbrakk>\<^sub>S = write_regS SPESampleCounter_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPERecordData[liftState_simp]:
  "\<lbrakk>read_reg SPERecordData_ref\<rbrakk>\<^sub>S = read_regS SPERecordData_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPERecordData[liftState_simp]:
  "\<lbrakk>write_reg SPERecordData_ref v\<rbrakk>\<^sub>S = write_regS SPERecordData_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSDSFR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSDSFR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSDSFR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSDSFR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSDSFR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSDSFR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMBPTR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMBPTR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMBPTR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMBPTR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMBPTR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMBPTR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCCNTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCCNTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCCNTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCCNTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCCNTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCCNTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMEVCNTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMEVCNTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMEVCNTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMEVCNTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMEVCNTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMEVCNTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_rme_l0gptsz[liftState_simp]:
  "\<lbrakk>read_reg rme_l0gptsz_ref\<rbrakk>\<^sub>S = read_regS rme_l0gptsz_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_rme_l0gptsz[liftState_simp]:
  "\<lbrakk>write_reg rme_l0gptsz_ref v\<rbrakk>\<^sub>S = write_regS rme_l0gptsz_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_has_altsp[liftState_simp]:
  "\<lbrakk>read_reg mpam_has_altsp_ref\<rbrakk>\<^sub>S = read_regS mpam_has_altsp_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_has_altsp[liftState_simp]:
  "\<lbrakk>write_reg mpam_has_altsp_ref v\<rbrakk>\<^sub>S = write_regS mpam_has_altsp_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mecid_width[liftState_simp]:
  "\<lbrakk>read_reg mecid_width_ref\<rbrakk>\<^sub>S = read_regS mecid_width_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mecid_width[liftState_simp]:
  "\<lbrakk>write_reg mecid_width_ref v\<rbrakk>\<^sub>S = write_regS mecid_width_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_gmid_log2_block_size[liftState_simp]:
  "\<lbrakk>read_reg gmid_log2_block_size_ref\<rbrakk>\<^sub>S = read_regS gmid_log2_block_size_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_gmid_log2_block_size[liftState_simp]:
  "\<lbrakk>write_reg gmid_log2_block_size_ref v\<rbrakk>\<^sub>S = write_regS gmid_log2_block_size_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_dczid_log2_block_size[liftState_simp]:
  "\<lbrakk>read_reg dczid_log2_block_size_ref\<rbrakk>\<^sub>S = read_regS dczid_log2_block_size_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_dczid_log2_block_size[liftState_simp]:
  "\<lbrakk>write_reg dczid_log2_block_size_ref v\<rbrakk>\<^sub>S = write_regS dczid_log2_block_size_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTbase_frequency[liftState_simp]:
  "\<lbrakk>read_reg CNTbase_frequency_ref\<rbrakk>\<^sub>S = read_regS CNTbase_frequency_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTbase_frequency[liftState_simp]:
  "\<lbrakk>write_reg CNTbase_frequency_ref v\<rbrakk>\<^sub>S = write_regS CNTbase_frequency_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_g1_activity_monitor_offset_implemented[liftState_simp]:
  "\<lbrakk>read_reg g1_activity_monitor_offset_implemented_ref\<rbrakk>\<^sub>S = read_regS g1_activity_monitor_offset_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_g1_activity_monitor_offset_implemented[liftState_simp]:
  "\<lbrakk>write_reg g1_activity_monitor_offset_implemented_ref v\<rbrakk>\<^sub>S = write_regS g1_activity_monitor_offset_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_g1_activity_monitor_implemented[liftState_simp]:
  "\<lbrakk>read_reg g1_activity_monitor_implemented_ref\<rbrakk>\<^sub>S = read_regS g1_activity_monitor_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_g1_activity_monitor_implemented[liftState_simp]:
  "\<lbrakk>write_reg g1_activity_monitor_implemented_ref v\<rbrakk>\<^sub>S = write_regS g1_activity_monitor_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64PFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64PFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64PFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64PFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64PFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64PFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64MMFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64MMFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64MMFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64MMFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64MMFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64MMFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64ISAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64ISAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64ISAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64ISAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64ISAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64ISAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64DFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64DFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64DFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64DFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64DFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64DFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64DFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64DFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64DFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64DFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64DFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64DFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_TYPER[liftState_simp]:
  "\<lbrakk>read_reg GICD_TYPER_ref\<rbrakk>\<^sub>S = read_regS GICD_TYPER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_TYPER[liftState_simp]:
  "\<lbrakk>write_reg GICD_TYPER_ref v\<rbrakk>\<^sub>S = write_regS GICD_TYPER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_supported_va_size[liftState_simp]:
  "\<lbrakk>read_reg supported_va_size_ref\<rbrakk>\<^sub>S = read_regS supported_va_size_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_supported_va_size[liftState_simp]:
  "\<lbrakk>write_reg supported_va_size_ref v\<rbrakk>\<^sub>S = write_regS supported_va_size_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDEVARCH[liftState_simp]:
  "\<lbrakk>read_reg EDDEVARCH_ref\<rbrakk>\<^sub>S = read_regS EDDEVARCH_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDEVARCH[liftState_simp]:
  "\<lbrakk>write_reg EDDEVARCH_ref v\<rbrakk>\<^sub>S = write_regS EDDEVARCH_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVARCH[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVARCH_ref\<rbrakk>\<^sub>S = read_regS CTIDEVARCH_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVARCH[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVARCH_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVARCH_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTFID0[liftState_simp]:
  "\<lbrakk>read_reg CNTFID0_ref\<rbrakk>\<^sub>S = read_regS CNTFID0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTFID0[liftState_simp]:
  "\<lbrakk>write_reg CNTFID0_ref v\<rbrakk>\<^sub>S = write_regS CNTFID0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CFG_MPIDR[liftState_simp]:
  "\<lbrakk>read_reg CFG_MPIDR_ref\<rbrakk>\<^sub>S = read_regS CFG_MPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CFG_MPIDR[liftState_simp]:
  "\<lbrakk>write_reg CFG_MPIDR_ref v\<rbrakk>\<^sub>S = write_regS CFG_MPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMIIDR[liftState_simp]:
  "\<lbrakk>read_reg AMIIDR_ref\<rbrakk>\<^sub>S = read_regS AMIIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMIIDR[liftState_simp]:
  "\<lbrakk>write_reg AMIIDR_ref v\<rbrakk>\<^sub>S = write_regS AMIIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMEVTYPER0_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMEVTYPER0_EL0_ref\<rbrakk>\<^sub>S = read_regS AMEVTYPER0_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMEVTYPER0_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMEVTYPER0_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMEVTYPER0_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMDEVARCH[liftState_simp]:
  "\<lbrakk>read_reg AMDEVARCH_ref\<rbrakk>\<^sub>S = read_regS AMDEVARCH_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMDEVARCH[liftState_simp]:
  "\<lbrakk>write_reg AMDEVARCH_ref v\<rbrakk>\<^sub>S = write_regS AMDEVARCH_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPMSELR_EL0[liftState_simp]:
  "\<lbrakk>read_reg SPMSELR_EL0_ref\<rbrakk>\<^sub>S = read_regS SPMSELR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPMSELR_EL0[liftState_simp]:
  "\<lbrakk>write_reg SPMSELR_EL0_ref v\<rbrakk>\<^sub>S = write_regS SPMSELR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMPRI_EL1[liftState_simp]:
  "\<lbrakk>read_reg SMPRI_EL1_ref\<rbrakk>\<^sub>S = read_regS SMPRI_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMPRI_EL1[liftState_simp]:
  "\<lbrakk>write_reg SMPRI_EL1_ref v\<rbrakk>\<^sub>S = write_regS SMPRI_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg SMIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS SMIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg SMIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS SMIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMZR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMZR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMZR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMZR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMZR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMZR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMXEVCNTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMXEVCNTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMXEVCNTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMXEVCNTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMXEVCNTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMXEVCNTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMUACR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMUACR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMUACR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMUACR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMUACR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMUACR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSSCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSSCR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSSCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSSCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSSCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSSCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSNEVFR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSNEVFR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSNEVFR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSNEVFR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSNEVFR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSNEVFR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSLATFR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSLATFR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSLATFR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSLATFR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSLATFR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSLATFR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSIRR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSIRR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSIRR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSIRR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSIRR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSIRR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSICR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSICR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSICR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSICR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSICR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSICR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSFCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSFCR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSFCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSFCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSFCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSFCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSEVFR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSEVFR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSEVFR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSEVFR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSEVFR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSEVFR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMMIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMMIR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMMIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMMIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMMIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMMIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMECR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMECR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMECR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMECR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMECR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMECR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMBIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMBIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMBIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMBIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMBIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMBIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PAR_EL1_ref\<rbrakk>\<^sub>S = read_regS PAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSLAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSLAR_EL1_ref\<rbrakk>\<^sub>S = read_regS OSLAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSLAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSLAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSLAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSDTRTX_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSDTRTX_EL1_ref\<rbrakk>\<^sub>S = read_regS OSDTRTX_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSDTRTX_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSDTRTX_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSDTRTX_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSDTRRX_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSDTRRX_EL1_ref\<rbrakk>\<^sub>S = read_regS OSDTRRX_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSDTRRX_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSDTRRX_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSDTRRX_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECIDR_EL2[liftState_simp]:
  "\<lbrakk>read_reg MECIDR_EL2_ref\<rbrakk>\<^sub>S = read_regS MECIDR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECIDR_EL2[liftState_simp]:
  "\<lbrakk>write_reg MECIDR_EL2_ref v\<rbrakk>\<^sub>S = write_regS MECIDR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDSELR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MDSELR_EL1_ref\<rbrakk>\<^sub>S = read_regS MDSELR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDSELR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MDSELR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MDSELR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LORSA_EL1[liftState_simp]:
  "\<lbrakk>read_reg LORSA_EL1_ref\<rbrakk>\<^sub>S = read_regS LORSA_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LORSA_EL1[liftState_simp]:
  "\<lbrakk>write_reg LORSA_EL1_ref v\<rbrakk>\<^sub>S = write_regS LORSA_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LORN_EL1[liftState_simp]:
  "\<lbrakk>read_reg LORN_EL1_ref\<rbrakk>\<^sub>S = read_regS LORN_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LORN_EL1[liftState_simp]:
  "\<lbrakk>write_reg LORN_EL1_ref v\<rbrakk>\<^sub>S = write_regS LORN_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LORID_EL1[liftState_simp]:
  "\<lbrakk>read_reg LORID_EL1_ref\<rbrakk>\<^sub>S = read_regS LORID_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LORID_EL1[liftState_simp]:
  "\<lbrakk>write_reg LORID_EL1_ref v\<rbrakk>\<^sub>S = write_regS LORID_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LOREA_EL1[liftState_simp]:
  "\<lbrakk>read_reg LOREA_EL1_ref\<rbrakk>\<^sub>S = read_regS LOREA_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LOREA_EL1[liftState_simp]:
  "\<lbrakk>write_reg LOREA_EL1_ref v\<rbrakk>\<^sub>S = write_regS LOREA_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LORC_EL1[liftState_simp]:
  "\<lbrakk>read_reg LORC_EL1_ref\<rbrakk>\<^sub>S = read_regS LORC_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LORC_EL1[liftState_simp]:
  "\<lbrakk>write_reg LORC_EL1_ref v\<rbrakk>\<^sub>S = write_regS LORC_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64ZFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64ZFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64ZFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64ZFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64ZFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64ZFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64SMFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64SMFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64SMFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64SMFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64SMFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64SMFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64PFR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64PFR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64PFR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64PFR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64PFR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64PFR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64PFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64PFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64PFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64PFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64PFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64PFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64MMFR4_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64MMFR4_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64MMFR4_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64MMFR4_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64MMFR4_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64MMFR4_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64MMFR3_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64MMFR3_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64MMFR3_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64MMFR3_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64MMFR3_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64MMFR3_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64MMFR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64MMFR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64MMFR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64MMFR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64MMFR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64MMFR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64MMFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64MMFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64MMFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64MMFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64MMFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64MMFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64ISAR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64ISAR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64ISAR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64ISAR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64ISAR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64ISAR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64ISAR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64ISAR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64ISAR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64ISAR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64ISAR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64ISAR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64AFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64AFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64AFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64AFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64AFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64AFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AA64AFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AA64AFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AA64AFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AA64AFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AA64AFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AA64AFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_NMIAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_NMIAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_NMIAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_NMIAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_NMIAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_NMIAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_EL3[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_EL3_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_EL3[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_EL3_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_NMIAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_NMIAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_NMIAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_NMIAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_NMIAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_NMIAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN1_EL3[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN1_EL3_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN1_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN1_EL3[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN1_EL3_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN1_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_CTLR_EL3[liftState_simp]:
  "\<lbrakk>read_reg ICC_CTLR_EL3_ref\<rbrakk>\<^sub>S = read_regS ICC_CTLR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_CTLR_EL3[liftState_simp]:
  "\<lbrakk>write_reg ICC_CTLR_EL3_ref v\<rbrakk>\<^sub>S = write_regS ICC_CTLR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGWTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGWTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGWTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGWTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGWTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGWTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGWTR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGWTR2_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGWTR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGWTR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGWTR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGWTR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGRTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGRTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGRTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGRTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGRTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGRTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGRTR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGRTR2_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGRTR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGRTR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGRTR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGRTR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGITR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGITR2_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGITR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGITR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGITR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGITR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDFGWTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HDFGWTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HDFGWTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDFGWTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HDFGWTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HDFGWTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDFGWTR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg HDFGWTR2_EL2_ref\<rbrakk>\<^sub>S = read_regS HDFGWTR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDFGWTR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg HDFGWTR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS HDFGWTR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDFGRTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HDFGRTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HDFGRTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDFGRTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HDFGRTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HDFGRTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDFGRTR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg HDFGRTR2_EL2_ref\<rbrakk>\<^sub>S = read_regS HDFGRTR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDFGRTR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg HDFGRTR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS HDFGRTR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HAFGRTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HAFGRTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HAFGRTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HAFGRTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HAFGRTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HAFGRTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GMID_EL1[liftState_simp]:
  "\<lbrakk>read_reg GMID_EL1_ref\<rbrakk>\<^sub>S = read_regS GMID_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GMID_EL1[liftState_simp]:
  "\<lbrakk>write_reg GMID_EL1_ref v\<rbrakk>\<^sub>S = write_regS GMID_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DCZID_EL0[liftState_simp]:
  "\<lbrakk>read_reg DCZID_EL0_ref\<rbrakk>\<^sub>S = read_regS DCZID_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DCZID_EL0[liftState_simp]:
  "\<lbrakk>write_reg DCZID_EL0_ref v\<rbrakk>\<^sub>S = write_regS DCZID_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRTX_EL0[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRTX_EL0_ref\<rbrakk>\<^sub>S = read_regS DBGDTRTX_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRTX_EL0[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRTX_EL0_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRTX_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDTRRX_EL0[liftState_simp]:
  "\<lbrakk>read_reg DBGDTRRX_EL0_ref\<rbrakk>\<^sub>S = read_regS DBGDTRRX_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDTRRX_EL0[liftState_simp]:
  "\<lbrakk>write_reg DBGDTRRX_EL0_ref v\<rbrakk>\<^sub>S = write_regS DBGDTRRX_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DACR32_EL2[liftState_simp]:
  "\<lbrakk>read_reg DACR32_EL2_ref\<rbrakk>\<^sub>S = read_regS DACR32_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DACR32_EL2[liftState_simp]:
  "\<lbrakk>write_reg DACR32_EL2_ref v\<rbrakk>\<^sub>S = write_regS DACR32_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTV_TVAL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTV_TVAL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTV_TVAL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTV_TVAL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTV_TVAL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTV_TVAL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_TVAL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTP_TVAL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTP_TVAL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_TVAL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTP_TVAL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTP_TVAL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTPS_TVAL_EL1[liftState_simp]:
  "\<lbrakk>read_reg CNTPS_TVAL_EL1_ref\<rbrakk>\<^sub>S = read_regS CNTPS_TVAL_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTPS_TVAL_EL1[liftState_simp]:
  "\<lbrakk>write_reg CNTPS_TVAL_EL1_ref v\<rbrakk>\<^sub>S = write_regS CNTPS_TVAL_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHV_TVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHV_TVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHV_TVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHV_TVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHV_TVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHV_TVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHVS_TVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHVS_TVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHVS_TVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHVS_TVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHVS_TVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHVS_TVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHP_TVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHP_TVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHP_TVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHP_TVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHP_TVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHP_TVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHPS_TVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHPS_TVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHPS_TVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHPS_TVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHPS_TVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHPS_TVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTFRQ_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTFRQ_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTFRQ_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTFRQ_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTFRQ_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTFRQ_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBINFINJ_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBINFINJ_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBINFINJ_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBINFINJ_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBINFINJ_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBINFINJ_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCG1IDR_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCG1IDR_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCG1IDR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCG1IDR_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCG1IDR_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCG1IDR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ACCDATA_EL1[liftState_simp]:
  "\<lbrakk>read_reg ACCDATA_EL1_ref\<rbrakk>\<^sub>S = read_regS ACCDATA_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ACCDATA_EL1[liftState_simp]:
  "\<lbrakk>write_reg ACCDATA_EL1_ref v\<rbrakk>\<^sub>S = write_regS ACCDATA_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_num_ctx_breakpoints[liftState_simp]:
  "\<lbrakk>read_reg num_ctx_breakpoints_ref\<rbrakk>\<^sub>S = read_regS num_ctx_breakpoints_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_num_ctx_breakpoints[liftState_simp]:
  "\<lbrakk>write_reg num_ctx_breakpoints_ref v\<rbrakk>\<^sub>S = write_regS num_ctx_breakpoints_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_exclusive_granule_size[liftState_simp]:
  "\<lbrakk>read_reg exclusive_granule_size_ref\<rbrakk>\<^sub>S = read_regS exclusive_granule_size_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_exclusive_granule_size[liftState_simp]:
  "\<lbrakk>write_reg exclusive_granule_size_ref v\<rbrakk>\<^sub>S = write_regS exclusive_granule_size_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TLBTR[liftState_simp]:
  "\<lbrakk>read_reg TLBTR_ref\<rbrakk>\<^sub>S = read_regS TLBTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TLBTR[liftState_simp]:
  "\<lbrakk>write_reg TLBTR_ref v\<rbrakk>\<^sub>S = write_regS TLBTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID3[liftState_simp]:
  "\<lbrakk>read_reg PMCEID3_ref\<rbrakk>\<^sub>S = read_regS PMCEID3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID3[liftState_simp]:
  "\<lbrakk>write_reg PMCEID3_ref v\<rbrakk>\<^sub>S = write_regS PMCEID3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID2[liftState_simp]:
  "\<lbrakk>read_reg PMCEID2_ref\<rbrakk>\<^sub>S = read_regS PMCEID2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID2[liftState_simp]:
  "\<lbrakk>write_reg PMCEID2_ref v\<rbrakk>\<^sub>S = write_regS PMCEID2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID1[liftState_simp]:
  "\<lbrakk>read_reg PMCEID1_ref\<rbrakk>\<^sub>S = read_regS PMCEID1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID1[liftState_simp]:
  "\<lbrakk>write_reg PMCEID1_ref v\<rbrakk>\<^sub>S = write_regS PMCEID1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID1_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCEID1_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCEID1_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID1_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCEID1_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCEID1_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID0[liftState_simp]:
  "\<lbrakk>read_reg PMCEID0_ref\<rbrakk>\<^sub>S = read_regS PMCEID0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID0[liftState_simp]:
  "\<lbrakk>write_reg PMCEID0_ref v\<rbrakk>\<^sub>S = write_regS PMCEID0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCEID0_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCEID0_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCEID0_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCEID0_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCEID0_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCEID0_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NMRR_S[liftState_simp]:
  "\<lbrakk>read_reg NMRR_S_ref\<rbrakk>\<^sub>S = read_regS NMRR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NMRR_S[liftState_simp]:
  "\<lbrakk>write_reg NMRR_S_ref v\<rbrakk>\<^sub>S = write_regS NMRR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NMRR_NS[liftState_simp]:
  "\<lbrakk>read_reg NMRR_NS_ref\<rbrakk>\<^sub>S = read_regS NMRR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NMRR_NS[liftState_simp]:
  "\<lbrakk>write_reg NMRR_NS_ref v\<rbrakk>\<^sub>S = write_regS NMRR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR1[liftState_simp]:
  "\<lbrakk>read_reg MVFR1_ref\<rbrakk>\<^sub>S = read_regS MVFR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR1[liftState_simp]:
  "\<lbrakk>write_reg MVFR1_ref v\<rbrakk>\<^sub>S = write_regS MVFR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg MVFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS MVFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg MVFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS MVFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR0[liftState_simp]:
  "\<lbrakk>read_reg MVFR0_ref\<rbrakk>\<^sub>S = read_regS MVFR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR0[liftState_simp]:
  "\<lbrakk>write_reg MVFR0_ref v\<rbrakk>\<^sub>S = write_regS MVFR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg MVFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS MVFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg MVFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS MVFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MIDR[liftState_simp]:
  "\<lbrakk>read_reg MIDR_ref\<rbrakk>\<^sub>S = read_regS MIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MIDR[liftState_simp]:
  "\<lbrakk>write_reg MIDR_ref v\<rbrakk>\<^sub>S = write_regS MIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS MIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR1[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR1_ref\<rbrakk>\<^sub>S = read_regS ID_PFR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR1[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR1_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_PFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR0[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR0_ref\<rbrakk>\<^sub>S = read_regS ID_PFR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR0[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR0_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_PFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR4[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR4_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR4[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR4_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR4_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR4_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR4_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR4_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR4_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR4_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR3[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR3_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR3[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR3_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR3_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR3_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR3_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR3_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR3_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR3_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR2[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR2_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR2[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR2_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR0[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR0_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR0[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR0_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR6[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR6_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR6_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR6[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR6_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR6_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR6_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR6_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR6_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR6_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR6_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR6_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR4[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR4_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR4[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR4_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR4_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR4_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR4_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR4_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR4_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR4_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR3[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR3_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR3[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR3_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR3_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR3_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR3_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR3_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR3_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR3_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR2[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR2_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR2[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR2_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_DFR0[liftState_simp]:
  "\<lbrakk>read_reg ID_DFR0_ref\<rbrakk>\<^sub>S = read_regS ID_DFR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_DFR0[liftState_simp]:
  "\<lbrakk>write_reg ID_DFR0_ref v\<rbrakk>\<^sub>S = write_regS ID_DFR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_DFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_DFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_DFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_DFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_DFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_DFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPSID[liftState_simp]:
  "\<lbrakk>read_reg FPSID_ref\<rbrakk>\<^sub>S = read_regS FPSID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPSID[liftState_simp]:
  "\<lbrakk>write_reg FPSID_ref v\<rbrakk>\<^sub>S = write_regS FPSID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDEVID[liftState_simp]:
  "\<lbrakk>read_reg DBGDEVID_ref\<rbrakk>\<^sub>S = read_regS DBGDEVID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDEVID[liftState_simp]:
  "\<lbrakk>write_reg DBGDEVID_ref v\<rbrakk>\<^sub>S = write_regS DBGDEVID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CLIDR[liftState_simp]:
  "\<lbrakk>read_reg CLIDR_ref\<rbrakk>\<^sub>S = read_regS CLIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CLIDR[liftState_simp]:
  "\<lbrakk>write_reg CLIDR_ref v\<rbrakk>\<^sub>S = write_regS CLIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VTCR[liftState_simp]:
  "\<lbrakk>read_reg VTCR_ref\<rbrakk>\<^sub>S = read_regS VTCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VTCR[liftState_simp]:
  "\<lbrakk>write_reg VTCR_ref v\<rbrakk>\<^sub>S = write_regS VTCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VPIDR[liftState_simp]:
  "\<lbrakk>read_reg VPIDR_ref\<rbrakk>\<^sub>S = read_regS VPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VPIDR[liftState_simp]:
  "\<lbrakk>write_reg VPIDR_ref v\<rbrakk>\<^sub>S = write_regS VPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VPIDR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VPIDR_EL2_ref\<rbrakk>\<^sub>S = read_regS VPIDR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VPIDR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VPIDR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VPIDR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VMPIDR[liftState_simp]:
  "\<lbrakk>read_reg VMPIDR_ref\<rbrakk>\<^sub>S = read_regS VMPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VMPIDR[liftState_simp]:
  "\<lbrakk>write_reg VMPIDR_ref v\<rbrakk>\<^sub>S = write_regS VMPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VMPIDR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VMPIDR_EL2_ref\<rbrakk>\<^sub>S = read_regS VMPIDR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VMPIDR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VMPIDR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VMPIDR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBCR2_S[liftState_simp]:
  "\<lbrakk>read_reg TTBCR2_S_ref\<rbrakk>\<^sub>S = read_regS TTBCR2_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBCR2_S[liftState_simp]:
  "\<lbrakk>write_reg TTBCR2_S_ref v\<rbrakk>\<^sub>S = write_regS TTBCR2_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBCR2_NS[liftState_simp]:
  "\<lbrakk>read_reg TTBCR2_NS_ref\<rbrakk>\<^sub>S = read_regS TTBCR2_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBCR2_NS[liftState_simp]:
  "\<lbrakk>write_reg TTBCR2_NS_ref v\<rbrakk>\<^sub>S = write_regS TTBCR2_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TRFCR[liftState_simp]:
  "\<lbrakk>read_reg TRFCR_ref\<rbrakk>\<^sub>S = read_regS TRFCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TRFCR[liftState_simp]:
  "\<lbrakk>write_reg TRFCR_ref v\<rbrakk>\<^sub>S = write_regS TRFCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TRFCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg TRFCR_EL1_ref\<rbrakk>\<^sub>S = read_regS TRFCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TRFCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg TRFCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS TRFCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RMR[liftState_simp]:
  "\<lbrakk>read_reg RMR_ref\<rbrakk>\<^sub>S = read_regS RMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RMR[liftState_simp]:
  "\<lbrakk>write_reg RMR_ref v\<rbrakk>\<^sub>S = write_regS RMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RMR_EL3[liftState_simp]:
  "\<lbrakk>read_reg RMR_EL3_ref\<rbrakk>\<^sub>S = read_regS RMR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RMR_EL3[liftState_simp]:
  "\<lbrakk>write_reg RMR_EL3_ref v\<rbrakk>\<^sub>S = write_regS RMR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RMR_EL1[liftState_simp]:
  "\<lbrakk>read_reg RMR_EL1_ref\<rbrakk>\<^sub>S = read_regS RMR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RMR_EL1[liftState_simp]:
  "\<lbrakk>write_reg RMR_EL1_ref v\<rbrakk>\<^sub>S = write_regS RMR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PRRR_S[liftState_simp]:
  "\<lbrakk>read_reg PRRR_S_ref\<rbrakk>\<^sub>S = read_regS PRRR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PRRR_S[liftState_simp]:
  "\<lbrakk>write_reg PRRR_S_ref v\<rbrakk>\<^sub>S = write_regS PRRR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PRRR_NS[liftState_simp]:
  "\<lbrakk>read_reg PRRR_NS_ref\<rbrakk>\<^sub>S = read_regS PRRR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PRRR_NS[liftState_simp]:
  "\<lbrakk>write_reg PRRR_NS_ref v\<rbrakk>\<^sub>S = write_regS PRRR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMVIDSR[liftState_simp]:
  "\<lbrakk>read_reg PMVIDSR_ref\<rbrakk>\<^sub>S = read_regS PMVIDSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMVIDSR[liftState_simp]:
  "\<lbrakk>write_reg PMVIDSR_ref v\<rbrakk>\<^sub>S = write_regS PMVIDSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMVCIDSR[liftState_simp]:
  "\<lbrakk>read_reg PMVCIDSR_ref\<rbrakk>\<^sub>S = read_regS PMVCIDSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMVCIDSR[liftState_simp]:
  "\<lbrakk>write_reg PMVCIDSR_ref v\<rbrakk>\<^sub>S = write_regS PMVCIDSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMUSERENR[liftState_simp]:
  "\<lbrakk>read_reg PMUSERENR_ref\<rbrakk>\<^sub>S = read_regS PMUSERENR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMUSERENR[liftState_simp]:
  "\<lbrakk>write_reg PMUSERENR_ref v\<rbrakk>\<^sub>S = write_regS PMUSERENR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMUSERENR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMUSERENR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMUSERENR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMUSERENR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMUSERENR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMUSERENR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSWINC[liftState_simp]:
  "\<lbrakk>read_reg PMSWINC_ref\<rbrakk>\<^sub>S = read_regS PMSWINC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSWINC[liftState_simp]:
  "\<lbrakk>write_reg PMSWINC_ref v\<rbrakk>\<^sub>S = write_regS PMSWINC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSWINC_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMSWINC_EL0_ref\<rbrakk>\<^sub>S = read_regS PMSWINC_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSWINC_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMSWINC_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMSWINC_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSELR[liftState_simp]:
  "\<lbrakk>read_reg PMSELR_ref\<rbrakk>\<^sub>S = read_regS PMSELR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSELR[liftState_simp]:
  "\<lbrakk>write_reg PMSELR_ref v\<rbrakk>\<^sub>S = write_regS PMSELR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSELR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMSELR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMSELR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSELR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMSELR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMSELR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPIDR4[liftState_simp]:
  "\<lbrakk>read_reg PMPIDR4_ref\<rbrakk>\<^sub>S = read_regS PMPIDR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPIDR4[liftState_simp]:
  "\<lbrakk>write_reg PMPIDR4_ref v\<rbrakk>\<^sub>S = write_regS PMPIDR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPIDR3[liftState_simp]:
  "\<lbrakk>read_reg PMPIDR3_ref\<rbrakk>\<^sub>S = read_regS PMPIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPIDR3[liftState_simp]:
  "\<lbrakk>write_reg PMPIDR3_ref v\<rbrakk>\<^sub>S = write_regS PMPIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPIDR2[liftState_simp]:
  "\<lbrakk>read_reg PMPIDR2_ref\<rbrakk>\<^sub>S = read_regS PMPIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPIDR2[liftState_simp]:
  "\<lbrakk>write_reg PMPIDR2_ref v\<rbrakk>\<^sub>S = write_regS PMPIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPIDR1[liftState_simp]:
  "\<lbrakk>read_reg PMPIDR1_ref\<rbrakk>\<^sub>S = read_regS PMPIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPIDR1[liftState_simp]:
  "\<lbrakk>write_reg PMPIDR1_ref v\<rbrakk>\<^sub>S = write_regS PMPIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPIDR0[liftState_simp]:
  "\<lbrakk>read_reg PMPIDR0_ref\<rbrakk>\<^sub>S = read_regS PMPIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPIDR0[liftState_simp]:
  "\<lbrakk>write_reg PMPIDR0_ref v\<rbrakk>\<^sub>S = write_regS PMPIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPCSR[liftState_simp]:
  "\<lbrakk>read_reg PMPCSR_ref\<rbrakk>\<^sub>S = read_regS PMPCSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPCSR[liftState_simp]:
  "\<lbrakk>write_reg PMPCSR_ref v\<rbrakk>\<^sub>S = write_regS PMPCSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMPCSCTL[liftState_simp]:
  "\<lbrakk>read_reg PMPCSCTL_ref\<rbrakk>\<^sub>S = read_regS PMPCSCTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMPCSCTL[liftState_simp]:
  "\<lbrakk>write_reg PMPCSCTL_ref v\<rbrakk>\<^sub>S = write_regS PMPCSCTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMOVS[liftState_simp]:
  "\<lbrakk>read_reg PMOVS_ref\<rbrakk>\<^sub>S = read_regS PMOVS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMOVS[liftState_simp]:
  "\<lbrakk>write_reg PMOVS_ref v\<rbrakk>\<^sub>S = write_regS PMOVS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMMIR[liftState_simp]:
  "\<lbrakk>read_reg PMMIR_ref\<rbrakk>\<^sub>S = read_regS PMMIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMMIR[liftState_simp]:
  "\<lbrakk>write_reg PMMIR_ref v\<rbrakk>\<^sub>S = write_regS PMMIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMLSR[liftState_simp]:
  "\<lbrakk>read_reg PMLSR_ref\<rbrakk>\<^sub>S = read_regS PMLSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMLSR[liftState_simp]:
  "\<lbrakk>write_reg PMLSR_ref v\<rbrakk>\<^sub>S = write_regS PMLSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMLAR[liftState_simp]:
  "\<lbrakk>read_reg PMLAR_ref\<rbrakk>\<^sub>S = read_regS PMLAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMLAR[liftState_simp]:
  "\<lbrakk>write_reg PMLAR_ref v\<rbrakk>\<^sub>S = write_regS PMLAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMITCTRL[liftState_simp]:
  "\<lbrakk>read_reg PMITCTRL_ref\<rbrakk>\<^sub>S = read_regS PMITCTRL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMITCTRL[liftState_simp]:
  "\<lbrakk>write_reg PMITCTRL_ref v\<rbrakk>\<^sub>S = write_regS PMITCTRL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMINTEN[liftState_simp]:
  "\<lbrakk>read_reg PMINTEN_ref\<rbrakk>\<^sub>S = read_regS PMINTEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMINTEN[liftState_simp]:
  "\<lbrakk>write_reg PMINTEN_ref v\<rbrakk>\<^sub>S = write_regS PMINTEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMINTENSET_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMINTENSET_EL1_ref\<rbrakk>\<^sub>S = read_regS PMINTENSET_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMINTENSET_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMINTENSET_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMINTENSET_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMIIDR[liftState_simp]:
  "\<lbrakk>read_reg PMIIDR_ref\<rbrakk>\<^sub>S = read_regS PMIIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMIIDR[liftState_simp]:
  "\<lbrakk>write_reg PMIIDR_ref v\<rbrakk>\<^sub>S = write_regS PMIIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMDEVTYPE[liftState_simp]:
  "\<lbrakk>read_reg PMDEVTYPE_ref\<rbrakk>\<^sub>S = read_regS PMDEVTYPE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMDEVTYPE[liftState_simp]:
  "\<lbrakk>write_reg PMDEVTYPE_ref v\<rbrakk>\<^sub>S = write_regS PMDEVTYPE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMDEVID[liftState_simp]:
  "\<lbrakk>read_reg PMDEVID_ref\<rbrakk>\<^sub>S = read_regS PMDEVID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMDEVID[liftState_simp]:
  "\<lbrakk>write_reg PMDEVID_ref v\<rbrakk>\<^sub>S = write_regS PMDEVID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCNTEN[liftState_simp]:
  "\<lbrakk>read_reg PMCNTEN_ref\<rbrakk>\<^sub>S = read_regS PMCNTEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCNTEN[liftState_simp]:
  "\<lbrakk>write_reg PMCNTEN_ref v\<rbrakk>\<^sub>S = write_regS PMCNTEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCIDR3[liftState_simp]:
  "\<lbrakk>read_reg PMCIDR3_ref\<rbrakk>\<^sub>S = read_regS PMCIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCIDR3[liftState_simp]:
  "\<lbrakk>write_reg PMCIDR3_ref v\<rbrakk>\<^sub>S = write_regS PMCIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCIDR2[liftState_simp]:
  "\<lbrakk>read_reg PMCIDR2_ref\<rbrakk>\<^sub>S = read_regS PMCIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCIDR2[liftState_simp]:
  "\<lbrakk>write_reg PMCIDR2_ref v\<rbrakk>\<^sub>S = write_regS PMCIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCIDR1[liftState_simp]:
  "\<lbrakk>read_reg PMCIDR1_ref\<rbrakk>\<^sub>S = read_regS PMCIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCIDR1[liftState_simp]:
  "\<lbrakk>write_reg PMCIDR1_ref v\<rbrakk>\<^sub>S = write_regS PMCIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCIDR0[liftState_simp]:
  "\<lbrakk>read_reg PMCIDR0_ref\<rbrakk>\<^sub>S = read_regS PMCIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCIDR0[liftState_simp]:
  "\<lbrakk>write_reg PMCIDR0_ref v\<rbrakk>\<^sub>S = write_regS PMCIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCGCR0[liftState_simp]:
  "\<lbrakk>read_reg PMCGCR0_ref\<rbrakk>\<^sub>S = read_regS PMCGCR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCGCR0[liftState_simp]:
  "\<lbrakk>write_reg PMCGCR0_ref v\<rbrakk>\<^sub>S = write_regS PMCGCR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCFGR[liftState_simp]:
  "\<lbrakk>read_reg PMCFGR_ref\<rbrakk>\<^sub>S = read_regS PMCFGR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCFGR[liftState_simp]:
  "\<lbrakk>write_reg PMCFGR_ref v\<rbrakk>\<^sub>S = write_regS PMCFGR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMAUTHSTATUS[liftState_simp]:
  "\<lbrakk>read_reg PMAUTHSTATUS_ref\<rbrakk>\<^sub>S = read_regS PMAUTHSTATUS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMAUTHSTATUS[liftState_simp]:
  "\<lbrakk>write_reg PMAUTHSTATUS_ref v\<rbrakk>\<^sub>S = write_regS PMAUTHSTATUS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PAR_S[liftState_simp]:
  "\<lbrakk>read_reg PAR_S_ref\<rbrakk>\<^sub>S = read_regS PAR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PAR_S[liftState_simp]:
  "\<lbrakk>write_reg PAR_S_ref v\<rbrakk>\<^sub>S = write_regS PAR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PAR_NS[liftState_simp]:
  "\<lbrakk>read_reg PAR_NS_ref\<rbrakk>\<^sub>S = read_regS PAR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PAR_NS[liftState_simp]:
  "\<lbrakk>write_reg PAR_NS_ref v\<rbrakk>\<^sub>S = write_regS PAR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR2[liftState_simp]:
  "\<lbrakk>read_reg MVFR2_ref\<rbrakk>\<^sub>S = read_regS MVFR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR2[liftState_simp]:
  "\<lbrakk>write_reg MVFR2_ref v\<rbrakk>\<^sub>S = write_regS MVFR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVFR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg MVFR2_EL1_ref\<rbrakk>\<^sub>S = read_regS MVFR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVFR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg MVFR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS MVFR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPIDR[liftState_simp]:
  "\<lbrakk>read_reg MPIDR_ref\<rbrakk>\<^sub>S = read_regS MPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPIDR[liftState_simp]:
  "\<lbrakk>write_reg MPIDR_ref v\<rbrakk>\<^sub>S = write_regS MPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MPIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS MPIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MPIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MPIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_JOSCR[liftState_simp]:
  "\<lbrakk>read_reg JOSCR_ref\<rbrakk>\<^sub>S = read_regS JOSCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_JOSCR[liftState_simp]:
  "\<lbrakk>write_reg JOSCR_ref v\<rbrakk>\<^sub>S = write_regS JOSCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_JMCR[liftState_simp]:
  "\<lbrakk>read_reg JMCR_ref\<rbrakk>\<^sub>S = read_regS JMCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_JMCR[liftState_simp]:
  "\<lbrakk>write_reg JMCR_ref v\<rbrakk>\<^sub>S = write_regS JMCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_JIDR[liftState_simp]:
  "\<lbrakk>read_reg JIDR_ref\<rbrakk>\<^sub>S = read_regS JIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_JIDR[liftState_simp]:
  "\<lbrakk>write_reg JIDR_ref v\<rbrakk>\<^sub>S = write_regS JIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ISR[liftState_simp]:
  "\<lbrakk>read_reg ISR_ref\<rbrakk>\<^sub>S = read_regS ISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ISR[liftState_simp]:
  "\<lbrakk>write_reg ISR_ref v\<rbrakk>\<^sub>S = write_regS ISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ISR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ISR_EL1_ref\<rbrakk>\<^sub>S = read_regS ISR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ISR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ISR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ISR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR2[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR2_ref\<rbrakk>\<^sub>S = read_regS ID_PFR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR2[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR2_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_PFR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_PFR2_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_PFR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_PFR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_PFR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_PFR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR5[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR5_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR5_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR5[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR5_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR5_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_MMFR5_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_MMFR5_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_MMFR5_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_MMFR5_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_MMFR5_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_MMFR5_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR5[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR5_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR5_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR5[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR5_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR5_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR5_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR5_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR5_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR5_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR5_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR5_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR0[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR0_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR0[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR0_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_ISAR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_ISAR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_ISAR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_ISAR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_ISAR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_ISAR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_DFR1[liftState_simp]:
  "\<lbrakk>read_reg ID_DFR1_ref\<rbrakk>\<^sub>S = read_regS ID_DFR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_DFR1[liftState_simp]:
  "\<lbrakk>write_reg ID_DFR1_ref v\<rbrakk>\<^sub>S = write_regS ID_DFR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_DFR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_DFR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_DFR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_DFR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_DFR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_DFR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AFR0[liftState_simp]:
  "\<lbrakk>read_reg ID_AFR0_ref\<rbrakk>\<^sub>S = read_regS ID_AFR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AFR0[liftState_simp]:
  "\<lbrakk>write_reg ID_AFR0_ref v\<rbrakk>\<^sub>S = write_regS ID_AFR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ID_AFR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ID_AFR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ID_AFR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ID_AFR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ID_AFR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ID_AFR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_RPR[liftState_simp]:
  "\<lbrakk>read_reg ICV_RPR_ref\<rbrakk>\<^sub>S = read_regS ICV_RPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_RPR[liftState_simp]:
  "\<lbrakk>write_reg ICV_RPR_ref v\<rbrakk>\<^sub>S = write_regS ICV_RPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_RPR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_RPR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_RPR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_RPR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_RPR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_RPR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_PMR[liftState_simp]:
  "\<lbrakk>read_reg ICV_PMR_ref\<rbrakk>\<^sub>S = read_regS ICV_PMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_PMR[liftState_simp]:
  "\<lbrakk>write_reg ICV_PMR_ref v\<rbrakk>\<^sub>S = write_regS ICV_PMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_PMR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_PMR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_PMR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_PMR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_PMR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_PMR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IGRPEN1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IGRPEN1_ref\<rbrakk>\<^sub>S = read_regS ICV_IGRPEN1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IGRPEN1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IGRPEN1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IGRPEN1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IGRPEN1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IGRPEN1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_IGRPEN1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IGRPEN1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IGRPEN1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IGRPEN1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IGRPEN0[liftState_simp]:
  "\<lbrakk>read_reg ICV_IGRPEN0_ref\<rbrakk>\<^sub>S = read_regS ICV_IGRPEN0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IGRPEN0[liftState_simp]:
  "\<lbrakk>write_reg ICV_IGRPEN0_ref v\<rbrakk>\<^sub>S = write_regS ICV_IGRPEN0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IGRPEN0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IGRPEN0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_IGRPEN0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IGRPEN0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IGRPEN0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IGRPEN0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IAR1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IAR1_ref\<rbrakk>\<^sub>S = read_regS ICV_IAR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IAR1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IAR1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IAR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_IAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IAR0[liftState_simp]:
  "\<lbrakk>read_reg ICV_IAR0_ref\<rbrakk>\<^sub>S = read_regS ICV_IAR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IAR0[liftState_simp]:
  "\<lbrakk>write_reg ICV_IAR0_ref v\<rbrakk>\<^sub>S = write_regS ICV_IAR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_IAR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_IAR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_IAR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_IAR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_IAR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_IAR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_HPPIR1[liftState_simp]:
  "\<lbrakk>read_reg ICV_HPPIR1_ref\<rbrakk>\<^sub>S = read_regS ICV_HPPIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_HPPIR1[liftState_simp]:
  "\<lbrakk>write_reg ICV_HPPIR1_ref v\<rbrakk>\<^sub>S = write_regS ICV_HPPIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_HPPIR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_HPPIR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_HPPIR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_HPPIR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_HPPIR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_HPPIR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_HPPIR0[liftState_simp]:
  "\<lbrakk>read_reg ICV_HPPIR0_ref\<rbrakk>\<^sub>S = read_regS ICV_HPPIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_HPPIR0[liftState_simp]:
  "\<lbrakk>write_reg ICV_HPPIR0_ref v\<rbrakk>\<^sub>S = write_regS ICV_HPPIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_HPPIR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_HPPIR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_HPPIR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_HPPIR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_HPPIR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_HPPIR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_EOIR1[liftState_simp]:
  "\<lbrakk>read_reg ICV_EOIR1_ref\<rbrakk>\<^sub>S = read_regS ICV_EOIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_EOIR1[liftState_simp]:
  "\<lbrakk>write_reg ICV_EOIR1_ref v\<rbrakk>\<^sub>S = write_regS ICV_EOIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_EOIR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_EOIR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_EOIR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_EOIR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_EOIR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_EOIR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_EOIR0[liftState_simp]:
  "\<lbrakk>read_reg ICV_EOIR0_ref\<rbrakk>\<^sub>S = read_regS ICV_EOIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_EOIR0[liftState_simp]:
  "\<lbrakk>write_reg ICV_EOIR0_ref v\<rbrakk>\<^sub>S = write_regS ICV_EOIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_EOIR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_EOIR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_EOIR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_EOIR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_EOIR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_EOIR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_DIR[liftState_simp]:
  "\<lbrakk>read_reg ICV_DIR_ref\<rbrakk>\<^sub>S = read_regS ICV_DIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_DIR[liftState_simp]:
  "\<lbrakk>write_reg ICV_DIR_ref v\<rbrakk>\<^sub>S = write_regS ICV_DIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_DIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_DIR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_DIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_DIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_DIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_DIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_CTLR[liftState_simp]:
  "\<lbrakk>read_reg ICV_CTLR_ref\<rbrakk>\<^sub>S = read_regS ICV_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_CTLR[liftState_simp]:
  "\<lbrakk>write_reg ICV_CTLR_ref v\<rbrakk>\<^sub>S = write_regS ICV_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_CTLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_CTLR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_CTLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_CTLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_CTLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_CTLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_BPR1[liftState_simp]:
  "\<lbrakk>read_reg ICV_BPR1_ref\<rbrakk>\<^sub>S = read_regS ICV_BPR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_BPR1[liftState_simp]:
  "\<lbrakk>write_reg ICV_BPR1_ref v\<rbrakk>\<^sub>S = write_regS ICV_BPR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_BPR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_BPR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_BPR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_BPR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_BPR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_BPR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_BPR0[liftState_simp]:
  "\<lbrakk>read_reg ICV_BPR0_ref\<rbrakk>\<^sub>S = read_regS ICV_BPR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_BPR0[liftState_simp]:
  "\<lbrakk>write_reg ICV_BPR0_ref v\<rbrakk>\<^sub>S = write_regS ICV_BPR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICV_BPR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICV_BPR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICV_BPR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICV_BPR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICV_BPR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICV_BPR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_VTR[liftState_simp]:
  "\<lbrakk>read_reg ICH_VTR_ref\<rbrakk>\<^sub>S = read_regS ICH_VTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_VTR[liftState_simp]:
  "\<lbrakk>write_reg ICH_VTR_ref v\<rbrakk>\<^sub>S = write_regS ICH_VTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_VTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_VTR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_VTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_VTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_VTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_VTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_VMCR[liftState_simp]:
  "\<lbrakk>read_reg ICH_VMCR_ref\<rbrakk>\<^sub>S = read_regS ICH_VMCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_VMCR[liftState_simp]:
  "\<lbrakk>write_reg ICH_VMCR_ref v\<rbrakk>\<^sub>S = write_regS ICH_VMCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_VMCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_VMCR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_VMCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_VMCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_VMCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_VMCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_MISR[liftState_simp]:
  "\<lbrakk>read_reg ICH_MISR_ref\<rbrakk>\<^sub>S = read_regS ICH_MISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_MISR[liftState_simp]:
  "\<lbrakk>write_reg ICH_MISR_ref v\<rbrakk>\<^sub>S = write_regS ICH_MISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_MISR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_MISR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_MISR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_MISR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_MISR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_MISR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_HCR[liftState_simp]:
  "\<lbrakk>read_reg ICH_HCR_ref\<rbrakk>\<^sub>S = read_regS ICH_HCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_HCR[liftState_simp]:
  "\<lbrakk>write_reg ICH_HCR_ref v\<rbrakk>\<^sub>S = write_regS ICH_HCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_HCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_HCR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_HCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_HCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_HCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_HCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_ELRSR[liftState_simp]:
  "\<lbrakk>read_reg ICH_ELRSR_ref\<rbrakk>\<^sub>S = read_regS ICH_ELRSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_ELRSR[liftState_simp]:
  "\<lbrakk>write_reg ICH_ELRSR_ref v\<rbrakk>\<^sub>S = write_regS ICH_ELRSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_ELRSR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_ELRSR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_ELRSR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_ELRSR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_ELRSR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_ELRSR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_EISR[liftState_simp]:
  "\<lbrakk>read_reg ICH_EISR_ref\<rbrakk>\<^sub>S = read_regS ICH_EISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_EISR[liftState_simp]:
  "\<lbrakk>write_reg ICH_EISR_ref v\<rbrakk>\<^sub>S = write_regS ICH_EISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICH_EISR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICH_EISR_EL2_ref\<rbrakk>\<^sub>S = read_regS ICH_EISR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICH_EISR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICH_EISR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICH_EISR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_S_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_EL1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_EL1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_EL1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_EL1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_EL1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_EL1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_EL1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_EL1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_EL1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_EL1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_EL1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_EL1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SGI1R[liftState_simp]:
  "\<lbrakk>read_reg ICC_SGI1R_ref\<rbrakk>\<^sub>S = read_regS ICC_SGI1R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SGI1R[liftState_simp]:
  "\<lbrakk>write_reg ICC_SGI1R_ref v\<rbrakk>\<^sub>S = write_regS ICC_SGI1R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SGI1R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_SGI1R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_SGI1R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SGI1R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_SGI1R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_SGI1R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SGI0R[liftState_simp]:
  "\<lbrakk>read_reg ICC_SGI0R_ref\<rbrakk>\<^sub>S = read_regS ICC_SGI0R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SGI0R[liftState_simp]:
  "\<lbrakk>write_reg ICC_SGI0R_ref v\<rbrakk>\<^sub>S = write_regS ICC_SGI0R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SGI0R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_SGI0R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_SGI0R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SGI0R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_SGI0R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_SGI0R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_RPR[liftState_simp]:
  "\<lbrakk>read_reg ICC_RPR_ref\<rbrakk>\<^sub>S = read_regS ICC_RPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_RPR[liftState_simp]:
  "\<lbrakk>write_reg ICC_RPR_ref v\<rbrakk>\<^sub>S = write_regS ICC_RPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_RPR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_RPR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_RPR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_RPR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_RPR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_RPR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_PMR[liftState_simp]:
  "\<lbrakk>read_reg ICC_PMR_ref\<rbrakk>\<^sub>S = read_regS ICC_PMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_PMR[liftState_simp]:
  "\<lbrakk>write_reg ICC_PMR_ref v\<rbrakk>\<^sub>S = write_regS ICC_PMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_MSRE[liftState_simp]:
  "\<lbrakk>read_reg ICC_MSRE_ref\<rbrakk>\<^sub>S = read_regS ICC_MSRE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_MSRE[liftState_simp]:
  "\<lbrakk>write_reg ICC_MSRE_ref v\<rbrakk>\<^sub>S = write_regS ICC_MSRE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_MGRPEN1[liftState_simp]:
  "\<lbrakk>read_reg ICC_MGRPEN1_ref\<rbrakk>\<^sub>S = read_regS ICC_MGRPEN1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_MGRPEN1[liftState_simp]:
  "\<lbrakk>write_reg ICC_MGRPEN1_ref v\<rbrakk>\<^sub>S = write_regS ICC_MGRPEN1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_MCTLR[liftState_simp]:
  "\<lbrakk>read_reg ICC_MCTLR_ref\<rbrakk>\<^sub>S = read_regS ICC_MCTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_MCTLR[liftState_simp]:
  "\<lbrakk>write_reg ICC_MCTLR_ref v\<rbrakk>\<^sub>S = write_regS ICC_MCTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN1_EL1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN1_EL1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN1_EL1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN1_EL1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN1_EL1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN1_EL1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN1_EL1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN1_EL1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN1_EL1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN1_EL1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN1_EL1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN1_EL1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN0[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN0_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN0[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN0_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IGRPEN0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_IGRPEN0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_IGRPEN0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IGRPEN0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_IGRPEN0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_IGRPEN0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IAR1[liftState_simp]:
  "\<lbrakk>read_reg ICC_IAR1_ref\<rbrakk>\<^sub>S = read_regS ICC_IAR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IAR1[liftState_simp]:
  "\<lbrakk>write_reg ICC_IAR1_ref v\<rbrakk>\<^sub>S = write_regS ICC_IAR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IAR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_IAR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_IAR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IAR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_IAR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_IAR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IAR0[liftState_simp]:
  "\<lbrakk>read_reg ICC_IAR0_ref\<rbrakk>\<^sub>S = read_regS ICC_IAR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IAR0[liftState_simp]:
  "\<lbrakk>write_reg ICC_IAR0_ref v\<rbrakk>\<^sub>S = write_regS ICC_IAR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_IAR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_IAR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_IAR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_IAR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_IAR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_IAR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_HSRE[liftState_simp]:
  "\<lbrakk>read_reg ICC_HSRE_ref\<rbrakk>\<^sub>S = read_regS ICC_HSRE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_HSRE[liftState_simp]:
  "\<lbrakk>write_reg ICC_HSRE_ref v\<rbrakk>\<^sub>S = write_regS ICC_HSRE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_SRE_EL2[liftState_simp]:
  "\<lbrakk>read_reg ICC_SRE_EL2_ref\<rbrakk>\<^sub>S = read_regS ICC_SRE_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_SRE_EL2[liftState_simp]:
  "\<lbrakk>write_reg ICC_SRE_EL2_ref v\<rbrakk>\<^sub>S = write_regS ICC_SRE_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_HPPIR1[liftState_simp]:
  "\<lbrakk>read_reg ICC_HPPIR1_ref\<rbrakk>\<^sub>S = read_regS ICC_HPPIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_HPPIR1[liftState_simp]:
  "\<lbrakk>write_reg ICC_HPPIR1_ref v\<rbrakk>\<^sub>S = write_regS ICC_HPPIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_HPPIR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_HPPIR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_HPPIR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_HPPIR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_HPPIR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_HPPIR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_HPPIR0[liftState_simp]:
  "\<lbrakk>read_reg ICC_HPPIR0_ref\<rbrakk>\<^sub>S = read_regS ICC_HPPIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_HPPIR0[liftState_simp]:
  "\<lbrakk>write_reg ICC_HPPIR0_ref v\<rbrakk>\<^sub>S = write_regS ICC_HPPIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_HPPIR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_HPPIR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_HPPIR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_HPPIR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_HPPIR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_HPPIR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_EOIR1[liftState_simp]:
  "\<lbrakk>read_reg ICC_EOIR1_ref\<rbrakk>\<^sub>S = read_regS ICC_EOIR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_EOIR1[liftState_simp]:
  "\<lbrakk>write_reg ICC_EOIR1_ref v\<rbrakk>\<^sub>S = write_regS ICC_EOIR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_EOIR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_EOIR1_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_EOIR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_EOIR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_EOIR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_EOIR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_EOIR0[liftState_simp]:
  "\<lbrakk>read_reg ICC_EOIR0_ref\<rbrakk>\<^sub>S = read_regS ICC_EOIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_EOIR0[liftState_simp]:
  "\<lbrakk>write_reg ICC_EOIR0_ref v\<rbrakk>\<^sub>S = write_regS ICC_EOIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_EOIR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_EOIR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_EOIR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_EOIR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_EOIR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_EOIR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_DIR[liftState_simp]:
  "\<lbrakk>read_reg ICC_DIR_ref\<rbrakk>\<^sub>S = read_regS ICC_DIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_DIR[liftState_simp]:
  "\<lbrakk>write_reg ICC_DIR_ref v\<rbrakk>\<^sub>S = write_regS ICC_DIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_DIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_DIR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_DIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_DIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_DIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_DIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_CTLR_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_CTLR_S_ref\<rbrakk>\<^sub>S = read_regS ICC_CTLR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_CTLR_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_CTLR_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_CTLR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_CTLR_EL1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_CTLR_EL1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_CTLR_EL1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_CTLR_EL1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_CTLR_EL1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_CTLR_EL1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_CTLR_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_CTLR_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_CTLR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_CTLR_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_CTLR_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_CTLR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_CTLR_EL1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_CTLR_EL1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_CTLR_EL1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_CTLR_EL1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_CTLR_EL1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_CTLR_EL1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR1_EL1_S[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR1_EL1_S_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR1_EL1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR1_EL1_S[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR1_EL1_S_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR1_EL1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR1_EL1_NS[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR1_EL1_NS_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR1_EL1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR1_EL1_NS[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR1_EL1_NS_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR1_EL1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR0[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR0_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR0[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR0_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_BPR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_BPR0_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_BPR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_BPR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_BPR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_BPR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_ASGI1R[liftState_simp]:
  "\<lbrakk>read_reg ICC_ASGI1R_ref\<rbrakk>\<^sub>S = read_regS ICC_ASGI1R_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_ASGI1R[liftState_simp]:
  "\<lbrakk>write_reg ICC_ASGI1R_ref v\<rbrakk>\<^sub>S = write_regS ICC_ASGI1R_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_ASGI1R_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_ASGI1R_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_ASGI1R_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_ASGI1R_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_ASGI1R_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_ASGI1R_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HTRFCR[liftState_simp]:
  "\<lbrakk>read_reg HTRFCR_ref\<rbrakk>\<^sub>S = read_regS HTRFCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HTRFCR[liftState_simp]:
  "\<lbrakk>write_reg HTRFCR_ref v\<rbrakk>\<^sub>S = write_regS HTRFCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TRFCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg TRFCR_EL2_ref\<rbrakk>\<^sub>S = read_regS TRFCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TRFCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg TRFCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS TRFCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HTCR[liftState_simp]:
  "\<lbrakk>read_reg HTCR_ref\<rbrakk>\<^sub>S = read_regS HTCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HTCR[liftState_simp]:
  "\<lbrakk>write_reg HTCR_ref v\<rbrakk>\<^sub>S = write_regS HTCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HSTR[liftState_simp]:
  "\<lbrakk>read_reg HSTR_ref\<rbrakk>\<^sub>S = read_regS HSTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HSTR[liftState_simp]:
  "\<lbrakk>write_reg HSTR_ref v\<rbrakk>\<^sub>S = write_regS HSTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HSTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HSTR_EL2_ref\<rbrakk>\<^sub>S = read_regS HSTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HSTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HSTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HSTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HRMR[liftState_simp]:
  "\<lbrakk>read_reg HRMR_ref\<rbrakk>\<^sub>S = read_regS HRMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HRMR[liftState_simp]:
  "\<lbrakk>write_reg HRMR_ref v\<rbrakk>\<^sub>S = write_regS HRMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RMR_EL2[liftState_simp]:
  "\<lbrakk>read_reg RMR_EL2_ref\<rbrakk>\<^sub>S = read_regS RMR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RMR_EL2[liftState_simp]:
  "\<lbrakk>write_reg RMR_EL2_ref v\<rbrakk>\<^sub>S = write_regS RMR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_TYPER[liftState_simp]:
  "\<lbrakk>read_reg GITS_TYPER_ref\<rbrakk>\<^sub>S = read_regS GITS_TYPER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_TYPER[liftState_simp]:
  "\<lbrakk>write_reg GITS_TYPER_ref v\<rbrakk>\<^sub>S = write_regS GITS_TYPER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_STATUSR[liftState_simp]:
  "\<lbrakk>read_reg GITS_STATUSR_ref\<rbrakk>\<^sub>S = read_regS GITS_STATUSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_STATUSR[liftState_simp]:
  "\<lbrakk>write_reg GITS_STATUSR_ref v\<rbrakk>\<^sub>S = write_regS GITS_STATUSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_SGIR[liftState_simp]:
  "\<lbrakk>read_reg GITS_SGIR_ref\<rbrakk>\<^sub>S = read_regS GITS_SGIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_SGIR[liftState_simp]:
  "\<lbrakk>write_reg GITS_SGIR_ref v\<rbrakk>\<^sub>S = write_regS GITS_SGIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_PARTIDR[liftState_simp]:
  "\<lbrakk>read_reg GITS_PARTIDR_ref\<rbrakk>\<^sub>S = read_regS GITS_PARTIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_PARTIDR[liftState_simp]:
  "\<lbrakk>write_reg GITS_PARTIDR_ref v\<rbrakk>\<^sub>S = write_regS GITS_PARTIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_MPIDR[liftState_simp]:
  "\<lbrakk>read_reg GITS_MPIDR_ref\<rbrakk>\<^sub>S = read_regS GITS_MPIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_MPIDR[liftState_simp]:
  "\<lbrakk>write_reg GITS_MPIDR_ref v\<rbrakk>\<^sub>S = write_regS GITS_MPIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_MPAMIDR[liftState_simp]:
  "\<lbrakk>read_reg GITS_MPAMIDR_ref\<rbrakk>\<^sub>S = read_regS GITS_MPAMIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_MPAMIDR[liftState_simp]:
  "\<lbrakk>write_reg GITS_MPAMIDR_ref v\<rbrakk>\<^sub>S = write_regS GITS_MPAMIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_IIDR[liftState_simp]:
  "\<lbrakk>read_reg GITS_IIDR_ref\<rbrakk>\<^sub>S = read_regS GITS_IIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_IIDR[liftState_simp]:
  "\<lbrakk>write_reg GITS_IIDR_ref v\<rbrakk>\<^sub>S = write_regS GITS_IIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_CWRITER[liftState_simp]:
  "\<lbrakk>read_reg GITS_CWRITER_ref\<rbrakk>\<^sub>S = read_regS GITS_CWRITER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_CWRITER[liftState_simp]:
  "\<lbrakk>write_reg GITS_CWRITER_ref v\<rbrakk>\<^sub>S = write_regS GITS_CWRITER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_CTLR[liftState_simp]:
  "\<lbrakk>read_reg GITS_CTLR_ref\<rbrakk>\<^sub>S = read_regS GITS_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_CTLR[liftState_simp]:
  "\<lbrakk>write_reg GITS_CTLR_ref v\<rbrakk>\<^sub>S = write_regS GITS_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_CREADR[liftState_simp]:
  "\<lbrakk>read_reg GITS_CREADR_ref\<rbrakk>\<^sub>S = read_regS GITS_CREADR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_CREADR[liftState_simp]:
  "\<lbrakk>write_reg GITS_CREADR_ref v\<rbrakk>\<^sub>S = write_regS GITS_CREADR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GITS_CBASER[liftState_simp]:
  "\<lbrakk>read_reg GITS_CBASER_ref\<rbrakk>\<^sub>S = read_regS GITS_CBASER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GITS_CBASER[liftState_simp]:
  "\<lbrakk>write_reg GITS_CBASER_ref v\<rbrakk>\<^sub>S = write_regS GITS_CBASER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_STATUSR[liftState_simp]:
  "\<lbrakk>read_reg GICV_STATUSR_ref\<rbrakk>\<^sub>S = read_regS GICV_STATUSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_STATUSR[liftState_simp]:
  "\<lbrakk>write_reg GICV_STATUSR_ref v\<rbrakk>\<^sub>S = write_regS GICV_STATUSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_RPR[liftState_simp]:
  "\<lbrakk>read_reg GICV_RPR_ref\<rbrakk>\<^sub>S = read_regS GICV_RPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_RPR[liftState_simp]:
  "\<lbrakk>write_reg GICV_RPR_ref v\<rbrakk>\<^sub>S = write_regS GICV_RPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_PMR[liftState_simp]:
  "\<lbrakk>read_reg GICV_PMR_ref\<rbrakk>\<^sub>S = read_regS GICV_PMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_PMR[liftState_simp]:
  "\<lbrakk>write_reg GICV_PMR_ref v\<rbrakk>\<^sub>S = write_regS GICV_PMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_IAR[liftState_simp]:
  "\<lbrakk>read_reg GICV_IAR_ref\<rbrakk>\<^sub>S = read_regS GICV_IAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_IAR[liftState_simp]:
  "\<lbrakk>write_reg GICV_IAR_ref v\<rbrakk>\<^sub>S = write_regS GICV_IAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_HPPIR[liftState_simp]:
  "\<lbrakk>read_reg GICV_HPPIR_ref\<rbrakk>\<^sub>S = read_regS GICV_HPPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_HPPIR[liftState_simp]:
  "\<lbrakk>write_reg GICV_HPPIR_ref v\<rbrakk>\<^sub>S = write_regS GICV_HPPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_EOIR[liftState_simp]:
  "\<lbrakk>read_reg GICV_EOIR_ref\<rbrakk>\<^sub>S = read_regS GICV_EOIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_EOIR[liftState_simp]:
  "\<lbrakk>write_reg GICV_EOIR_ref v\<rbrakk>\<^sub>S = write_regS GICV_EOIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_DIR[liftState_simp]:
  "\<lbrakk>read_reg GICV_DIR_ref\<rbrakk>\<^sub>S = read_regS GICV_DIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_DIR[liftState_simp]:
  "\<lbrakk>write_reg GICV_DIR_ref v\<rbrakk>\<^sub>S = write_regS GICV_DIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_CTLR[liftState_simp]:
  "\<lbrakk>read_reg GICV_CTLR_ref\<rbrakk>\<^sub>S = read_regS GICV_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_CTLR[liftState_simp]:
  "\<lbrakk>write_reg GICV_CTLR_ref v\<rbrakk>\<^sub>S = write_regS GICV_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_BPR[liftState_simp]:
  "\<lbrakk>read_reg GICV_BPR_ref\<rbrakk>\<^sub>S = read_regS GICV_BPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_BPR[liftState_simp]:
  "\<lbrakk>write_reg GICV_BPR_ref v\<rbrakk>\<^sub>S = write_regS GICV_BPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_AIAR[liftState_simp]:
  "\<lbrakk>read_reg GICV_AIAR_ref\<rbrakk>\<^sub>S = read_regS GICV_AIAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_AIAR[liftState_simp]:
  "\<lbrakk>write_reg GICV_AIAR_ref v\<rbrakk>\<^sub>S = write_regS GICV_AIAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_AHPPIR[liftState_simp]:
  "\<lbrakk>read_reg GICV_AHPPIR_ref\<rbrakk>\<^sub>S = read_regS GICV_AHPPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_AHPPIR[liftState_simp]:
  "\<lbrakk>write_reg GICV_AHPPIR_ref v\<rbrakk>\<^sub>S = write_regS GICV_AHPPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_AEOIR[liftState_simp]:
  "\<lbrakk>read_reg GICV_AEOIR_ref\<rbrakk>\<^sub>S = read_regS GICV_AEOIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_AEOIR[liftState_simp]:
  "\<lbrakk>write_reg GICV_AEOIR_ref v\<rbrakk>\<^sub>S = write_regS GICV_AEOIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICV_ABPR[liftState_simp]:
  "\<lbrakk>read_reg GICV_ABPR_ref\<rbrakk>\<^sub>S = read_regS GICV_ABPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICV_ABPR[liftState_simp]:
  "\<lbrakk>write_reg GICV_ABPR_ref v\<rbrakk>\<^sub>S = write_regS GICV_ABPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_WAKER[liftState_simp]:
  "\<lbrakk>read_reg GICR_WAKER_ref\<rbrakk>\<^sub>S = read_regS GICR_WAKER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_WAKER[liftState_simp]:
  "\<lbrakk>write_reg GICR_WAKER_ref v\<rbrakk>\<^sub>S = write_regS GICR_WAKER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_VSGIR[liftState_simp]:
  "\<lbrakk>read_reg GICR_VSGIR_ref\<rbrakk>\<^sub>S = read_regS GICR_VSGIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_VSGIR[liftState_simp]:
  "\<lbrakk>write_reg GICR_VSGIR_ref v\<rbrakk>\<^sub>S = write_regS GICR_VSGIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_VSGIPENDR[liftState_simp]:
  "\<lbrakk>read_reg GICR_VSGIPENDR_ref\<rbrakk>\<^sub>S = read_regS GICR_VSGIPENDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_VSGIPENDR[liftState_simp]:
  "\<lbrakk>write_reg GICR_VSGIPENDR_ref v\<rbrakk>\<^sub>S = write_regS GICR_VSGIPENDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_VPROPBASER[liftState_simp]:
  "\<lbrakk>read_reg GICR_VPROPBASER_ref\<rbrakk>\<^sub>S = read_regS GICR_VPROPBASER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_VPROPBASER[liftState_simp]:
  "\<lbrakk>write_reg GICR_VPROPBASER_ref v\<rbrakk>\<^sub>S = write_regS GICR_VPROPBASER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_VPENDBASER[liftState_simp]:
  "\<lbrakk>read_reg GICR_VPENDBASER_ref\<rbrakk>\<^sub>S = read_regS GICR_VPENDBASER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_VPENDBASER[liftState_simp]:
  "\<lbrakk>write_reg GICR_VPENDBASER_ref v\<rbrakk>\<^sub>S = write_regS GICR_VPENDBASER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_SYNCR[liftState_simp]:
  "\<lbrakk>read_reg GICR_SYNCR_ref\<rbrakk>\<^sub>S = read_regS GICR_SYNCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_SYNCR[liftState_simp]:
  "\<lbrakk>write_reg GICR_SYNCR_ref v\<rbrakk>\<^sub>S = write_regS GICR_SYNCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_STATUSR[liftState_simp]:
  "\<lbrakk>read_reg GICR_STATUSR_ref\<rbrakk>\<^sub>S = read_regS GICR_STATUSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_STATUSR[liftState_simp]:
  "\<lbrakk>write_reg GICR_STATUSR_ref v\<rbrakk>\<^sub>S = write_regS GICR_STATUSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_SETLPIR[liftState_simp]:
  "\<lbrakk>read_reg GICR_SETLPIR_ref\<rbrakk>\<^sub>S = read_regS GICR_SETLPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_SETLPIR[liftState_simp]:
  "\<lbrakk>write_reg GICR_SETLPIR_ref v\<rbrakk>\<^sub>S = write_regS GICR_SETLPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_PROPBASER[liftState_simp]:
  "\<lbrakk>read_reg GICR_PROPBASER_ref\<rbrakk>\<^sub>S = read_regS GICR_PROPBASER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_PROPBASER[liftState_simp]:
  "\<lbrakk>write_reg GICR_PROPBASER_ref v\<rbrakk>\<^sub>S = write_regS GICR_PROPBASER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_PENDBASER[liftState_simp]:
  "\<lbrakk>read_reg GICR_PENDBASER_ref\<rbrakk>\<^sub>S = read_regS GICR_PENDBASER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_PENDBASER[liftState_simp]:
  "\<lbrakk>write_reg GICR_PENDBASER_ref v\<rbrakk>\<^sub>S = write_regS GICR_PENDBASER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_PARTIDR[liftState_simp]:
  "\<lbrakk>read_reg GICR_PARTIDR_ref\<rbrakk>\<^sub>S = read_regS GICR_PARTIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_PARTIDR[liftState_simp]:
  "\<lbrakk>write_reg GICR_PARTIDR_ref v\<rbrakk>\<^sub>S = write_regS GICR_PARTIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_MPAMIDR[liftState_simp]:
  "\<lbrakk>read_reg GICR_MPAMIDR_ref\<rbrakk>\<^sub>S = read_regS GICR_MPAMIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_MPAMIDR[liftState_simp]:
  "\<lbrakk>write_reg GICR_MPAMIDR_ref v\<rbrakk>\<^sub>S = write_regS GICR_MPAMIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_ISENABLER0[liftState_simp]:
  "\<lbrakk>read_reg GICR_ISENABLER0_ref\<rbrakk>\<^sub>S = read_regS GICR_ISENABLER0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_ISENABLER0[liftState_simp]:
  "\<lbrakk>write_reg GICR_ISENABLER0_ref v\<rbrakk>\<^sub>S = write_regS GICR_ISENABLER0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_INVLPIR[liftState_simp]:
  "\<lbrakk>read_reg GICR_INVLPIR_ref\<rbrakk>\<^sub>S = read_regS GICR_INVLPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_INVLPIR[liftState_simp]:
  "\<lbrakk>write_reg GICR_INVLPIR_ref v\<rbrakk>\<^sub>S = write_regS GICR_INVLPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_INVALLR[liftState_simp]:
  "\<lbrakk>read_reg GICR_INVALLR_ref\<rbrakk>\<^sub>S = read_regS GICR_INVALLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_INVALLR[liftState_simp]:
  "\<lbrakk>write_reg GICR_INVALLR_ref v\<rbrakk>\<^sub>S = write_regS GICR_INVALLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_INMIR0[liftState_simp]:
  "\<lbrakk>read_reg GICR_INMIR0_ref\<rbrakk>\<^sub>S = read_regS GICR_INMIR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_INMIR0[liftState_simp]:
  "\<lbrakk>write_reg GICR_INMIR0_ref v\<rbrakk>\<^sub>S = write_regS GICR_INMIR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_IIDR[liftState_simp]:
  "\<lbrakk>read_reg GICR_IIDR_ref\<rbrakk>\<^sub>S = read_regS GICR_IIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_IIDR[liftState_simp]:
  "\<lbrakk>write_reg GICR_IIDR_ref v\<rbrakk>\<^sub>S = write_regS GICR_IIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_CTLR[liftState_simp]:
  "\<lbrakk>read_reg GICR_CTLR_ref\<rbrakk>\<^sub>S = read_regS GICR_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_CTLR[liftState_simp]:
  "\<lbrakk>write_reg GICR_CTLR_ref v\<rbrakk>\<^sub>S = write_regS GICR_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICR_CLRLPIR[liftState_simp]:
  "\<lbrakk>read_reg GICR_CLRLPIR_ref\<rbrakk>\<^sub>S = read_regS GICR_CLRLPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICR_CLRLPIR[liftState_simp]:
  "\<lbrakk>write_reg GICR_CLRLPIR_ref v\<rbrakk>\<^sub>S = write_regS GICR_CLRLPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_TYPER[liftState_simp]:
  "\<lbrakk>read_reg GICM_TYPER_ref\<rbrakk>\<^sub>S = read_regS GICM_TYPER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_TYPER[liftState_simp]:
  "\<lbrakk>write_reg GICM_TYPER_ref v\<rbrakk>\<^sub>S = write_regS GICM_TYPER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_SETSPI_SR[liftState_simp]:
  "\<lbrakk>read_reg GICM_SETSPI_SR_ref\<rbrakk>\<^sub>S = read_regS GICM_SETSPI_SR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_SETSPI_SR[liftState_simp]:
  "\<lbrakk>write_reg GICM_SETSPI_SR_ref v\<rbrakk>\<^sub>S = write_regS GICM_SETSPI_SR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_SETSPI_NSR[liftState_simp]:
  "\<lbrakk>read_reg GICM_SETSPI_NSR_ref\<rbrakk>\<^sub>S = read_regS GICM_SETSPI_NSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_SETSPI_NSR[liftState_simp]:
  "\<lbrakk>write_reg GICM_SETSPI_NSR_ref v\<rbrakk>\<^sub>S = write_regS GICM_SETSPI_NSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_IIDR[liftState_simp]:
  "\<lbrakk>read_reg GICM_IIDR_ref\<rbrakk>\<^sub>S = read_regS GICM_IIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_IIDR[liftState_simp]:
  "\<lbrakk>write_reg GICM_IIDR_ref v\<rbrakk>\<^sub>S = write_regS GICM_IIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_CLRSPI_SR[liftState_simp]:
  "\<lbrakk>read_reg GICM_CLRSPI_SR_ref\<rbrakk>\<^sub>S = read_regS GICM_CLRSPI_SR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_CLRSPI_SR[liftState_simp]:
  "\<lbrakk>write_reg GICM_CLRSPI_SR_ref v\<rbrakk>\<^sub>S = write_regS GICM_CLRSPI_SR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICM_CLRSPI_NSR[liftState_simp]:
  "\<lbrakk>read_reg GICM_CLRSPI_NSR_ref\<rbrakk>\<^sub>S = read_regS GICM_CLRSPI_NSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICM_CLRSPI_NSR[liftState_simp]:
  "\<lbrakk>write_reg GICM_CLRSPI_NSR_ref v\<rbrakk>\<^sub>S = write_regS GICM_CLRSPI_NSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_VTR[liftState_simp]:
  "\<lbrakk>read_reg GICH_VTR_ref\<rbrakk>\<^sub>S = read_regS GICH_VTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_VTR[liftState_simp]:
  "\<lbrakk>write_reg GICH_VTR_ref v\<rbrakk>\<^sub>S = write_regS GICH_VTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_VMCR[liftState_simp]:
  "\<lbrakk>read_reg GICH_VMCR_ref\<rbrakk>\<^sub>S = read_regS GICH_VMCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_VMCR[liftState_simp]:
  "\<lbrakk>write_reg GICH_VMCR_ref v\<rbrakk>\<^sub>S = write_regS GICH_VMCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_MISR[liftState_simp]:
  "\<lbrakk>read_reg GICH_MISR_ref\<rbrakk>\<^sub>S = read_regS GICH_MISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_MISR[liftState_simp]:
  "\<lbrakk>write_reg GICH_MISR_ref v\<rbrakk>\<^sub>S = write_regS GICH_MISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_HCR[liftState_simp]:
  "\<lbrakk>read_reg GICH_HCR_ref\<rbrakk>\<^sub>S = read_regS GICH_HCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_HCR[liftState_simp]:
  "\<lbrakk>write_reg GICH_HCR_ref v\<rbrakk>\<^sub>S = write_regS GICH_HCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_ELRSR[liftState_simp]:
  "\<lbrakk>read_reg GICH_ELRSR_ref\<rbrakk>\<^sub>S = read_regS GICH_ELRSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_ELRSR[liftState_simp]:
  "\<lbrakk>write_reg GICH_ELRSR_ref v\<rbrakk>\<^sub>S = write_regS GICH_ELRSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICH_EISR[liftState_simp]:
  "\<lbrakk>read_reg GICH_EISR_ref\<rbrakk>\<^sub>S = read_regS GICH_EISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICH_EISR[liftState_simp]:
  "\<lbrakk>write_reg GICH_EISR_ref v\<rbrakk>\<^sub>S = write_regS GICH_EISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_TYPER2[liftState_simp]:
  "\<lbrakk>read_reg GICD_TYPER2_ref\<rbrakk>\<^sub>S = read_regS GICD_TYPER2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_TYPER2[liftState_simp]:
  "\<lbrakk>write_reg GICD_TYPER2_ref v\<rbrakk>\<^sub>S = write_regS GICD_TYPER2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_STATUSR[liftState_simp]:
  "\<lbrakk>read_reg GICD_STATUSR_ref\<rbrakk>\<^sub>S = read_regS GICD_STATUSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_STATUSR[liftState_simp]:
  "\<lbrakk>write_reg GICD_STATUSR_ref v\<rbrakk>\<^sub>S = write_regS GICD_STATUSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_SGIR[liftState_simp]:
  "\<lbrakk>read_reg GICD_SGIR_ref\<rbrakk>\<^sub>S = read_regS GICD_SGIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_SGIR[liftState_simp]:
  "\<lbrakk>write_reg GICD_SGIR_ref v\<rbrakk>\<^sub>S = write_regS GICD_SGIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_SETSPI_SR[liftState_simp]:
  "\<lbrakk>read_reg GICD_SETSPI_SR_ref\<rbrakk>\<^sub>S = read_regS GICD_SETSPI_SR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_SETSPI_SR[liftState_simp]:
  "\<lbrakk>write_reg GICD_SETSPI_SR_ref v\<rbrakk>\<^sub>S = write_regS GICD_SETSPI_SR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_SETSPI_NSR[liftState_simp]:
  "\<lbrakk>read_reg GICD_SETSPI_NSR_ref\<rbrakk>\<^sub>S = read_regS GICD_SETSPI_NSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_SETSPI_NSR[liftState_simp]:
  "\<lbrakk>write_reg GICD_SETSPI_NSR_ref v\<rbrakk>\<^sub>S = write_regS GICD_SETSPI_NSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_IIDR[liftState_simp]:
  "\<lbrakk>read_reg GICD_IIDR_ref\<rbrakk>\<^sub>S = read_regS GICD_IIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_IIDR[liftState_simp]:
  "\<lbrakk>write_reg GICD_IIDR_ref v\<rbrakk>\<^sub>S = write_regS GICD_IIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_CTLR[liftState_simp]:
  "\<lbrakk>read_reg GICD_CTLR_ref\<rbrakk>\<^sub>S = read_regS GICD_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_CTLR[liftState_simp]:
  "\<lbrakk>write_reg GICD_CTLR_ref v\<rbrakk>\<^sub>S = write_regS GICD_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_CLRSPI_SR[liftState_simp]:
  "\<lbrakk>read_reg GICD_CLRSPI_SR_ref\<rbrakk>\<^sub>S = read_regS GICD_CLRSPI_SR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_CLRSPI_SR[liftState_simp]:
  "\<lbrakk>write_reg GICD_CLRSPI_SR_ref v\<rbrakk>\<^sub>S = write_regS GICD_CLRSPI_SR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICD_CLRSPI_NSR[liftState_simp]:
  "\<lbrakk>read_reg GICD_CLRSPI_NSR_ref\<rbrakk>\<^sub>S = read_regS GICD_CLRSPI_NSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICD_CLRSPI_NSR[liftState_simp]:
  "\<lbrakk>write_reg GICD_CLRSPI_NSR_ref v\<rbrakk>\<^sub>S = write_regS GICD_CLRSPI_NSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_STATUSR[liftState_simp]:
  "\<lbrakk>read_reg GICC_STATUSR_ref\<rbrakk>\<^sub>S = read_regS GICC_STATUSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_STATUSR[liftState_simp]:
  "\<lbrakk>write_reg GICC_STATUSR_ref v\<rbrakk>\<^sub>S = write_regS GICC_STATUSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_RPR[liftState_simp]:
  "\<lbrakk>read_reg GICC_RPR_ref\<rbrakk>\<^sub>S = read_regS GICC_RPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_RPR[liftState_simp]:
  "\<lbrakk>write_reg GICC_RPR_ref v\<rbrakk>\<^sub>S = write_regS GICC_RPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_PMR[liftState_simp]:
  "\<lbrakk>read_reg GICC_PMR_ref\<rbrakk>\<^sub>S = read_regS GICC_PMR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_PMR[liftState_simp]:
  "\<lbrakk>write_reg GICC_PMR_ref v\<rbrakk>\<^sub>S = write_regS GICC_PMR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_IAR[liftState_simp]:
  "\<lbrakk>read_reg GICC_IAR_ref\<rbrakk>\<^sub>S = read_regS GICC_IAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_IAR[liftState_simp]:
  "\<lbrakk>write_reg GICC_IAR_ref v\<rbrakk>\<^sub>S = write_regS GICC_IAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_HPPIR[liftState_simp]:
  "\<lbrakk>read_reg GICC_HPPIR_ref\<rbrakk>\<^sub>S = read_regS GICC_HPPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_HPPIR[liftState_simp]:
  "\<lbrakk>write_reg GICC_HPPIR_ref v\<rbrakk>\<^sub>S = write_regS GICC_HPPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_EOIR[liftState_simp]:
  "\<lbrakk>read_reg GICC_EOIR_ref\<rbrakk>\<^sub>S = read_regS GICC_EOIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_EOIR[liftState_simp]:
  "\<lbrakk>write_reg GICC_EOIR_ref v\<rbrakk>\<^sub>S = write_regS GICC_EOIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_DIR[liftState_simp]:
  "\<lbrakk>read_reg GICC_DIR_ref\<rbrakk>\<^sub>S = read_regS GICC_DIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_DIR[liftState_simp]:
  "\<lbrakk>write_reg GICC_DIR_ref v\<rbrakk>\<^sub>S = write_regS GICC_DIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_BPR[liftState_simp]:
  "\<lbrakk>read_reg GICC_BPR_ref\<rbrakk>\<^sub>S = read_regS GICC_BPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_BPR[liftState_simp]:
  "\<lbrakk>write_reg GICC_BPR_ref v\<rbrakk>\<^sub>S = write_regS GICC_BPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_AIAR[liftState_simp]:
  "\<lbrakk>read_reg GICC_AIAR_ref\<rbrakk>\<^sub>S = read_regS GICC_AIAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_AIAR[liftState_simp]:
  "\<lbrakk>write_reg GICC_AIAR_ref v\<rbrakk>\<^sub>S = write_regS GICC_AIAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_AHPPIR[liftState_simp]:
  "\<lbrakk>read_reg GICC_AHPPIR_ref\<rbrakk>\<^sub>S = read_regS GICC_AHPPIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_AHPPIR[liftState_simp]:
  "\<lbrakk>write_reg GICC_AHPPIR_ref v\<rbrakk>\<^sub>S = write_regS GICC_AHPPIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_AEOIR[liftState_simp]:
  "\<lbrakk>read_reg GICC_AEOIR_ref\<rbrakk>\<^sub>S = read_regS GICC_AEOIR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_AEOIR[liftState_simp]:
  "\<lbrakk>write_reg GICC_AEOIR_ref v\<rbrakk>\<^sub>S = write_regS GICC_AEOIR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_ABPR[liftState_simp]:
  "\<lbrakk>read_reg GICC_ABPR_ref\<rbrakk>\<^sub>S = read_regS GICC_ABPR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_ABPR[liftState_simp]:
  "\<lbrakk>write_reg GICC_ABPR_ref v\<rbrakk>\<^sub>S = write_regS GICC_ABPR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FCSEIDR[liftState_simp]:
  "\<lbrakk>read_reg FCSEIDR_ref\<rbrakk>\<^sub>S = read_regS FCSEIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FCSEIDR[liftState_simp]:
  "\<lbrakk>write_reg FCSEIDR_ref v\<rbrakk>\<^sub>S = write_regS FCSEIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERRSELR[liftState_simp]:
  "\<lbrakk>read_reg ERRSELR_ref\<rbrakk>\<^sub>S = read_regS ERRSELR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERRSELR[liftState_simp]:
  "\<lbrakk>write_reg ERRSELR_ref v\<rbrakk>\<^sub>S = write_regS ERRSELR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERRSELR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERRSELR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERRSELR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERRSELR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERRSELR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERRSELR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERRIDR[liftState_simp]:
  "\<lbrakk>read_reg ERRIDR_ref\<rbrakk>\<^sub>S = read_regS ERRIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERRIDR[liftState_simp]:
  "\<lbrakk>write_reg ERRIDR_ref v\<rbrakk>\<^sub>S = write_regS ERRIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERRIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ERRIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS ERRIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERRIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ERRIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ERRIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDVIDSR[liftState_simp]:
  "\<lbrakk>read_reg EDVIDSR_ref\<rbrakk>\<^sub>S = read_regS EDVIDSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDVIDSR[liftState_simp]:
  "\<lbrakk>write_reg EDVIDSR_ref v\<rbrakk>\<^sub>S = write_regS EDVIDSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDRCR[liftState_simp]:
  "\<lbrakk>read_reg EDRCR_ref\<rbrakk>\<^sub>S = read_regS EDRCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDRCR[liftState_simp]:
  "\<lbrakk>write_reg EDRCR_ref v\<rbrakk>\<^sub>S = write_regS EDRCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPRSR[liftState_simp]:
  "\<lbrakk>read_reg EDPRSR_ref\<rbrakk>\<^sub>S = read_regS EDPRSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPRSR[liftState_simp]:
  "\<lbrakk>write_reg EDPRSR_ref v\<rbrakk>\<^sub>S = write_regS EDPRSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPRCR[liftState_simp]:
  "\<lbrakk>read_reg EDPRCR_ref\<rbrakk>\<^sub>S = read_regS EDPRCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPRCR[liftState_simp]:
  "\<lbrakk>write_reg EDPRCR_ref v\<rbrakk>\<^sub>S = write_regS EDPRCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPIDR4[liftState_simp]:
  "\<lbrakk>read_reg EDPIDR4_ref\<rbrakk>\<^sub>S = read_regS EDPIDR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPIDR4[liftState_simp]:
  "\<lbrakk>write_reg EDPIDR4_ref v\<rbrakk>\<^sub>S = write_regS EDPIDR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPIDR3[liftState_simp]:
  "\<lbrakk>read_reg EDPIDR3_ref\<rbrakk>\<^sub>S = read_regS EDPIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPIDR3[liftState_simp]:
  "\<lbrakk>write_reg EDPIDR3_ref v\<rbrakk>\<^sub>S = write_regS EDPIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPIDR2[liftState_simp]:
  "\<lbrakk>read_reg EDPIDR2_ref\<rbrakk>\<^sub>S = read_regS EDPIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPIDR2[liftState_simp]:
  "\<lbrakk>write_reg EDPIDR2_ref v\<rbrakk>\<^sub>S = write_regS EDPIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPIDR1[liftState_simp]:
  "\<lbrakk>read_reg EDPIDR1_ref\<rbrakk>\<^sub>S = read_regS EDPIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPIDR1[liftState_simp]:
  "\<lbrakk>write_reg EDPIDR1_ref v\<rbrakk>\<^sub>S = write_regS EDPIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPIDR0[liftState_simp]:
  "\<lbrakk>read_reg EDPIDR0_ref\<rbrakk>\<^sub>S = read_regS EDPIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPIDR0[liftState_simp]:
  "\<lbrakk>write_reg EDPIDR0_ref v\<rbrakk>\<^sub>S = write_regS EDPIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPFR[liftState_simp]:
  "\<lbrakk>read_reg EDPFR_ref\<rbrakk>\<^sub>S = read_regS EDPFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPFR[liftState_simp]:
  "\<lbrakk>write_reg EDPFR_ref v\<rbrakk>\<^sub>S = write_regS EDPFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDPCSR[liftState_simp]:
  "\<lbrakk>read_reg EDPCSR_ref\<rbrakk>\<^sub>S = read_regS EDPCSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDPCSR[liftState_simp]:
  "\<lbrakk>write_reg EDPCSR_ref v\<rbrakk>\<^sub>S = write_regS EDPCSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDLSR[liftState_simp]:
  "\<lbrakk>read_reg EDLSR_ref\<rbrakk>\<^sub>S = read_regS EDLSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDLSR[liftState_simp]:
  "\<lbrakk>write_reg EDLSR_ref v\<rbrakk>\<^sub>S = write_regS EDLSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDLAR[liftState_simp]:
  "\<lbrakk>read_reg EDLAR_ref\<rbrakk>\<^sub>S = read_regS EDLAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDLAR[liftState_simp]:
  "\<lbrakk>write_reg EDLAR_ref v\<rbrakk>\<^sub>S = write_regS EDLAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDITCTRL[liftState_simp]:
  "\<lbrakk>read_reg EDITCTRL_ref\<rbrakk>\<^sub>S = read_regS EDITCTRL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDITCTRL[liftState_simp]:
  "\<lbrakk>write_reg EDITCTRL_ref v\<rbrakk>\<^sub>S = write_regS EDITCTRL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDHSR[liftState_simp]:
  "\<lbrakk>read_reg EDHSR_ref\<rbrakk>\<^sub>S = read_regS EDHSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDHSR[liftState_simp]:
  "\<lbrakk>write_reg EDHSR_ref v\<rbrakk>\<^sub>S = write_regS EDHSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDFR1[liftState_simp]:
  "\<lbrakk>read_reg EDDFR1_ref\<rbrakk>\<^sub>S = read_regS EDDFR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDFR1[liftState_simp]:
  "\<lbrakk>write_reg EDDFR1_ref v\<rbrakk>\<^sub>S = write_regS EDDFR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDFR[liftState_simp]:
  "\<lbrakk>read_reg EDDFR_ref\<rbrakk>\<^sub>S = read_regS EDDFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDFR[liftState_simp]:
  "\<lbrakk>write_reg EDDFR_ref v\<rbrakk>\<^sub>S = write_regS EDDFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDEVTYPE[liftState_simp]:
  "\<lbrakk>read_reg EDDEVTYPE_ref\<rbrakk>\<^sub>S = read_regS EDDEVTYPE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDEVTYPE[liftState_simp]:
  "\<lbrakk>write_reg EDDEVTYPE_ref v\<rbrakk>\<^sub>S = write_regS EDDEVTYPE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDEVID2[liftState_simp]:
  "\<lbrakk>read_reg EDDEVID2_ref\<rbrakk>\<^sub>S = read_regS EDDEVID2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDEVID2[liftState_simp]:
  "\<lbrakk>write_reg EDDEVID2_ref v\<rbrakk>\<^sub>S = write_regS EDDEVID2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDEVID1[liftState_simp]:
  "\<lbrakk>read_reg EDDEVID1_ref\<rbrakk>\<^sub>S = read_regS EDDEVID1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDEVID1[liftState_simp]:
  "\<lbrakk>write_reg EDDEVID1_ref v\<rbrakk>\<^sub>S = write_regS EDDEVID1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDDEVID[liftState_simp]:
  "\<lbrakk>read_reg EDDEVID_ref\<rbrakk>\<^sub>S = read_regS EDDEVID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDDEVID[liftState_simp]:
  "\<lbrakk>write_reg EDDEVID_ref v\<rbrakk>\<^sub>S = write_regS EDDEVID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDCIDR3[liftState_simp]:
  "\<lbrakk>read_reg EDCIDR3_ref\<rbrakk>\<^sub>S = read_regS EDCIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDCIDR3[liftState_simp]:
  "\<lbrakk>write_reg EDCIDR3_ref v\<rbrakk>\<^sub>S = write_regS EDCIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDCIDR2[liftState_simp]:
  "\<lbrakk>read_reg EDCIDR2_ref\<rbrakk>\<^sub>S = read_regS EDCIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDCIDR2[liftState_simp]:
  "\<lbrakk>write_reg EDCIDR2_ref v\<rbrakk>\<^sub>S = write_regS EDCIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDCIDR1[liftState_simp]:
  "\<lbrakk>read_reg EDCIDR1_ref\<rbrakk>\<^sub>S = read_regS EDCIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDCIDR1[liftState_simp]:
  "\<lbrakk>write_reg EDCIDR1_ref v\<rbrakk>\<^sub>S = write_regS EDCIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDCIDR0[liftState_simp]:
  "\<lbrakk>read_reg EDCIDR0_ref\<rbrakk>\<^sub>S = read_regS EDCIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDCIDR0[liftState_simp]:
  "\<lbrakk>write_reg EDCIDR0_ref v\<rbrakk>\<^sub>S = write_regS EDCIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDAA32PFR[liftState_simp]:
  "\<lbrakk>read_reg EDAA32PFR_ref\<rbrakk>\<^sub>S = read_regS EDAA32PFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDAA32PFR[liftState_simp]:
  "\<lbrakk>write_reg EDAA32PFR_ref v\<rbrakk>\<^sub>S = write_regS EDAA32PFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGWFAR[liftState_simp]:
  "\<lbrakk>read_reg DBGWFAR_ref\<rbrakk>\<^sub>S = read_regS DBGWFAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGWFAR[liftState_simp]:
  "\<lbrakk>write_reg DBGWFAR_ref v\<rbrakk>\<^sub>S = write_regS DBGWFAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGVCR[liftState_simp]:
  "\<lbrakk>read_reg DBGVCR_ref\<rbrakk>\<^sub>S = read_regS DBGVCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGVCR[liftState_simp]:
  "\<lbrakk>write_reg DBGVCR_ref v\<rbrakk>\<^sub>S = write_regS DBGVCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGVCR32_EL2[liftState_simp]:
  "\<lbrakk>read_reg DBGVCR32_EL2_ref\<rbrakk>\<^sub>S = read_regS DBGVCR32_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGVCR32_EL2[liftState_simp]:
  "\<lbrakk>write_reg DBGVCR32_EL2_ref v\<rbrakk>\<^sub>S = write_regS DBGVCR32_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDSAR[liftState_simp]:
  "\<lbrakk>read_reg DBGDSAR_ref\<rbrakk>\<^sub>S = read_regS DBGDSAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDSAR[liftState_simp]:
  "\<lbrakk>write_reg DBGDSAR_ref v\<rbrakk>\<^sub>S = write_regS DBGDSAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDRAR[liftState_simp]:
  "\<lbrakk>read_reg DBGDRAR_ref\<rbrakk>\<^sub>S = read_regS DBGDRAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDRAR[liftState_simp]:
  "\<lbrakk>write_reg DBGDRAR_ref v\<rbrakk>\<^sub>S = write_regS DBGDRAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDRAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MDRAR_EL1_ref\<rbrakk>\<^sub>S = read_regS MDRAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDRAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MDRAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MDRAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDIDR[liftState_simp]:
  "\<lbrakk>read_reg DBGDIDR_ref\<rbrakk>\<^sub>S = read_regS DBGDIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDIDR[liftState_simp]:
  "\<lbrakk>write_reg DBGDIDR_ref v\<rbrakk>\<^sub>S = write_regS DBGDIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDEVID2[liftState_simp]:
  "\<lbrakk>read_reg DBGDEVID2_ref\<rbrakk>\<^sub>S = read_regS DBGDEVID2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDEVID2[liftState_simp]:
  "\<lbrakk>write_reg DBGDEVID2_ref v\<rbrakk>\<^sub>S = write_regS DBGDEVID2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDEVID1[liftState_simp]:
  "\<lbrakk>read_reg DBGDEVID1_ref\<rbrakk>\<^sub>S = read_regS DBGDEVID1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDEVID1[liftState_simp]:
  "\<lbrakk>write_reg DBGDEVID1_ref v\<rbrakk>\<^sub>S = write_regS DBGDEVID1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDCCINT[liftState_simp]:
  "\<lbrakk>read_reg DBGDCCINT_ref\<rbrakk>\<^sub>S = read_regS DBGDCCINT_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDCCINT[liftState_simp]:
  "\<lbrakk>write_reg DBGDCCINT_ref v\<rbrakk>\<^sub>S = write_regS DBGDCCINT_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDCCINT_EL1[liftState_simp]:
  "\<lbrakk>read_reg MDCCINT_EL1_ref\<rbrakk>\<^sub>S = read_regS MDCCINT_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDCCINT_EL1[liftState_simp]:
  "\<lbrakk>write_reg MDCCINT_EL1_ref v\<rbrakk>\<^sub>S = write_regS MDCCINT_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGCLAIMSET[liftState_simp]:
  "\<lbrakk>read_reg DBGCLAIMSET_ref\<rbrakk>\<^sub>S = read_regS DBGCLAIMSET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGCLAIMSET[liftState_simp]:
  "\<lbrakk>write_reg DBGCLAIMSET_ref v\<rbrakk>\<^sub>S = write_regS DBGCLAIMSET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGCLAIMSET_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGCLAIMSET_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGCLAIMSET_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGCLAIMSET_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGCLAIMSET_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGCLAIMSET_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGCLAIMCLR[liftState_simp]:
  "\<lbrakk>read_reg DBGCLAIMCLR_ref\<rbrakk>\<^sub>S = read_regS DBGCLAIMCLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGCLAIMCLR[liftState_simp]:
  "\<lbrakk>write_reg DBGCLAIMCLR_ref v\<rbrakk>\<^sub>S = write_regS DBGCLAIMCLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGCLAIMCLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGCLAIMCLR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGCLAIMCLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGCLAIMCLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGCLAIMCLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGCLAIMCLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGAUTHSTATUS[liftState_simp]:
  "\<lbrakk>read_reg DBGAUTHSTATUS_ref\<rbrakk>\<^sub>S = read_regS DBGAUTHSTATUS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGAUTHSTATUS[liftState_simp]:
  "\<lbrakk>write_reg DBGAUTHSTATUS_ref v\<rbrakk>\<^sub>S = write_regS DBGAUTHSTATUS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGAUTHSTATUS_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGAUTHSTATUS_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGAUTHSTATUS_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGAUTHSTATUS_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGAUTHSTATUS_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGAUTHSTATUS_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTR[liftState_simp]:
  "\<lbrakk>read_reg CTR_ref\<rbrakk>\<^sub>S = read_regS CTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTR[liftState_simp]:
  "\<lbrakk>write_reg CTR_ref v\<rbrakk>\<^sub>S = write_regS CTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIPIDR4[liftState_simp]:
  "\<lbrakk>read_reg CTIPIDR4_ref\<rbrakk>\<^sub>S = read_regS CTIPIDR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIPIDR4[liftState_simp]:
  "\<lbrakk>write_reg CTIPIDR4_ref v\<rbrakk>\<^sub>S = write_regS CTIPIDR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIPIDR3[liftState_simp]:
  "\<lbrakk>read_reg CTIPIDR3_ref\<rbrakk>\<^sub>S = read_regS CTIPIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIPIDR3[liftState_simp]:
  "\<lbrakk>write_reg CTIPIDR3_ref v\<rbrakk>\<^sub>S = write_regS CTIPIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIPIDR2[liftState_simp]:
  "\<lbrakk>read_reg CTIPIDR2_ref\<rbrakk>\<^sub>S = read_regS CTIPIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIPIDR2[liftState_simp]:
  "\<lbrakk>write_reg CTIPIDR2_ref v\<rbrakk>\<^sub>S = write_regS CTIPIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIPIDR1[liftState_simp]:
  "\<lbrakk>read_reg CTIPIDR1_ref\<rbrakk>\<^sub>S = read_regS CTIPIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIPIDR1[liftState_simp]:
  "\<lbrakk>write_reg CTIPIDR1_ref v\<rbrakk>\<^sub>S = write_regS CTIPIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIPIDR0[liftState_simp]:
  "\<lbrakk>read_reg CTIPIDR0_ref\<rbrakk>\<^sub>S = read_regS CTIPIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIPIDR0[liftState_simp]:
  "\<lbrakk>write_reg CTIPIDR0_ref v\<rbrakk>\<^sub>S = write_regS CTIPIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTILSR[liftState_simp]:
  "\<lbrakk>read_reg CTILSR_ref\<rbrakk>\<^sub>S = read_regS CTILSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTILSR[liftState_simp]:
  "\<lbrakk>write_reg CTILSR_ref v\<rbrakk>\<^sub>S = write_regS CTILSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTILAR[liftState_simp]:
  "\<lbrakk>read_reg CTILAR_ref\<rbrakk>\<^sub>S = read_regS CTILAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTILAR[liftState_simp]:
  "\<lbrakk>write_reg CTILAR_ref v\<rbrakk>\<^sub>S = write_regS CTILAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIITCTRL[liftState_simp]:
  "\<lbrakk>read_reg CTIITCTRL_ref\<rbrakk>\<^sub>S = read_regS CTIITCTRL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIITCTRL[liftState_simp]:
  "\<lbrakk>write_reg CTIITCTRL_ref v\<rbrakk>\<^sub>S = write_regS CTIITCTRL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVTYPE[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVTYPE_ref\<rbrakk>\<^sub>S = read_regS CTIDEVTYPE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVTYPE[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVTYPE_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVTYPE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVID2[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVID2_ref\<rbrakk>\<^sub>S = read_regS CTIDEVID2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVID2[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVID2_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVID2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVID1[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVID1_ref\<rbrakk>\<^sub>S = read_regS CTIDEVID1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVID1[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVID1_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVID1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVID[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVID_ref\<rbrakk>\<^sub>S = read_regS CTIDEVID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVID[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVID_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIDEVCTL[liftState_simp]:
  "\<lbrakk>read_reg CTIDEVCTL_ref\<rbrakk>\<^sub>S = read_regS CTIDEVCTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIDEVCTL[liftState_simp]:
  "\<lbrakk>write_reg CTIDEVCTL_ref v\<rbrakk>\<^sub>S = write_regS CTIDEVCTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTICONTROL[liftState_simp]:
  "\<lbrakk>read_reg CTICONTROL_ref\<rbrakk>\<^sub>S = read_regS CTICONTROL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTICONTROL[liftState_simp]:
  "\<lbrakk>write_reg CTICONTROL_ref v\<rbrakk>\<^sub>S = write_regS CTICONTROL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTICIDR3[liftState_simp]:
  "\<lbrakk>read_reg CTICIDR3_ref\<rbrakk>\<^sub>S = read_regS CTICIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTICIDR3[liftState_simp]:
  "\<lbrakk>write_reg CTICIDR3_ref v\<rbrakk>\<^sub>S = write_regS CTICIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTICIDR2[liftState_simp]:
  "\<lbrakk>read_reg CTICIDR2_ref\<rbrakk>\<^sub>S = read_regS CTICIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTICIDR2[liftState_simp]:
  "\<lbrakk>write_reg CTICIDR2_ref v\<rbrakk>\<^sub>S = write_regS CTICIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTICIDR1[liftState_simp]:
  "\<lbrakk>read_reg CTICIDR1_ref\<rbrakk>\<^sub>S = read_regS CTICIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTICIDR1[liftState_simp]:
  "\<lbrakk>write_reg CTICIDR1_ref v\<rbrakk>\<^sub>S = write_regS CTICIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTICIDR0[liftState_simp]:
  "\<lbrakk>read_reg CTICIDR0_ref\<rbrakk>\<^sub>S = read_regS CTICIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTICIDR0[liftState_simp]:
  "\<lbrakk>write_reg CTICIDR0_ref v\<rbrakk>\<^sub>S = write_regS CTICIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTIAUTHSTATUS[liftState_simp]:
  "\<lbrakk>read_reg CTIAUTHSTATUS_ref\<rbrakk>\<^sub>S = read_regS CTIAUTHSTATUS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTIAUTHSTATUS[liftState_simp]:
  "\<lbrakk>write_reg CTIAUTHSTATUS_ref v\<rbrakk>\<^sub>S = write_regS CTIAUTHSTATUS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CSSELR_S[liftState_simp]:
  "\<lbrakk>read_reg CSSELR_S_ref\<rbrakk>\<^sub>S = read_regS CSSELR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CSSELR_S[liftState_simp]:
  "\<lbrakk>write_reg CSSELR_S_ref v\<rbrakk>\<^sub>S = write_regS CSSELR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CSSELR_NS[liftState_simp]:
  "\<lbrakk>read_reg CSSELR_NS_ref\<rbrakk>\<^sub>S = read_regS CSSELR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CSSELR_NS[liftState_simp]:
  "\<lbrakk>write_reg CSSELR_NS_ref v\<rbrakk>\<^sub>S = write_regS CSSELR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CSSELR_EL1[liftState_simp]:
  "\<lbrakk>read_reg CSSELR_EL1_ref\<rbrakk>\<^sub>S = read_regS CSSELR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CSSELR_EL1[liftState_simp]:
  "\<lbrakk>write_reg CSSELR_EL1_ref v\<rbrakk>\<^sub>S = write_regS CSSELR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTV_CTL[liftState_simp]:
  "\<lbrakk>read_reg CNTV_CTL_ref\<rbrakk>\<^sub>S = read_regS CNTV_CTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTV_CTL[liftState_simp]:
  "\<lbrakk>write_reg CNTV_CTL_ref v\<rbrakk>\<^sub>S = write_regS CNTV_CTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTSR[liftState_simp]:
  "\<lbrakk>read_reg CNTSR_ref\<rbrakk>\<^sub>S = read_regS CNTSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTSR[liftState_simp]:
  "\<lbrakk>write_reg CNTSR_ref v\<rbrakk>\<^sub>S = write_regS CNTSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTNSAR[liftState_simp]:
  "\<lbrakk>read_reg CNTNSAR_ref\<rbrakk>\<^sub>S = read_regS CNTNSAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTNSAR[liftState_simp]:
  "\<lbrakk>write_reg CNTNSAR_ref v\<rbrakk>\<^sub>S = write_regS CNTNSAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTID[liftState_simp]:
  "\<lbrakk>read_reg CNTID_ref\<rbrakk>\<^sub>S = read_regS CNTID_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTID[liftState_simp]:
  "\<lbrakk>write_reg CNTID_ref v\<rbrakk>\<^sub>S = write_regS CNTID_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHV_CTL[liftState_simp]:
  "\<lbrakk>read_reg CNTHV_CTL_ref\<rbrakk>\<^sub>S = read_regS CNTHV_CTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHV_CTL[liftState_simp]:
  "\<lbrakk>write_reg CNTHV_CTL_ref v\<rbrakk>\<^sub>S = write_regS CNTHV_CTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHVS_CTL[liftState_simp]:
  "\<lbrakk>read_reg CNTHVS_CTL_ref\<rbrakk>\<^sub>S = read_regS CNTHVS_CTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHVS_CTL[liftState_simp]:
  "\<lbrakk>write_reg CNTHVS_CTL_ref v\<rbrakk>\<^sub>S = write_regS CNTHVS_CTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHPS_CTL[liftState_simp]:
  "\<lbrakk>read_reg CNTHPS_CTL_ref\<rbrakk>\<^sub>S = read_regS CNTHPS_CTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHPS_CTL[liftState_simp]:
  "\<lbrakk>write_reg CNTHPS_CTL_ref v\<rbrakk>\<^sub>S = write_regS CNTHPS_CTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHCTL[liftState_simp]:
  "\<lbrakk>read_reg CNTHCTL_ref\<rbrakk>\<^sub>S = read_regS CNTHCTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHCTL[liftState_simp]:
  "\<lbrakk>write_reg CNTHCTL_ref v\<rbrakk>\<^sub>S = write_regS CNTHCTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTEL0ACR[liftState_simp]:
  "\<lbrakk>read_reg CNTEL0ACR_ref\<rbrakk>\<^sub>S = read_regS CNTEL0ACR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTEL0ACR[liftState_simp]:
  "\<lbrakk>write_reg CNTEL0ACR_ref v\<rbrakk>\<^sub>S = write_regS CNTEL0ACR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CCSIDR[liftState_simp]:
  "\<lbrakk>read_reg CCSIDR_ref\<rbrakk>\<^sub>S = read_regS CCSIDR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CCSIDR[liftState_simp]:
  "\<lbrakk>write_reg CCSIDR_ref v\<rbrakk>\<^sub>S = write_regS CCSIDR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CCSIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg CCSIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS CCSIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CCSIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg CCSIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS CCSIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CCSIDR2[liftState_simp]:
  "\<lbrakk>read_reg CCSIDR2_ref\<rbrakk>\<^sub>S = read_regS CCSIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CCSIDR2[liftState_simp]:
  "\<lbrakk>write_reg CCSIDR2_ref v\<rbrakk>\<^sub>S = write_regS CCSIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CCSIDR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg CCSIDR2_EL1_ref\<rbrakk>\<^sub>S = read_regS CCSIDR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CCSIDR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg CCSIDR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS CCSIDR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMUSERENR[liftState_simp]:
  "\<lbrakk>read_reg AMUSERENR_ref\<rbrakk>\<^sub>S = read_regS AMUSERENR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMUSERENR[liftState_simp]:
  "\<lbrakk>write_reg AMUSERENR_ref v\<rbrakk>\<^sub>S = write_regS AMUSERENR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMUSERENR_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMUSERENR_EL0_ref\<rbrakk>\<^sub>S = read_regS AMUSERENR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMUSERENR_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMUSERENR_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMUSERENR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMPIDR4[liftState_simp]:
  "\<lbrakk>read_reg AMPIDR4_ref\<rbrakk>\<^sub>S = read_regS AMPIDR4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMPIDR4[liftState_simp]:
  "\<lbrakk>write_reg AMPIDR4_ref v\<rbrakk>\<^sub>S = write_regS AMPIDR4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMPIDR3[liftState_simp]:
  "\<lbrakk>read_reg AMPIDR3_ref\<rbrakk>\<^sub>S = read_regS AMPIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMPIDR3[liftState_simp]:
  "\<lbrakk>write_reg AMPIDR3_ref v\<rbrakk>\<^sub>S = write_regS AMPIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMPIDR2[liftState_simp]:
  "\<lbrakk>read_reg AMPIDR2_ref\<rbrakk>\<^sub>S = read_regS AMPIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMPIDR2[liftState_simp]:
  "\<lbrakk>write_reg AMPIDR2_ref v\<rbrakk>\<^sub>S = write_regS AMPIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMPIDR1[liftState_simp]:
  "\<lbrakk>read_reg AMPIDR1_ref\<rbrakk>\<^sub>S = read_regS AMPIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMPIDR1[liftState_simp]:
  "\<lbrakk>write_reg AMPIDR1_ref v\<rbrakk>\<^sub>S = write_regS AMPIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMPIDR0[liftState_simp]:
  "\<lbrakk>read_reg AMPIDR0_ref\<rbrakk>\<^sub>S = read_regS AMPIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMPIDR0[liftState_simp]:
  "\<lbrakk>write_reg AMPIDR0_ref v\<rbrakk>\<^sub>S = write_regS AMPIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMDEVTYPE[liftState_simp]:
  "\<lbrakk>read_reg AMDEVTYPE_ref\<rbrakk>\<^sub>S = read_regS AMDEVTYPE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMDEVTYPE[liftState_simp]:
  "\<lbrakk>write_reg AMDEVTYPE_ref v\<rbrakk>\<^sub>S = write_regS AMDEVTYPE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCR[liftState_simp]:
  "\<lbrakk>read_reg AMCR_ref\<rbrakk>\<^sub>S = read_regS AMCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCR[liftState_simp]:
  "\<lbrakk>write_reg AMCR_ref v\<rbrakk>\<^sub>S = write_regS AMCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCR_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCR_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCR_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCR_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENSET1[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENSET1_ref\<rbrakk>\<^sub>S = read_regS AMCNTENSET1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENSET1[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENSET1_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENSET1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENSET1_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENSET1_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENSET1_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENSET1_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENSET1_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENSET1_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENSET0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENSET0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENSET0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENSET0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENSET0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENSET0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENSET0_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENSET0_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENSET0_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENSET0_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENSET0_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENSET0_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENCLR1[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENCLR1_ref\<rbrakk>\<^sub>S = read_regS AMCNTENCLR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENCLR1[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENCLR1_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENCLR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENCLR1_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENCLR1_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENCLR1_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENCLR1_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENCLR1_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENCLR1_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENCLR0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENCLR0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENCLR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENCLR0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENCLR0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENCLR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCNTENCLR0_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCNTENCLR0_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCNTENCLR0_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCNTENCLR0_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCNTENCLR0_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCNTENCLR0_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCIDR3[liftState_simp]:
  "\<lbrakk>read_reg AMCIDR3_ref\<rbrakk>\<^sub>S = read_regS AMCIDR3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCIDR3[liftState_simp]:
  "\<lbrakk>write_reg AMCIDR3_ref v\<rbrakk>\<^sub>S = write_regS AMCIDR3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCIDR2[liftState_simp]:
  "\<lbrakk>read_reg AMCIDR2_ref\<rbrakk>\<^sub>S = read_regS AMCIDR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCIDR2[liftState_simp]:
  "\<lbrakk>write_reg AMCIDR2_ref v\<rbrakk>\<^sub>S = write_regS AMCIDR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCIDR1[liftState_simp]:
  "\<lbrakk>read_reg AMCIDR1_ref\<rbrakk>\<^sub>S = read_regS AMCIDR1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCIDR1[liftState_simp]:
  "\<lbrakk>write_reg AMCIDR1_ref v\<rbrakk>\<^sub>S = write_regS AMCIDR1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCIDR0[liftState_simp]:
  "\<lbrakk>read_reg AMCIDR0_ref\<rbrakk>\<^sub>S = read_regS AMCIDR0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCIDR0[liftState_simp]:
  "\<lbrakk>write_reg AMCIDR0_ref v\<rbrakk>\<^sub>S = write_regS AMCIDR0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCGCR[liftState_simp]:
  "\<lbrakk>read_reg AMCGCR_ref\<rbrakk>\<^sub>S = read_regS AMCGCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCGCR[liftState_simp]:
  "\<lbrakk>write_reg AMCGCR_ref v\<rbrakk>\<^sub>S = write_regS AMCGCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCGCR_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCGCR_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCGCR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCGCR_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCGCR_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCGCR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCFGR[liftState_simp]:
  "\<lbrakk>read_reg AMCFGR_ref\<rbrakk>\<^sub>S = read_regS AMCFGR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCFGR[liftState_simp]:
  "\<lbrakk>write_reg AMCFGR_ref v\<rbrakk>\<^sub>S = write_regS AMCFGR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_AMCFGR_EL0[liftState_simp]:
  "\<lbrakk>read_reg AMCFGR_EL0_ref\<rbrakk>\<^sub>S = read_regS AMCFGR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_AMCFGR_EL0[liftState_simp]:
  "\<lbrakk>write_reg AMCFGR_EL0_ref v\<rbrakk>\<^sub>S = write_regS AMCFGR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RVBAR_EL3[liftState_simp]:
  "\<lbrakk>read_reg RVBAR_EL3_ref\<rbrakk>\<^sub>S = read_regS RVBAR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RVBAR_EL3[liftState_simp]:
  "\<lbrakk>write_reg RVBAR_EL3_ref v\<rbrakk>\<^sub>S = write_regS RVBAR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RVBAR_EL2[liftState_simp]:
  "\<lbrakk>read_reg RVBAR_EL2_ref\<rbrakk>\<^sub>S = read_regS RVBAR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RVBAR_EL2[liftState_simp]:
  "\<lbrakk>write_reg RVBAR_EL2_ref v\<rbrakk>\<^sub>S = write_regS RVBAR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RVBAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg RVBAR_EL1_ref\<rbrakk>\<^sub>S = read_regS RVBAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RVBAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg RVBAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS RVBAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VDISR[liftState_simp]:
  "\<lbrakk>read_reg VDISR_ref\<rbrakk>\<^sub>S = read_regS VDISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VDISR[liftState_simp]:
  "\<lbrakk>write_reg VDISR_ref v\<rbrakk>\<^sub>S = write_regS VDISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VDISR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VDISR_EL2_ref\<rbrakk>\<^sub>S = read_regS VDISR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VDISR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VDISR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VDISR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VDFSR[liftState_simp]:
  "\<lbrakk>read_reg VDFSR_ref\<rbrakk>\<^sub>S = read_regS VDFSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VDFSR[liftState_simp]:
  "\<lbrakk>write_reg VDFSR_ref v\<rbrakk>\<^sub>S = write_regS VDFSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VSESR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VSESR_EL2_ref\<rbrakk>\<^sub>S = read_regS VSESR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VSESR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VSESR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VSESR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DISR[liftState_simp]:
  "\<lbrakk>read_reg DISR_ref\<rbrakk>\<^sub>S = read_regS DISR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DISR[liftState_simp]:
  "\<lbrakk>write_reg DISR_ref v\<rbrakk>\<^sub>S = write_regS DISR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DISR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DISR_EL1_ref\<rbrakk>\<^sub>S = read_regS DISR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DISR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DISR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DISR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HFGITR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HFGITR_EL2_ref\<rbrakk>\<^sub>S = read_regS HFGITR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HFGITR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HFGITR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HFGITR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VNCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VNCR_EL2_ref\<rbrakk>\<^sub>S = read_regS VNCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VNCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VNCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VNCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RCWSMASK_EL1[liftState_simp]:
  "\<lbrakk>read_reg RCWSMASK_EL1_ref\<rbrakk>\<^sub>S = read_regS RCWSMASK_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RCWSMASK_EL1[liftState_simp]:
  "\<lbrakk>write_reg RCWSMASK_EL1_ref v\<rbrakk>\<^sub>S = write_regS RCWSMASK_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RCWMASK_EL1[liftState_simp]:
  "\<lbrakk>read_reg RCWMASK_EL1_ref\<rbrakk>\<^sub>S = read_regS RCWMASK_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RCWMASK_EL1[liftState_simp]:
  "\<lbrakk>write_reg RCWMASK_EL1_ref v\<rbrakk>\<^sub>S = write_regS RCWMASK_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleCounterValid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleCounterValid_ref\<rbrakk>\<^sub>S = read_regS SPESampleCounterValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleCounterValid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleCounterValid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleCounterValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleCounterPending[liftState_simp]:
  "\<lbrakk>read_reg SPESampleCounterPending_ref\<rbrakk>\<^sub>S = read_regS SPESampleCounterPending_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleCounterPending[liftState_simp]:
  "\<lbrakk>write_reg SPESampleCounterPending_ref v\<rbrakk>\<^sub>S = write_regS SPESampleCounterPending_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VMECID_A_EL2[liftState_simp]:
  "\<lbrakk>read_reg VMECID_A_EL2_ref\<rbrakk>\<^sub>S = read_regS VMECID_A_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VMECID_A_EL2[liftState_simp]:
  "\<lbrakk>write_reg VMECID_A_EL2_ref v\<rbrakk>\<^sub>S = write_regS VMECID_A_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_S2POR_EL1[liftState_simp]:
  "\<lbrakk>read_reg S2POR_EL1_ref\<rbrakk>\<^sub>S = read_regS S2POR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_S2POR_EL1[liftState_simp]:
  "\<lbrakk>write_reg S2POR_EL1_ref v\<rbrakk>\<^sub>S = write_regS S2POR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VSTTBR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VSTTBR_EL2_ref\<rbrakk>\<^sub>S = read_regS VSTTBR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VSTTBR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VSTTBR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VSTTBR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VSTCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VSTCR_EL2_ref\<rbrakk>\<^sub>S = read_regS VSTCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VSTCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VSTCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VSTCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_S2PIR_EL2[liftState_simp]:
  "\<lbrakk>read_reg S2PIR_EL2_ref\<rbrakk>\<^sub>S = read_regS S2PIR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_S2PIR_EL2[liftState_simp]:
  "\<lbrakk>write_reg S2PIR_EL2_ref v\<rbrakk>\<^sub>S = write_regS S2PIR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECID_RL_A_EL3[liftState_simp]:
  "\<lbrakk>read_reg MECID_RL_A_EL3_ref\<rbrakk>\<^sub>S = read_regS MECID_RL_A_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECID_RL_A_EL3[liftState_simp]:
  "\<lbrakk>write_reg MECID_RL_A_EL3_ref v\<rbrakk>\<^sub>S = write_regS MECID_RL_A_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECID_P1_EL2[liftState_simp]:
  "\<lbrakk>read_reg MECID_P1_EL2_ref\<rbrakk>\<^sub>S = read_regS MECID_P1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECID_P1_EL2[liftState_simp]:
  "\<lbrakk>write_reg MECID_P1_EL2_ref v\<rbrakk>\<^sub>S = write_regS MECID_P1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECID_A1_EL2[liftState_simp]:
  "\<lbrakk>read_reg MECID_A1_EL2_ref\<rbrakk>\<^sub>S = read_regS MECID_A1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECID_A1_EL2[liftState_simp]:
  "\<lbrakk>write_reg MECID_A1_EL2_ref v\<rbrakk>\<^sub>S = write_regS MECID_A1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECID_A0_EL2[liftState_simp]:
  "\<lbrakk>read_reg MECID_A0_EL2_ref\<rbrakk>\<^sub>S = read_regS MECID_A0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECID_A0_EL2[liftState_simp]:
  "\<lbrakk>write_reg MECID_A0_EL2_ref v\<rbrakk>\<^sub>S = write_regS MECID_A0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VMECID_P_EL2[liftState_simp]:
  "\<lbrakk>read_reg VMECID_P_EL2_ref\<rbrakk>\<^sub>S = read_regS VMECID_P_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VMECID_P_EL2[liftState_simp]:
  "\<lbrakk>write_reg VMECID_P_EL2_ref v\<rbrakk>\<^sub>S = write_regS VMECID_P_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MECID_P0_EL2[liftState_simp]:
  "\<lbrakk>read_reg MECID_P0_EL2_ref\<rbrakk>\<^sub>S = read_regS MECID_P0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MECID_P0_EL2[liftState_simp]:
  "\<lbrakk>write_reg MECID_P0_EL2_ref v\<rbrakk>\<^sub>S = write_regS MECID_P0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_POR_EL0[liftState_simp]:
  "\<lbrakk>read_reg POR_EL0_ref\<rbrakk>\<^sub>S = read_regS POR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_POR_EL0[liftState_simp]:
  "\<lbrakk>write_reg POR_EL0_ref v\<rbrakk>\<^sub>S = write_regS POR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_POR_EL3[liftState_simp]:
  "\<lbrakk>read_reg POR_EL3_ref\<rbrakk>\<^sub>S = read_regS POR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_POR_EL3[liftState_simp]:
  "\<lbrakk>write_reg POR_EL3_ref v\<rbrakk>\<^sub>S = write_regS POR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_POR_EL2[liftState_simp]:
  "\<lbrakk>read_reg POR_EL2_ref\<rbrakk>\<^sub>S = read_regS POR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_POR_EL2[liftState_simp]:
  "\<lbrakk>write_reg POR_EL2_ref v\<rbrakk>\<^sub>S = write_regS POR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_POR_EL1[liftState_simp]:
  "\<lbrakk>read_reg POR_EL1_ref\<rbrakk>\<^sub>S = read_regS POR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_POR_EL1[liftState_simp]:
  "\<lbrakk>write_reg POR_EL1_ref v\<rbrakk>\<^sub>S = write_regS POR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDWAR[liftState_simp]:
  "\<lbrakk>read_reg EDWAR_ref\<rbrakk>\<^sub>S = read_regS EDWAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDWAR[liftState_simp]:
  "\<lbrakk>write_reg EDWAR_ref v\<rbrakk>\<^sub>S = write_regS EDWAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGWVR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGWVR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGWVR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGWVR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGWVR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGWVR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGWCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGWCR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGWCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGWCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGWCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGWCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VTTBR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VTTBR_EL2_ref\<rbrakk>\<^sub>S = read_regS VTTBR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VTTBR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VTTBR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VTTBR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VTTBR[liftState_simp]:
  "\<lbrakk>read_reg VTTBR_ref\<rbrakk>\<^sub>S = read_regS VTTBR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VTTBR[liftState_simp]:
  "\<lbrakk>write_reg VTTBR_ref v\<rbrakk>\<^sub>S = write_regS VTTBR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VTCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VTCR_EL2_ref\<rbrakk>\<^sub>S = read_regS VTCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VTCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VTCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VTCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDSCR2[liftState_simp]:
  "\<lbrakk>read_reg EDSCR2_ref\<rbrakk>\<^sub>S = read_regS EDSCR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDSCR2[liftState_simp]:
  "\<lbrakk>write_reg EDSCR2_ref v\<rbrakk>\<^sub>S = write_regS EDSCR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGBVR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGBVR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGBVR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGBVR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGBVR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGBVR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGBCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGBCR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGBCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGBCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGBCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGBCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CONTEXTIDR_EL2[liftState_simp]:
  "\<lbrakk>read_reg CONTEXTIDR_EL2_ref\<rbrakk>\<^sub>S = read_regS CONTEXTIDR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CONTEXTIDR_EL2[liftState_simp]:
  "\<lbrakk>write_reg CONTEXTIDR_EL2_ref v\<rbrakk>\<^sub>S = write_regS CONTEXTIDR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TFSR_EL3[liftState_simp]:
  "\<lbrakk>read_reg TFSR_EL3_ref\<rbrakk>\<^sub>S = read_regS TFSR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TFSR_EL3[liftState_simp]:
  "\<lbrakk>write_reg TFSR_EL3_ref v\<rbrakk>\<^sub>S = write_regS TFSR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TFSR_EL2[liftState_simp]:
  "\<lbrakk>read_reg TFSR_EL2_ref\<rbrakk>\<^sub>S = read_regS TFSR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TFSR_EL2[liftState_simp]:
  "\<lbrakk>write_reg TFSR_EL2_ref v\<rbrakk>\<^sub>S = write_regS TFSR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TFSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg TFSR_EL1_ref\<rbrakk>\<^sub>S = read_regS TFSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TFSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg TFSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS TFSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TFSRE0_EL1[liftState_simp]:
  "\<lbrakk>read_reg TFSRE0_EL1_ref\<rbrakk>\<^sub>S = read_regS TFSRE0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TFSRE0_EL1[liftState_simp]:
  "\<lbrakk>write_reg TFSRE0_EL1_ref v\<rbrakk>\<^sub>S = write_regS TFSRE0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RGSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg RGSR_EL1_ref\<rbrakk>\<^sub>S = read_regS RGSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RGSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg RGSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS RGSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg GCR_EL1_ref\<rbrakk>\<^sub>S = read_regS GCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg GCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS GCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTKCTL[liftState_simp]:
  "\<lbrakk>read_reg CNTKCTL_ref\<rbrakk>\<^sub>S = read_regS CNTKCTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTKCTL[liftState_simp]:
  "\<lbrakk>write_reg CNTKCTL_ref v\<rbrakk>\<^sub>S = write_regS CNTKCTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APGAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>read_reg APGAKeyLo_EL1_ref\<rbrakk>\<^sub>S = read_regS APGAKeyLo_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APGAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>write_reg APGAKeyLo_EL1_ref v\<rbrakk>\<^sub>S = write_regS APGAKeyLo_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APGAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>read_reg APGAKeyHi_EL1_ref\<rbrakk>\<^sub>S = read_regS APGAKeyHi_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APGAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>write_reg APGAKeyHi_EL1_ref v\<rbrakk>\<^sub>S = write_regS APGAKeyHi_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APDBKeyLo_EL1[liftState_simp]:
  "\<lbrakk>read_reg APDBKeyLo_EL1_ref\<rbrakk>\<^sub>S = read_regS APDBKeyLo_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APDBKeyLo_EL1[liftState_simp]:
  "\<lbrakk>write_reg APDBKeyLo_EL1_ref v\<rbrakk>\<^sub>S = write_regS APDBKeyLo_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APDBKeyHi_EL1[liftState_simp]:
  "\<lbrakk>read_reg APDBKeyHi_EL1_ref\<rbrakk>\<^sub>S = read_regS APDBKeyHi_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APDBKeyHi_EL1[liftState_simp]:
  "\<lbrakk>write_reg APDBKeyHi_EL1_ref v\<rbrakk>\<^sub>S = write_regS APDBKeyHi_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APDAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>read_reg APDAKeyLo_EL1_ref\<rbrakk>\<^sub>S = read_regS APDAKeyLo_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APDAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>write_reg APDAKeyLo_EL1_ref v\<rbrakk>\<^sub>S = write_regS APDAKeyLo_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APDAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>read_reg APDAKeyHi_EL1_ref\<rbrakk>\<^sub>S = read_regS APDAKeyHi_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APDAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>write_reg APDAKeyHi_EL1_ref v\<rbrakk>\<^sub>S = write_regS APDAKeyHi_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APIBKeyLo_EL1[liftState_simp]:
  "\<lbrakk>read_reg APIBKeyLo_EL1_ref\<rbrakk>\<^sub>S = read_regS APIBKeyLo_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APIBKeyLo_EL1[liftState_simp]:
  "\<lbrakk>write_reg APIBKeyLo_EL1_ref v\<rbrakk>\<^sub>S = write_regS APIBKeyLo_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APIBKeyHi_EL1[liftState_simp]:
  "\<lbrakk>read_reg APIBKeyHi_EL1_ref\<rbrakk>\<^sub>S = read_regS APIBKeyHi_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APIBKeyHi_EL1[liftState_simp]:
  "\<lbrakk>write_reg APIBKeyHi_EL1_ref v\<rbrakk>\<^sub>S = write_regS APIBKeyHi_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APIAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>read_reg APIAKeyLo_EL1_ref\<rbrakk>\<^sub>S = read_regS APIAKeyLo_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APIAKeyLo_EL1[liftState_simp]:
  "\<lbrakk>write_reg APIAKeyLo_EL1_ref v\<rbrakk>\<^sub>S = write_regS APIAKeyLo_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_APIAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>read_reg APIAKeyHi_EL1_ref\<rbrakk>\<^sub>S = read_regS APIAKeyHi_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_APIAKeyHi_EL1[liftState_simp]:
  "\<lbrakk>write_reg APIAKeyHi_EL1_ref v\<rbrakk>\<^sub>S = write_regS APIAKeyHi_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR0_EL3[liftState_simp]:
  "\<lbrakk>read_reg TTBR0_EL3_ref\<rbrakk>\<^sub>S = read_regS TTBR0_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR0_EL3[liftState_simp]:
  "\<lbrakk>write_reg TTBR0_EL3_ref v\<rbrakk>\<^sub>S = write_regS TTBR0_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR2_EL3[liftState_simp]:
  "\<lbrakk>read_reg SCTLR2_EL3_ref\<rbrakk>\<^sub>S = read_regS SCTLR2_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR2_EL3[liftState_simp]:
  "\<lbrakk>write_reg SCTLR2_EL3_ref v\<rbrakk>\<^sub>S = write_regS SCTLR2_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PIR_EL3[liftState_simp]:
  "\<lbrakk>read_reg PIR_EL3_ref\<rbrakk>\<^sub>S = read_regS PIR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PIR_EL3[liftState_simp]:
  "\<lbrakk>write_reg PIR_EL3_ref v\<rbrakk>\<^sub>S = write_regS PIR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR_EL3[liftState_simp]:
  "\<lbrakk>read_reg MAIR_EL3_ref\<rbrakk>\<^sub>S = read_regS MAIR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR_EL3[liftState_simp]:
  "\<lbrakk>write_reg MAIR_EL3_ref v\<rbrakk>\<^sub>S = write_regS MAIR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR2_EL3[liftState_simp]:
  "\<lbrakk>read_reg MAIR2_EL3_ref\<rbrakk>\<^sub>S = read_regS MAIR2_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR2_EL3[liftState_simp]:
  "\<lbrakk>write_reg MAIR2_EL3_ref v\<rbrakk>\<^sub>S = write_regS MAIR2_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PIRE0_EL2[liftState_simp]:
  "\<lbrakk>read_reg PIRE0_EL2_ref\<rbrakk>\<^sub>S = read_regS PIRE0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PIRE0_EL2[liftState_simp]:
  "\<lbrakk>write_reg PIRE0_EL2_ref v\<rbrakk>\<^sub>S = write_regS PIRE0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg TCR2_EL2_ref\<rbrakk>\<^sub>S = read_regS TCR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg TCR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS TCR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PIR_EL2[liftState_simp]:
  "\<lbrakk>read_reg PIR_EL2_ref\<rbrakk>\<^sub>S = read_regS PIR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PIR_EL2[liftState_simp]:
  "\<lbrakk>write_reg PIR_EL2_ref v\<rbrakk>\<^sub>S = write_regS PIR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR_EL2[liftState_simp]:
  "\<lbrakk>read_reg MAIR_EL2_ref\<rbrakk>\<^sub>S = read_regS MAIR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR_EL2[liftState_simp]:
  "\<lbrakk>write_reg MAIR_EL2_ref v\<rbrakk>\<^sub>S = write_regS MAIR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg MAIR2_EL2_ref\<rbrakk>\<^sub>S = read_regS MAIR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg MAIR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS MAIR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg TCR2_EL1_ref\<rbrakk>\<^sub>S = read_regS TCR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg TCR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS TCR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PIR_EL1_ref\<rbrakk>\<^sub>S = read_regS PIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PIRE0_EL1[liftState_simp]:
  "\<lbrakk>read_reg PIRE0_EL1_ref\<rbrakk>\<^sub>S = read_regS PIRE0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PIRE0_EL1[liftState_simp]:
  "\<lbrakk>write_reg PIRE0_EL1_ref v\<rbrakk>\<^sub>S = write_regS PIRE0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MAIR_EL1_ref\<rbrakk>\<^sub>S = read_regS MAIR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MAIR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MAIR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MAIR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg MAIR2_EL1_ref\<rbrakk>\<^sub>S = read_regS MAIR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MAIR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg MAIR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS MAIR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GICC_CTLR[liftState_simp]:
  "\<lbrakk>read_reg GICC_CTLR_ref\<rbrakk>\<^sub>S = read_regS GICC_CTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GICC_CTLR[liftState_simp]:
  "\<lbrakk>write_reg GICC_CTLR_ref v\<rbrakk>\<^sub>S = write_regS GICC_CTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_tlb_enabled[liftState_simp]:
  "\<lbrakk>read_reg tlb_enabled_ref\<rbrakk>\<^sub>S = read_regS tlb_enabled_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_tlb_enabled[liftState_simp]:
  "\<lbrakk>write_reg tlb_enabled_ref v\<rbrakk>\<^sub>S = write_regS tlb_enabled_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GPTBR_EL3[liftState_simp]:
  "\<lbrakk>read_reg GPTBR_EL3_ref\<rbrakk>\<^sub>S = read_regS GPTBR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GPTBR_EL3[liftState_simp]:
  "\<lbrakk>write_reg GPTBR_EL3_ref v\<rbrakk>\<^sub>S = write_regS GPTBR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GPCCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg GPCCR_EL3_ref\<rbrakk>\<^sub>S = read_regS GPCCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GPCCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg GPCCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS GPCCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTKCTL_EL1[liftState_simp]:
  "\<lbrakk>read_reg CNTKCTL_EL1_ref\<rbrakk>\<^sub>S = read_regS CNTKCTL_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTKCTL_EL1[liftState_simp]:
  "\<lbrakk>write_reg CNTKCTL_EL1_ref v\<rbrakk>\<^sub>S = write_regS CNTKCTL_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTSCR[liftState_simp]:
  "\<lbrakk>read_reg CNTSCR_ref\<rbrakk>\<^sub>S = read_regS CNTSCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTSCR[liftState_simp]:
  "\<lbrakk>write_reg CNTSCR_ref v\<rbrakk>\<^sub>S = write_regS CNTSCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTCR[liftState_simp]:
  "\<lbrakk>read_reg CNTCR_ref\<rbrakk>\<^sub>S = read_regS CNTCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTCR[liftState_simp]:
  "\<lbrakk>write_reg CNTCR_ref v\<rbrakk>\<^sub>S = write_regS CNTCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTPS_CVAL_EL1[liftState_simp]:
  "\<lbrakk>read_reg CNTPS_CVAL_EL1_ref\<rbrakk>\<^sub>S = read_regS CNTPS_CVAL_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTPS_CVAL_EL1[liftState_simp]:
  "\<lbrakk>write_reg CNTPS_CVAL_EL1_ref v\<rbrakk>\<^sub>S = write_regS CNTPS_CVAL_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTPS_CTL_EL1[liftState_simp]:
  "\<lbrakk>read_reg CNTPS_CTL_EL1_ref\<rbrakk>\<^sub>S = read_regS CNTPS_CTL_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTPS_CTL_EL1[liftState_simp]:
  "\<lbrakk>write_reg CNTPS_CTL_EL1_ref v\<rbrakk>\<^sub>S = write_regS CNTPS_CTL_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHV_CVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHV_CVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHV_CVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHV_CVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHV_CVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHV_CVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHV_CTL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHV_CTL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHV_CTL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHV_CTL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHV_CTL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHV_CTL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHVS_CVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHVS_CVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHVS_CVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHVS_CVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHVS_CVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHVS_CVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHVS_CTL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHVS_CTL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHVS_CTL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHVS_CTL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHVS_CTL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHVS_CTL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHPS_CVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHPS_CVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHPS_CVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHPS_CVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHPS_CVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHPS_CVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHPS_CTL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHPS_CTL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHPS_CTL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHPS_CTL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHPS_CTL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHPS_CTL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTV_CVAL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTV_CVAL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTV_CVAL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTV_CVAL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTV_CVAL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTV_CVAL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTV_CTL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTV_CTL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTV_CTL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTV_CTL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTV_CTL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTV_CTL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CVAL_S[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CVAL_S_ref\<rbrakk>\<^sub>S = read_regS CNTP_CVAL_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CVAL_S[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CVAL_S_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CVAL_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CVAL_NS[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CVAL_NS_ref\<rbrakk>\<^sub>S = read_regS CNTP_CVAL_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CVAL_NS[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CVAL_NS_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CVAL_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CVAL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CVAL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTP_CVAL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CVAL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CVAL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CVAL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CTL_S[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CTL_S_ref\<rbrakk>\<^sub>S = read_regS CNTP_CTL_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CTL_S[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CTL_S_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CTL_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CTL_NS[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CTL_NS_ref\<rbrakk>\<^sub>S = read_regS CNTP_CTL_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CTL_NS[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CTL_NS_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CTL_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTP_CTL_EL0[liftState_simp]:
  "\<lbrakk>read_reg CNTP_CTL_EL0_ref\<rbrakk>\<^sub>S = read_regS CNTP_CTL_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTP_CTL_EL0[liftState_simp]:
  "\<lbrakk>write_reg CNTP_CTL_EL0_ref v\<rbrakk>\<^sub>S = write_regS CNTP_CTL_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHP_CVAL[liftState_simp]:
  "\<lbrakk>read_reg CNTHP_CVAL_ref\<rbrakk>\<^sub>S = read_regS CNTHP_CVAL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHP_CVAL[liftState_simp]:
  "\<lbrakk>write_reg CNTHP_CVAL_ref v\<rbrakk>\<^sub>S = write_regS CNTHP_CVAL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHP_CVAL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHP_CVAL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHP_CVAL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHP_CVAL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHP_CVAL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHP_CVAL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHP_CTL[liftState_simp]:
  "\<lbrakk>read_reg CNTHP_CTL_ref\<rbrakk>\<^sub>S = read_regS CNTHP_CTL_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHP_CTL[liftState_simp]:
  "\<lbrakk>write_reg CNTHP_CTL_ref v\<rbrakk>\<^sub>S = write_regS CNTHP_CTL_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHP_CTL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHP_CTL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHP_CTL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHP_CTL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHP_CTL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHP_CTL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPEXC[liftState_simp]:
  "\<lbrakk>read_reg FPEXC_ref\<rbrakk>\<^sub>S = read_regS FPEXC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPEXC[liftState_simp]:
  "\<lbrakk>write_reg FPEXC_ref v\<rbrakk>\<^sub>S = write_regS FPEXC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPEXC32_EL2[liftState_simp]:
  "\<lbrakk>read_reg FPEXC32_EL2_ref\<rbrakk>\<^sub>S = read_regS FPEXC32_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPEXC32_EL2[liftState_simp]:
  "\<lbrakk>write_reg FPEXC32_EL2_ref v\<rbrakk>\<^sub>S = write_regS FPEXC32_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR2_EL2[liftState_simp]:
  "\<lbrakk>read_reg SCTLR2_EL2_ref\<rbrakk>\<^sub>S = read_regS SCTLR2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR2_EL2[liftState_simp]:
  "\<lbrakk>write_reg SCTLR2_EL2_ref v\<rbrakk>\<^sub>S = write_regS SCTLR2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR2_EL1[liftState_simp]:
  "\<lbrakk>read_reg SCTLR2_EL1_ref\<rbrakk>\<^sub>S = read_regS SCTLR2_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR2_EL1[liftState_simp]:
  "\<lbrakk>write_reg SCTLR2_EL1_ref v\<rbrakk>\<^sub>S = write_regS SCTLR2_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IFAR_S[liftState_simp]:
  "\<lbrakk>read_reg IFAR_S_ref\<rbrakk>\<^sub>S = read_regS IFAR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IFAR_S[liftState_simp]:
  "\<lbrakk>write_reg IFAR_S_ref v\<rbrakk>\<^sub>S = write_regS IFAR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IFAR_NS[liftState_simp]:
  "\<lbrakk>read_reg IFAR_NS_ref\<rbrakk>\<^sub>S = read_regS IFAR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IFAR_NS[liftState_simp]:
  "\<lbrakk>write_reg IFAR_NS_ref v\<rbrakk>\<^sub>S = write_regS IFAR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HCR2[liftState_simp]:
  "\<lbrakk>read_reg HCR2_ref\<rbrakk>\<^sub>S = read_regS HCR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HCR2[liftState_simp]:
  "\<lbrakk>write_reg HCR2_ref v\<rbrakk>\<^sub>S = write_regS HCR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDSCRext[liftState_simp]:
  "\<lbrakk>read_reg DBGDSCRext_ref\<rbrakk>\<^sub>S = read_regS DBGDSCRext_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDSCRext[liftState_simp]:
  "\<lbrakk>write_reg DBGDSCRext_ref v\<rbrakk>\<^sub>S = write_regS DBGDSCRext_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGDSCRint[liftState_simp]:
  "\<lbrakk>read_reg DBGDSCRint_ref\<rbrakk>\<^sub>S = read_regS DBGDSCRint_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGDSCRint[liftState_simp]:
  "\<lbrakk>write_reg DBGDSCRint_ref v\<rbrakk>\<^sub>S = write_regS DBGDSCRint_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IFSR_S[liftState_simp]:
  "\<lbrakk>read_reg IFSR_S_ref\<rbrakk>\<^sub>S = read_regS IFSR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IFSR_S[liftState_simp]:
  "\<lbrakk>write_reg IFSR_S_ref v\<rbrakk>\<^sub>S = write_regS IFSR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IFSR_NS[liftState_simp]:
  "\<lbrakk>read_reg IFSR_NS_ref\<rbrakk>\<^sub>S = read_regS IFSR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IFSR_NS[liftState_simp]:
  "\<lbrakk>write_reg IFSR_NS_ref v\<rbrakk>\<^sub>S = write_regS IFSR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IFSR32_EL2[liftState_simp]:
  "\<lbrakk>read_reg IFSR32_EL2_ref\<rbrakk>\<^sub>S = read_regS IFSR32_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IFSR32_EL2[liftState_simp]:
  "\<lbrakk>write_reg IFSR32_EL2_ref v\<rbrakk>\<^sub>S = write_regS IFSR32_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DFSR_S[liftState_simp]:
  "\<lbrakk>read_reg DFSR_S_ref\<rbrakk>\<^sub>S = read_regS DFSR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DFSR_S[liftState_simp]:
  "\<lbrakk>write_reg DFSR_S_ref v\<rbrakk>\<^sub>S = write_regS DFSR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DFSR_NS[liftState_simp]:
  "\<lbrakk>read_reg DFSR_NS_ref\<rbrakk>\<^sub>S = read_regS DFSR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DFSR_NS[liftState_simp]:
  "\<lbrakk>write_reg DFSR_NS_ref v\<rbrakk>\<^sub>S = write_regS DFSR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DFAR_S[liftState_simp]:
  "\<lbrakk>read_reg DFAR_S_ref\<rbrakk>\<^sub>S = read_regS DFAR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DFAR_S[liftState_simp]:
  "\<lbrakk>write_reg DFAR_S_ref v\<rbrakk>\<^sub>S = write_regS DFAR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DFAR_NS[liftState_simp]:
  "\<lbrakk>read_reg DFAR_NS_ref\<rbrakk>\<^sub>S = read_regS DFAR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DFAR_NS[liftState_simp]:
  "\<lbrakk>write_reg DFAR_NS_ref v\<rbrakk>\<^sub>S = write_regS DFAR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MVBAR[liftState_simp]:
  "\<lbrakk>read_reg MVBAR_ref\<rbrakk>\<^sub>S = read_regS MVBAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MVBAR[liftState_simp]:
  "\<lbrakk>write_reg MVBAR_ref v\<rbrakk>\<^sub>S = write_regS MVBAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HVBAR[liftState_simp]:
  "\<lbrakk>read_reg HVBAR_ref\<rbrakk>\<^sub>S = read_regS HVBAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HVBAR[liftState_simp]:
  "\<lbrakk>write_reg HVBAR_ref v\<rbrakk>\<^sub>S = write_regS HVBAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ELR_hyp[liftState_simp]:
  "\<lbrakk>read_reg ELR_hyp_ref\<rbrakk>\<^sub>S = read_regS ELR_hyp_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ELR_hyp[liftState_simp]:
  "\<lbrakk>write_reg ELR_hyp_ref v\<rbrakk>\<^sub>S = write_regS ELR_hyp_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HSR[liftState_simp]:
  "\<lbrakk>read_reg HSR_ref\<rbrakk>\<^sub>S = read_regS HSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HSR[liftState_simp]:
  "\<lbrakk>write_reg HSR_ref v\<rbrakk>\<^sub>S = write_regS HSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HPFAR[liftState_simp]:
  "\<lbrakk>read_reg HPFAR_ref\<rbrakk>\<^sub>S = read_regS HPFAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HPFAR[liftState_simp]:
  "\<lbrakk>write_reg HPFAR_ref v\<rbrakk>\<^sub>S = write_regS HPFAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HIFAR[liftState_simp]:
  "\<lbrakk>read_reg HIFAR_ref\<rbrakk>\<^sub>S = read_regS HIFAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HIFAR[liftState_simp]:
  "\<lbrakk>write_reg HIFAR_ref v\<rbrakk>\<^sub>S = write_regS HIFAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDFAR[liftState_simp]:
  "\<lbrakk>read_reg HDFAR_ref\<rbrakk>\<^sub>S = read_regS HDFAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDFAR[liftState_simp]:
  "\<lbrakk>write_reg HDFAR_ref v\<rbrakk>\<^sub>S = write_regS HDFAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR1_EL2[liftState_simp]:
  "\<lbrakk>read_reg TTBR1_EL2_ref\<rbrakk>\<^sub>S = read_regS TTBR1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR1_EL2[liftState_simp]:
  "\<lbrakk>write_reg TTBR1_EL2_ref v\<rbrakk>\<^sub>S = write_regS TTBR1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR1_EL1[liftState_simp]:
  "\<lbrakk>read_reg TTBR1_EL1_ref\<rbrakk>\<^sub>S = read_regS TTBR1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR1_EL1[liftState_simp]:
  "\<lbrakk>write_reg TTBR1_EL1_ref v\<rbrakk>\<^sub>S = write_regS TTBR1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR1_S[liftState_simp]:
  "\<lbrakk>read_reg TTBR1_S_ref\<rbrakk>\<^sub>S = read_regS TTBR1_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR1_S[liftState_simp]:
  "\<lbrakk>write_reg TTBR1_S_ref v\<rbrakk>\<^sub>S = write_regS TTBR1_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR1_NS[liftState_simp]:
  "\<lbrakk>read_reg TTBR1_NS_ref\<rbrakk>\<^sub>S = read_regS TTBR1_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR1_NS[liftState_simp]:
  "\<lbrakk>write_reg TTBR1_NS_ref v\<rbrakk>\<^sub>S = write_regS TTBR1_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR0_EL2[liftState_simp]:
  "\<lbrakk>read_reg TTBR0_EL2_ref\<rbrakk>\<^sub>S = read_regS TTBR0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR0_EL2[liftState_simp]:
  "\<lbrakk>write_reg TTBR0_EL2_ref v\<rbrakk>\<^sub>S = write_regS TTBR0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HTTBR[liftState_simp]:
  "\<lbrakk>read_reg HTTBR_ref\<rbrakk>\<^sub>S = read_regS HTTBR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HTTBR[liftState_simp]:
  "\<lbrakk>write_reg HTTBR_ref v\<rbrakk>\<^sub>S = write_regS HTTBR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg TTBR0_EL1_ref\<rbrakk>\<^sub>S = read_regS TTBR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg TTBR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS TTBR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR0_S[liftState_simp]:
  "\<lbrakk>read_reg TTBR0_S_ref\<rbrakk>\<^sub>S = read_regS TTBR0_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR0_S[liftState_simp]:
  "\<lbrakk>write_reg TTBR0_S_ref v\<rbrakk>\<^sub>S = write_regS TTBR0_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBR0_NS[liftState_simp]:
  "\<lbrakk>read_reg TTBR0_NS_ref\<rbrakk>\<^sub>S = read_regS TTBR0_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBR0_NS[liftState_simp]:
  "\<lbrakk>write_reg TTBR0_NS_ref v\<rbrakk>\<^sub>S = write_regS TTBR0_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CONTEXTIDR_S[liftState_simp]:
  "\<lbrakk>read_reg CONTEXTIDR_S_ref\<rbrakk>\<^sub>S = read_regS CONTEXTIDR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CONTEXTIDR_S[liftState_simp]:
  "\<lbrakk>write_reg CONTEXTIDR_S_ref v\<rbrakk>\<^sub>S = write_regS CONTEXTIDR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CONTEXTIDR_NS[liftState_simp]:
  "\<lbrakk>read_reg CONTEXTIDR_NS_ref\<rbrakk>\<^sub>S = read_regS CONTEXTIDR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CONTEXTIDR_NS[liftState_simp]:
  "\<lbrakk>write_reg CONTEXTIDR_NS_ref v\<rbrakk>\<^sub>S = write_regS CONTEXTIDR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBCR_S[liftState_simp]:
  "\<lbrakk>read_reg TTBCR_S_ref\<rbrakk>\<^sub>S = read_regS TTBCR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBCR_S[liftState_simp]:
  "\<lbrakk>write_reg TTBCR_S_ref v\<rbrakk>\<^sub>S = write_regS TTBCR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TTBCR_NS[liftState_simp]:
  "\<lbrakk>read_reg TTBCR_NS_ref\<rbrakk>\<^sub>S = read_regS TTBCR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TTBCR_NS[liftState_simp]:
  "\<lbrakk>write_reg TTBCR_NS_ref v\<rbrakk>\<^sub>S = write_regS TTBCR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CONTEXTIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg CONTEXTIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS CONTEXTIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CONTEXTIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg CONTEXTIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS CONTEXTIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CLIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg CLIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS CLIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CLIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg CLIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS CLIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMSM_EL1[liftState_simp]:
  "\<lbrakk>read_reg MPAMSM_EL1_ref\<rbrakk>\<^sub>S = read_regS MPAMSM_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMSM_EL1[liftState_simp]:
  "\<lbrakk>write_reg MPAMSM_EL1_ref v\<rbrakk>\<^sub>S = write_regS MPAMSM_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAM0_EL1[liftState_simp]:
  "\<lbrakk>read_reg MPAM0_EL1_ref\<rbrakk>\<^sub>S = read_regS MPAM0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAM0_EL1[liftState_simp]:
  "\<lbrakk>write_reg MPAM0_EL1_ref v\<rbrakk>\<^sub>S = write_regS MPAM0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM7_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM7_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM7_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM7_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM7_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM7_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM6_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM6_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM6_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM6_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM6_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM6_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM5_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM5_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM5_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM5_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM5_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM5_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM4_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM4_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM4_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM4_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM4_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM4_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM3_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM3_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM3_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM3_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM3_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM3_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM2_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM2_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM2_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM2_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM1_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM1_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM1_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM1_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM1_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM1_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPMV_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPMV_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPMV_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPMV_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPMV_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPMV_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMVPM0_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMVPM0_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMVPM0_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMVPM0_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMVPM0_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMVPM0_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMHCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAMHCR_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAMHCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMHCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAMHCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAMHCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAMIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MPAMIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS MPAMIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAMIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MPAMIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MPAMIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAM1_EL1[liftState_simp]:
  "\<lbrakk>read_reg MPAM1_EL1_ref\<rbrakk>\<^sub>S = read_regS MPAM1_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAM1_EL1[liftState_simp]:
  "\<lbrakk>write_reg MPAM1_EL1_ref v\<rbrakk>\<^sub>S = write_regS MPAM1_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAM3_EL3[liftState_simp]:
  "\<lbrakk>read_reg MPAM3_EL3_ref\<rbrakk>\<^sub>S = read_regS MPAM3_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAM3_EL3[liftState_simp]:
  "\<lbrakk>write_reg MPAM3_EL3_ref v\<rbrakk>\<^sub>S = write_regS MPAM3_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MPAM2_EL2[liftState_simp]:
  "\<lbrakk>read_reg MPAM2_EL2_ref\<rbrakk>\<^sub>S = read_regS MPAM2_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MPAM2_EL2[liftState_simp]:
  "\<lbrakk>write_reg MPAM2_EL2_ref v\<rbrakk>\<^sub>S = write_regS MPAM2_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HCRX_EL2[liftState_simp]:
  "\<lbrakk>read_reg HCRX_EL2_ref\<rbrakk>\<^sub>S = read_regS HCRX_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HCRX_EL2[liftState_simp]:
  "\<lbrakk>write_reg HCRX_EL2_ref v\<rbrakk>\<^sub>S = write_regS HCRX_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSCRE0_EL1[liftState_simp]:
  "\<lbrakk>read_reg GCSCRE0_EL1_ref\<rbrakk>\<^sub>S = read_regS GCSCRE0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSCRE0_EL1[liftState_simp]:
  "\<lbrakk>write_reg GCSCRE0_EL1_ref v\<rbrakk>\<^sub>S = write_regS GCSCRE0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VBAR_S[liftState_simp]:
  "\<lbrakk>read_reg VBAR_S_ref\<rbrakk>\<^sub>S = read_regS VBAR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VBAR_S[liftState_simp]:
  "\<lbrakk>write_reg VBAR_S_ref v\<rbrakk>\<^sub>S = write_regS VBAR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VBAR_NS[liftState_simp]:
  "\<lbrakk>read_reg VBAR_NS_ref\<rbrakk>\<^sub>S = read_regS VBAR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VBAR_NS[liftState_simp]:
  "\<lbrakk>write_reg VBAR_NS_ref v\<rbrakk>\<^sub>S = write_regS VBAR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VBAR_EL3[liftState_simp]:
  "\<lbrakk>read_reg VBAR_EL3_ref\<rbrakk>\<^sub>S = read_regS VBAR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VBAR_EL3[liftState_simp]:
  "\<lbrakk>write_reg VBAR_EL3_ref v\<rbrakk>\<^sub>S = write_regS VBAR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VBAR_EL2[liftState_simp]:
  "\<lbrakk>read_reg VBAR_EL2_ref\<rbrakk>\<^sub>S = read_regS VBAR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VBAR_EL2[liftState_simp]:
  "\<lbrakk>write_reg VBAR_EL2_ref v\<rbrakk>\<^sub>S = write_regS VBAR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VBAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg VBAR_EL1_ref\<rbrakk>\<^sub>S = read_regS VBAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VBAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg VBAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS VBAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDESR[liftState_simp]:
  "\<lbrakk>read_reg EDESR_ref\<rbrakk>\<^sub>S = read_regS EDESR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDESR[liftState_simp]:
  "\<lbrakk>write_reg EDESR_ref v\<rbrakk>\<^sub>S = write_regS EDESR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDECCR[liftState_simp]:
  "\<lbrakk>read_reg EDECCR_ref\<rbrakk>\<^sub>S = read_regS EDECCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDECCR[liftState_simp]:
  "\<lbrakk>write_reg EDECCR_ref v\<rbrakk>\<^sub>S = write_regS EDECCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSECCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSECCR_EL1_ref\<rbrakk>\<^sub>S = read_regS OSECCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSECCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSECCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSECCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_und[liftState_simp]:
  "\<lbrakk>read_reg SPSR_und_ref\<rbrakk>\<^sub>S = read_regS SPSR_und_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_und[liftState_simp]:
  "\<lbrakk>write_reg SPSR_und_ref v\<rbrakk>\<^sub>S = write_regS SPSR_und_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_svc[liftState_simp]:
  "\<lbrakk>read_reg SPSR_svc_ref\<rbrakk>\<^sub>S = read_regS SPSR_svc_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_svc[liftState_simp]:
  "\<lbrakk>write_reg SPSR_svc_ref v\<rbrakk>\<^sub>S = write_regS SPSR_svc_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_mon[liftState_simp]:
  "\<lbrakk>read_reg SPSR_mon_ref\<rbrakk>\<^sub>S = read_regS SPSR_mon_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_mon[liftState_simp]:
  "\<lbrakk>write_reg SPSR_mon_ref v\<rbrakk>\<^sub>S = write_regS SPSR_mon_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_irq[liftState_simp]:
  "\<lbrakk>read_reg SPSR_irq_ref\<rbrakk>\<^sub>S = read_regS SPSR_irq_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_irq[liftState_simp]:
  "\<lbrakk>write_reg SPSR_irq_ref v\<rbrakk>\<^sub>S = write_regS SPSR_irq_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_hyp[liftState_simp]:
  "\<lbrakk>read_reg SPSR_hyp_ref\<rbrakk>\<^sub>S = read_regS SPSR_hyp_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_hyp[liftState_simp]:
  "\<lbrakk>write_reg SPSR_hyp_ref v\<rbrakk>\<^sub>S = write_regS SPSR_hyp_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_fiq[liftState_simp]:
  "\<lbrakk>read_reg SPSR_fiq_ref\<rbrakk>\<^sub>S = read_regS SPSR_fiq_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_fiq[liftState_simp]:
  "\<lbrakk>write_reg SPSR_fiq_ref v\<rbrakk>\<^sub>S = write_regS SPSR_fiq_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_abt[liftState_simp]:
  "\<lbrakk>read_reg SPSR_abt_ref\<rbrakk>\<^sub>S = read_regS SPSR_abt_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_abt[liftState_simp]:
  "\<lbrakk>write_reg SPSR_abt_ref v\<rbrakk>\<^sub>S = write_regS SPSR_abt_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_EL3[liftState_simp]:
  "\<lbrakk>read_reg SPSR_EL3_ref\<rbrakk>\<^sub>S = read_regS SPSR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_EL3[liftState_simp]:
  "\<lbrakk>write_reg SPSR_EL3_ref v\<rbrakk>\<^sub>S = write_regS SPSR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_EL2[liftState_simp]:
  "\<lbrakk>read_reg SPSR_EL2_ref\<rbrakk>\<^sub>S = read_regS SPSR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_EL2[liftState_simp]:
  "\<lbrakk>write_reg SPSR_EL2_ref v\<rbrakk>\<^sub>S = write_regS SPSR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg SPSR_EL1_ref\<rbrakk>\<^sub>S = read_regS SPSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg SPSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS SPSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ELR_EL3[liftState_simp]:
  "\<lbrakk>read_reg ELR_EL3_ref\<rbrakk>\<^sub>S = read_regS ELR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ELR_EL3[liftState_simp]:
  "\<lbrakk>write_reg ELR_EL3_ref v\<rbrakk>\<^sub>S = write_regS ELR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ELR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ELR_EL2_ref\<rbrakk>\<^sub>S = read_regS ELR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ELR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ELR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ELR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ELR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ELR_EL1_ref\<rbrakk>\<^sub>S = read_regS ELR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ELR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ELR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ELR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PFAR_EL2[liftState_simp]:
  "\<lbrakk>read_reg PFAR_EL2_ref\<rbrakk>\<^sub>S = read_regS PFAR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PFAR_EL2[liftState_simp]:
  "\<lbrakk>write_reg PFAR_EL2_ref v\<rbrakk>\<^sub>S = write_regS PFAR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PFAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PFAR_EL1_ref\<rbrakk>\<^sub>S = read_regS PFAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PFAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PFAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PFAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MFAR_EL3[liftState_simp]:
  "\<lbrakk>read_reg MFAR_EL3_ref\<rbrakk>\<^sub>S = read_regS MFAR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MFAR_EL3[liftState_simp]:
  "\<lbrakk>write_reg MFAR_EL3_ref v\<rbrakk>\<^sub>S = write_regS MFAR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HPFAR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HPFAR_EL2_ref\<rbrakk>\<^sub>S = read_regS HPFAR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HPFAR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HPFAR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HPFAR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FAR_EL3[liftState_simp]:
  "\<lbrakk>read_reg FAR_EL3_ref\<rbrakk>\<^sub>S = read_regS FAR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FAR_EL3[liftState_simp]:
  "\<lbrakk>write_reg FAR_EL3_ref v\<rbrakk>\<^sub>S = write_regS FAR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FAR_EL2[liftState_simp]:
  "\<lbrakk>read_reg FAR_EL2_ref\<rbrakk>\<^sub>S = read_regS FAR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FAR_EL2[liftState_simp]:
  "\<lbrakk>write_reg FAR_EL2_ref v\<rbrakk>\<^sub>S = write_regS FAR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FAR_EL1[liftState_simp]:
  "\<lbrakk>read_reg FAR_EL1_ref\<rbrakk>\<^sub>S = read_regS FAR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FAR_EL1[liftState_simp]:
  "\<lbrakk>write_reg FAR_EL1_ref v\<rbrakk>\<^sub>S = write_regS FAR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ESR_EL3[liftState_simp]:
  "\<lbrakk>read_reg ESR_EL3_ref\<rbrakk>\<^sub>S = read_regS ESR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ESR_EL3[liftState_simp]:
  "\<lbrakk>write_reg ESR_EL3_ref v\<rbrakk>\<^sub>S = write_regS ESR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ESR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ESR_EL2_ref\<rbrakk>\<^sub>S = read_regS ESR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ESR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ESR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ESR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ESR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ESR_EL1_ref\<rbrakk>\<^sub>S = read_regS ESR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ESR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ESR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ESR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR_S[liftState_simp]:
  "\<lbrakk>read_reg SCTLR_S_ref\<rbrakk>\<^sub>S = read_regS SCTLR_S_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR_S[liftState_simp]:
  "\<lbrakk>write_reg SCTLR_S_ref v\<rbrakk>\<^sub>S = write_regS SCTLR_S_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR_NS[liftState_simp]:
  "\<lbrakk>read_reg SCTLR_NS_ref\<rbrakk>\<^sub>S = read_regS SCTLR_NS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR_NS[liftState_simp]:
  "\<lbrakk>write_reg SCTLR_NS_ref v\<rbrakk>\<^sub>S = write_regS SCTLR_NS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR_EL3[liftState_simp]:
  "\<lbrakk>read_reg SCTLR_EL3_ref\<rbrakk>\<^sub>S = read_regS SCTLR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR_EL3[liftState_simp]:
  "\<lbrakk>write_reg SCTLR_EL3_ref v\<rbrakk>\<^sub>S = write_regS SCTLR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg SCTLR_EL1_ref\<rbrakk>\<^sub>S = read_regS SCTLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg SCTLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS SCTLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HSCTLR[liftState_simp]:
  "\<lbrakk>read_reg HSCTLR_ref\<rbrakk>\<^sub>S = read_regS HSCTLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HSCTLR[liftState_simp]:
  "\<lbrakk>write_reg HSCTLR_ref v\<rbrakk>\<^sub>S = write_regS HSCTLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCTLR_EL2[liftState_simp]:
  "\<lbrakk>read_reg SCTLR_EL2_ref\<rbrakk>\<^sub>S = read_regS SCTLR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCTLR_EL2[liftState_simp]:
  "\<lbrakk>write_reg SCTLR_EL2_ref v\<rbrakk>\<^sub>S = write_regS SCTLR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HCR[liftState_simp]:
  "\<lbrakk>read_reg HCR_ref\<rbrakk>\<^sub>S = read_regS HCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HCR[liftState_simp]:
  "\<lbrakk>write_reg HCR_ref v\<rbrakk>\<^sub>S = write_regS HCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGOSLSR[liftState_simp]:
  "\<lbrakk>read_reg DBGOSLSR_ref\<rbrakk>\<^sub>S = read_regS DBGOSLSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGOSLSR[liftState_simp]:
  "\<lbrakk>write_reg DBGOSLSR_ref v\<rbrakk>\<^sub>S = write_regS DBGOSLSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSLSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSLSR_EL1_ref\<rbrakk>\<^sub>S = read_regS OSLSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSLSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSLSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSLSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDSCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg MDSCR_EL1_ref\<rbrakk>\<^sub>S = read_regS MDSCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDSCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg MDSCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS MDSCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg GCSCR_EL3_ref\<rbrakk>\<^sub>S = read_regS GCSCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg GCSCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS GCSCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg GCSCR_EL2_ref\<rbrakk>\<^sub>S = read_regS GCSCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg GCSCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS GCSCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg GCSCR_EL1_ref\<rbrakk>\<^sub>S = read_regS GCSCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg GCSCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS GCSCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GIC_Pending[liftState_simp]:
  "\<lbrakk>read_reg GIC_Pending_ref\<rbrakk>\<^sub>S = read_regS GIC_Pending_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GIC_Pending[liftState_simp]:
  "\<lbrakk>write_reg GIC_Pending_ref v\<rbrakk>\<^sub>S = write_regS GIC_Pending_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GIC_Active[liftState_simp]:
  "\<lbrakk>read_reg GIC_Active_ref\<rbrakk>\<^sub>S = read_regS GIC_Active_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GIC_Active[liftState_simp]:
  "\<lbrakk>write_reg GIC_Active_ref v\<rbrakk>\<^sub>S = write_regS GIC_Active_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGPRCR[liftState_simp]:
  "\<lbrakk>read_reg DBGPRCR_ref\<rbrakk>\<^sub>S = read_regS DBGPRCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGPRCR[liftState_simp]:
  "\<lbrakk>write_reg DBGPRCR_ref v\<rbrakk>\<^sub>S = write_regS DBGPRCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGPRCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg DBGPRCR_EL1_ref\<rbrakk>\<^sub>S = read_regS DBGPRCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGPRCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg DBGPRCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS DBGPRCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGOSDLR[liftState_simp]:
  "\<lbrakk>read_reg DBGOSDLR_ref\<rbrakk>\<^sub>S = read_regS DBGOSDLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGOSDLR[liftState_simp]:
  "\<lbrakk>write_reg DBGOSDLR_ref v\<rbrakk>\<^sub>S = write_regS DBGOSDLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_OSDLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg OSDLR_EL1_ref\<rbrakk>\<^sub>S = read_regS OSDLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_OSDLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg OSDLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS OSDLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SP_EL3[liftState_simp]:
  "\<lbrakk>read_reg SP_EL3_ref\<rbrakk>\<^sub>S = read_regS SP_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SP_EL3[liftState_simp]:
  "\<lbrakk>write_reg SP_EL3_ref v\<rbrakk>\<^sub>S = write_regS SP_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SP_EL2[liftState_simp]:
  "\<lbrakk>read_reg SP_EL2_ref\<rbrakk>\<^sub>S = read_regS SP_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SP_EL2[liftState_simp]:
  "\<lbrakk>write_reg SP_EL2_ref v\<rbrakk>\<^sub>S = write_regS SP_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SP_EL1[liftState_simp]:
  "\<lbrakk>read_reg SP_EL1_ref\<rbrakk>\<^sub>S = read_regS SP_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SP_EL1[liftState_simp]:
  "\<lbrakk>write_reg SP_EL1_ref v\<rbrakk>\<^sub>S = write_regS SP_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SP_EL0[liftState_simp]:
  "\<lbrakk>read_reg SP_EL0_ref\<rbrakk>\<^sub>S = read_regS SP_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SP_EL0[liftState_simp]:
  "\<lbrakk>write_reg SP_EL0_ref v\<rbrakk>\<^sub>S = write_regS SP_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NSACR[liftState_simp]:
  "\<lbrakk>read_reg NSACR_ref\<rbrakk>\<^sub>S = read_regS NSACR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NSACR[liftState_simp]:
  "\<lbrakk>write_reg NSACR_ref v\<rbrakk>\<^sub>S = write_regS NSACR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HCPTR[liftState_simp]:
  "\<lbrakk>read_reg HCPTR_ref\<rbrakk>\<^sub>S = read_regS HCPTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HCPTR[liftState_simp]:
  "\<lbrakk>write_reg HCPTR_ref v\<rbrakk>\<^sub>S = write_regS HCPTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPACR[liftState_simp]:
  "\<lbrakk>read_reg CPACR_ref\<rbrakk>\<^sub>S = read_regS CPACR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPACR[liftState_simp]:
  "\<lbrakk>write_reg CPACR_ref v\<rbrakk>\<^sub>S = write_regS CPACR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPTR_EL3[liftState_simp]:
  "\<lbrakk>read_reg CPTR_EL3_ref\<rbrakk>\<^sub>S = read_regS CPTR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPTR_EL3[liftState_simp]:
  "\<lbrakk>write_reg CPTR_EL3_ref v\<rbrakk>\<^sub>S = write_regS CPTR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPTR_EL2[liftState_simp]:
  "\<lbrakk>read_reg CPTR_EL2_ref\<rbrakk>\<^sub>S = read_regS CPTR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPTR_EL2[liftState_simp]:
  "\<lbrakk>write_reg CPTR_EL2_ref v\<rbrakk>\<^sub>S = write_regS CPTR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CPACR_EL1[liftState_simp]:
  "\<lbrakk>read_reg CPACR_EL1_ref\<rbrakk>\<^sub>S = read_regS CPACR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CPACR_EL1[liftState_simp]:
  "\<lbrakk>write_reg CPACR_EL1_ref v\<rbrakk>\<^sub>S = write_regS CPACR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSPR_EL3[liftState_simp]:
  "\<lbrakk>read_reg GCSPR_EL3_ref\<rbrakk>\<^sub>S = read_regS GCSPR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSPR_EL3[liftState_simp]:
  "\<lbrakk>write_reg GCSPR_EL3_ref v\<rbrakk>\<^sub>S = write_regS GCSPR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSPR_EL2[liftState_simp]:
  "\<lbrakk>read_reg GCSPR_EL2_ref\<rbrakk>\<^sub>S = read_regS GCSPR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSPR_EL2[liftState_simp]:
  "\<lbrakk>write_reg GCSPR_EL2_ref v\<rbrakk>\<^sub>S = write_regS GCSPR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSPR_EL1[liftState_simp]:
  "\<lbrakk>read_reg GCSPR_EL1_ref\<rbrakk>\<^sub>S = read_regS GCSPR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSPR_EL1[liftState_simp]:
  "\<lbrakk>write_reg GCSPR_EL1_ref v\<rbrakk>\<^sub>S = write_regS GCSPR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_GCSPR_EL0[liftState_simp]:
  "\<lbrakk>read_reg GCSPR_EL0_ref\<rbrakk>\<^sub>S = read_regS GCSPR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_GCSPR_EL0[liftState_simp]:
  "\<lbrakk>write_reg GCSPR_EL0_ref v\<rbrakk>\<^sub>S = write_regS GCSPR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg SMCR_EL3_ref\<rbrakk>\<^sub>S = read_regS SMCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg SMCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS SMCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg SMCR_EL2_ref\<rbrakk>\<^sub>S = read_regS SMCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg SMCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS SMCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SMCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg SMCR_EL1_ref\<rbrakk>\<^sub>S = read_regS SMCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SMCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg SMCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS SMCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg ZCR_EL3_ref\<rbrakk>\<^sub>S = read_regS ZCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg ZCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS ZCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg ZCR_EL2_ref\<rbrakk>\<^sub>S = read_regS ZCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg ZCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS ZCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ZCR_EL1_ref\<rbrakk>\<^sub>S = read_regS ZCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ZCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ZCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMBSR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMBSR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMBSR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMBSR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMBSR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMBSR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMBLIMITR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMBLIMITR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMBLIMITR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMBLIMITR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMBLIMITR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMBLIMITR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg PMSCR_EL2_ref\<rbrakk>\<^sub>S = read_regS PMSCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg PMSCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS PMSCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSCR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleAddressValid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleAddressValid_ref\<rbrakk>\<^sub>S = read_regS SPESampleAddressValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleAddressValid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleAddressValid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleAddressValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleAddress[liftState_simp]:
  "\<lbrakk>read_reg SPESampleAddress_ref\<rbrakk>\<^sub>S = read_regS SPESampleAddress_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleAddress[liftState_simp]:
  "\<lbrakk>write_reg SPESampleAddress_ref v\<rbrakk>\<^sub>S = write_regS SPESampleAddress_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMSIDR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMSIDR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMSIDR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMSIDR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMSIDR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMSIDR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Records_TGT[liftState_simp]:
  "\<lbrakk>read_reg Records_TGT_ref\<rbrakk>\<^sub>S = read_regS Records_TGT_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Records_TGT[liftState_simp]:
  "\<lbrakk>write_reg Records_TGT_ref v\<rbrakk>\<^sub>S = write_regS Records_TGT_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Records_SRC[liftState_simp]:
  "\<lbrakk>read_reg Records_SRC_ref\<rbrakk>\<^sub>S = read_regS Records_SRC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Records_SRC[liftState_simp]:
  "\<lbrakk>write_reg Records_SRC_ref v\<rbrakk>\<^sub>S = write_regS Records_SRC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Records_INF[liftState_simp]:
  "\<lbrakk>read_reg Records_INF_ref\<rbrakk>\<^sub>S = read_regS Records_INF_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Records_INF[liftState_simp]:
  "\<lbrakk>write_reg Records_INF_ref v\<rbrakk>\<^sub>S = write_regS Records_INF_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBIDR0_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBIDR0_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBIDR0_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBIDR0_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBIDR0_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBIDR0_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg TCR_EL3_ref\<rbrakk>\<^sub>S = read_regS TCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg TCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS TCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg TCR_EL2_ref\<rbrakk>\<^sub>S = read_regS TCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg TCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS TCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg TCR_EL1_ref\<rbrakk>\<^sub>S = read_regS TCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg TCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS TCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DSPSR2[liftState_simp]:
  "\<lbrakk>read_reg DSPSR2_ref\<rbrakk>\<^sub>S = read_regS DSPSR2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DSPSR2[liftState_simp]:
  "\<lbrakk>write_reg DSPSR2_ref v\<rbrakk>\<^sub>S = write_regS DSPSR2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DSPSR[liftState_simp]:
  "\<lbrakk>read_reg DSPSR_ref\<rbrakk>\<^sub>S = read_regS DSPSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DSPSR[liftState_simp]:
  "\<lbrakk>write_reg DSPSR_ref v\<rbrakk>\<^sub>S = write_regS DSPSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DSPSR_EL0[liftState_simp]:
  "\<lbrakk>read_reg DSPSR_EL0_ref\<rbrakk>\<^sub>S = read_regS DSPSR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DSPSR_EL0[liftState_simp]:
  "\<lbrakk>write_reg DSPSR_EL0_ref v\<rbrakk>\<^sub>S = write_regS DSPSR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DLR[liftState_simp]:
  "\<lbrakk>read_reg DLR_ref\<rbrakk>\<^sub>S = read_regS DLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DLR[liftState_simp]:
  "\<lbrakk>write_reg DLR_ref v\<rbrakk>\<^sub>S = write_regS DLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DLR_EL0[liftState_simp]:
  "\<lbrakk>read_reg DLR_EL0_ref\<rbrakk>\<^sub>S = read_regS DLR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DLR_EL0[liftState_simp]:
  "\<lbrakk>write_reg DLR_EL0_ref v\<rbrakk>\<^sub>S = write_regS DLR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDECR[liftState_simp]:
  "\<lbrakk>read_reg EDECR_ref\<rbrakk>\<^sub>S = read_regS EDECR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDECR[liftState_simp]:
  "\<lbrakk>write_reg EDECR_ref v\<rbrakk>\<^sub>S = write_regS EDECR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_vpmr_max[liftState_simp]:
  "\<lbrakk>read_reg mpam_vpmr_max_ref\<rbrakk>\<^sub>S = read_regS mpam_vpmr_max_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_vpmr_max[liftState_simp]:
  "\<lbrakk>write_reg mpam_vpmr_max_ref v\<rbrakk>\<^sub>S = write_regS mpam_vpmr_max_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_pmg_max[liftState_simp]:
  "\<lbrakk>read_reg mpam_pmg_max_ref\<rbrakk>\<^sub>S = read_regS mpam_pmg_max_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_pmg_max[liftState_simp]:
  "\<lbrakk>write_reg mpam_pmg_max_ref v\<rbrakk>\<^sub>S = write_regS mpam_pmg_max_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_partid_max[liftState_simp]:
  "\<lbrakk>read_reg mpam_partid_max_ref\<rbrakk>\<^sub>S = read_regS mpam_partid_max_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_partid_max[liftState_simp]:
  "\<lbrakk>write_reg mpam_partid_max_ref v\<rbrakk>\<^sub>S = write_regS mpam_partid_max_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_has_hcr[liftState_simp]:
  "\<lbrakk>read_reg mpam_has_hcr_ref\<rbrakk>\<^sub>S = read_regS mpam_has_hcr_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_has_hcr[liftState_simp]:
  "\<lbrakk>write_reg mpam_has_hcr_ref v\<rbrakk>\<^sub>S = write_regS mpam_has_hcr_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_impdef_TG1[liftState_simp]:
  "\<lbrakk>read_reg impdef_TG1_ref\<rbrakk>\<^sub>S = read_regS impdef_TG1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_impdef_TG1[liftState_simp]:
  "\<lbrakk>write_reg impdef_TG1_ref v\<rbrakk>\<^sub>S = write_regS impdef_TG1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_impdef_TG0[liftState_simp]:
  "\<lbrakk>read_reg impdef_TG0_ref\<rbrakk>\<^sub>S = read_regS impdef_TG0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_impdef_TG0[liftState_simp]:
  "\<lbrakk>write_reg impdef_TG0_ref v\<rbrakk>\<^sub>S = write_regS impdef_TG0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CFG_RVBAR[liftState_simp]:
  "\<lbrakk>read_reg CFG_RVBAR_ref\<rbrakk>\<^sub>S = read_regS CFG_RVBAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CFG_RVBAR[liftState_simp]:
  "\<lbrakk>write_reg CFG_RVBAR_ref v\<rbrakk>\<^sub>S = write_regS CFG_RVBAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTHCTL_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTHCTL_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTHCTL_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTHCTL_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTHCTL_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTHCTL_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTVOFF_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTVOFF_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTVOFF_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTVOFF_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTVOFF_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTVOFF_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTPOFF_EL2[liftState_simp]:
  "\<lbrakk>read_reg CNTPOFF_EL2_ref\<rbrakk>\<^sub>S = read_regS CNTPOFF_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTPOFF_EL2[liftState_simp]:
  "\<lbrakk>write_reg CNTPOFF_EL2_ref v\<rbrakk>\<^sub>S = write_regS CNTPOFF_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBTS_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBTS_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBTS_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBTS_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBTS_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBTS_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBFCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBFCR_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBFCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBFCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBFCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBFCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg BRBCR_EL2_ref\<rbrakk>\<^sub>S = read_regS BRBCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg BRBCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS BRBCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BRBCR_EL1[liftState_simp]:
  "\<lbrakk>read_reg BRBCR_EL1_ref\<rbrakk>\<^sub>S = read_regS BRBCR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BRBCR_EL1[liftState_simp]:
  "\<lbrakk>write_reg BRBCR_EL1_ref v\<rbrakk>\<^sub>S = write_regS BRBCR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMOVSSET_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMOVSSET_EL0_ref\<rbrakk>\<^sub>S = read_regS PMOVSSET_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMOVSSET_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMOVSSET_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMOVSSET_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMICNTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMICNTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMICNTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMICNTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMICNTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMICNTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SDER[liftState_simp]:
  "\<lbrakk>read_reg SDER_ref\<rbrakk>\<^sub>S = read_regS SDER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SDER[liftState_simp]:
  "\<lbrakk>write_reg SDER_ref v\<rbrakk>\<^sub>S = write_regS SDER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SDER32_EL3[liftState_simp]:
  "\<lbrakk>read_reg SDER32_EL3_ref\<rbrakk>\<^sub>S = read_regS SDER32_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SDER32_EL3[liftState_simp]:
  "\<lbrakk>write_reg SDER32_EL3_ref v\<rbrakk>\<^sub>S = write_regS SDER32_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SDER32_EL2[liftState_simp]:
  "\<lbrakk>read_reg SDER32_EL2_ref\<rbrakk>\<^sub>S = read_regS SDER32_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SDER32_EL2[liftState_simp]:
  "\<lbrakk>write_reg SDER32_EL2_ref v\<rbrakk>\<^sub>S = write_regS SDER32_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SDCR[liftState_simp]:
  "\<lbrakk>read_reg SDCR_ref\<rbrakk>\<^sub>S = read_regS SDCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SDCR[liftState_simp]:
  "\<lbrakk>write_reg SDCR_ref v\<rbrakk>\<^sub>S = write_regS SDCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMICFILTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMICFILTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMICFILTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMICFILTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMICFILTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMICFILTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMEVTYPER[liftState_simp]:
  "\<lbrakk>read_reg PMEVTYPER_ref\<rbrakk>\<^sub>S = read_regS PMEVTYPER_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMEVTYPER[liftState_simp]:
  "\<lbrakk>write_reg PMEVTYPER_ref v\<rbrakk>\<^sub>S = write_regS PMEVTYPER_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMEVTYPER_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMEVTYPER_EL0_ref\<rbrakk>\<^sub>S = read_regS PMEVTYPER_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMEVTYPER_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMEVTYPER_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMEVTYPER_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCNTENSET[liftState_simp]:
  "\<lbrakk>read_reg PMCNTENSET_ref\<rbrakk>\<^sub>S = read_regS PMCNTENSET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCNTENSET[liftState_simp]:
  "\<lbrakk>write_reg PMCNTENSET_ref v\<rbrakk>\<^sub>S = write_regS PMCNTENSET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCNTENSET_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCNTENSET_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCNTENSET_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCNTENSET_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCNTENSET_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCNTENSET_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCCFILTR[liftState_simp]:
  "\<lbrakk>read_reg PMCCFILTR_ref\<rbrakk>\<^sub>S = read_regS PMCCFILTR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCCFILTR[liftState_simp]:
  "\<lbrakk>write_reg PMCCFILTR_ref v\<rbrakk>\<^sub>S = write_regS PMCCFILTR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCCFILTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCCFILTR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCCFILTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCCFILTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCCFILTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCCFILTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg MDCR_EL3_ref\<rbrakk>\<^sub>S = read_regS MDCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg MDCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS MDCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMOVSR[liftState_simp]:
  "\<lbrakk>read_reg PMOVSR_ref\<rbrakk>\<^sub>S = read_regS PMOVSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMOVSR[liftState_simp]:
  "\<lbrakk>write_reg PMOVSR_ref v\<rbrakk>\<^sub>S = write_regS PMOVSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMOVSCLR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMOVSCLR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMOVSCLR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMOVSCLR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMOVSCLR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMOVSCLR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMINTENCLR[liftState_simp]:
  "\<lbrakk>read_reg PMINTENCLR_ref\<rbrakk>\<^sub>S = read_regS PMINTENCLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMINTENCLR[liftState_simp]:
  "\<lbrakk>write_reg PMINTENCLR_ref v\<rbrakk>\<^sub>S = write_regS PMINTENCLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMINTENCLR_EL1[liftState_simp]:
  "\<lbrakk>read_reg PMINTENCLR_EL1_ref\<rbrakk>\<^sub>S = read_regS PMINTENCLR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMINTENCLR_EL1[liftState_simp]:
  "\<lbrakk>write_reg PMINTENCLR_EL1_ref v\<rbrakk>\<^sub>S = write_regS PMINTENCLR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCR[liftState_simp]:
  "\<lbrakk>read_reg PMCR_ref\<rbrakk>\<^sub>S = read_regS PMCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCR[liftState_simp]:
  "\<lbrakk>write_reg PMCR_ref v\<rbrakk>\<^sub>S = write_regS PMCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCNTENCLR[liftState_simp]:
  "\<lbrakk>read_reg PMCNTENCLR_ref\<rbrakk>\<^sub>S = read_regS PMCNTENCLR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCNTENCLR[liftState_simp]:
  "\<lbrakk>write_reg PMCNTENCLR_ref v\<rbrakk>\<^sub>S = write_regS PMCNTENCLR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMCNTENCLR_EL0[liftState_simp]:
  "\<lbrakk>read_reg PMCNTENCLR_EL0_ref\<rbrakk>\<^sub>S = read_regS PMCNTENCLR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMCNTENCLR_EL0[liftState_simp]:
  "\<lbrakk>write_reg PMCNTENCLR_EL0_ref v\<rbrakk>\<^sub>S = write_regS PMCNTENCLR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EDSCR[liftState_simp]:
  "\<lbrakk>read_reg EDSCR_ref\<rbrakk>\<^sub>S = read_regS EDSCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EDSCR[liftState_simp]:
  "\<lbrakk>write_reg EDSCR_ref v\<rbrakk>\<^sub>S = write_regS EDSCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDCCSR_EL0[liftState_simp]:
  "\<lbrakk>read_reg MDCCSR_EL0_ref\<rbrakk>\<^sub>S = read_regS MDCCSR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDCCSR_EL0[liftState_simp]:
  "\<lbrakk>write_reg MDCCSR_EL0_ref v\<rbrakk>\<^sub>S = write_regS MDCCSR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HDCR[liftState_simp]:
  "\<lbrakk>read_reg HDCR_ref\<rbrakk>\<^sub>S = read_regS HDCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HDCR[liftState_simp]:
  "\<lbrakk>write_reg HDCR_ref v\<rbrakk>\<^sub>S = write_regS HDCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_MDCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg MDCR_EL2_ref\<rbrakk>\<^sub>S = read_regS MDCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_MDCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg MDCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS MDCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_supported_pa_size[liftState_simp]:
  "\<lbrakk>read_reg supported_pa_size_ref\<rbrakk>\<^sub>S = read_regS supported_pa_size_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_supported_pa_size[liftState_simp]:
  "\<lbrakk>write_reg supported_pa_size_ref v\<rbrakk>\<^sub>S = write_regS supported_pa_size_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_max_implemented_sveveclen[liftState_simp]:
  "\<lbrakk>read_reg max_implemented_sveveclen_ref\<rbrakk>\<^sub>S = read_regS max_implemented_sveveclen_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_max_implemented_sveveclen[liftState_simp]:
  "\<lbrakk>write_reg max_implemented_sveveclen_ref v\<rbrakk>\<^sub>S = write_regS max_implemented_sveveclen_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_max_implemented_smeveclen[liftState_simp]:
  "\<lbrakk>read_reg max_implemented_smeveclen_ref\<rbrakk>\<^sub>S = read_regS max_implemented_smeveclen_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_max_implemented_smeveclen[liftState_simp]:
  "\<lbrakk>write_reg max_implemented_smeveclen_ref v\<rbrakk>\<^sub>S = write_regS max_implemented_smeveclen_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_has_sve_extended_bf16[liftState_simp]:
  "\<lbrakk>read_reg has_sve_extended_bf16_ref\<rbrakk>\<^sub>S = read_regS has_sve_extended_bf16_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_has_sve_extended_bf16[liftState_simp]:
  "\<lbrakk>write_reg has_sve_extended_bf16_ref v\<rbrakk>\<^sub>S = write_regS has_sve_extended_bf16_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_block_bbm_implemented[liftState_simp]:
  "\<lbrakk>read_reg block_bbm_implemented_ref\<rbrakk>\<^sub>S = read_regS block_bbm_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_block_bbm_implemented[liftState_simp]:
  "\<lbrakk>write_reg block_bbm_implemented_ref v\<rbrakk>\<^sub>S = write_regS block_bbm_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CTR_EL0[liftState_simp]:
  "\<lbrakk>read_reg CTR_EL0_ref\<rbrakk>\<^sub>S = read_regS CTR_EL0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CTR_EL0[liftState_simp]:
  "\<lbrakk>write_reg CTR_EL0_ref v\<rbrakk>\<^sub>S = write_regS CTR_EL0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ERRnFR[liftState_simp]:
  "\<lbrakk>read_reg ERRnFR_ref\<rbrakk>\<^sub>S = read_regS ERRnFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ERRnFR[liftState_simp]:
  "\<lbrakk>write_reg ERRnFR_ref v\<rbrakk>\<^sub>S = write_regS ERRnFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RVBAR[liftState_simp]:
  "\<lbrakk>read_reg RVBAR_ref\<rbrakk>\<^sub>S = read_regS RVBAR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RVBAR[liftState_simp]:
  "\<lbrakk>write_reg RVBAR_ref v\<rbrakk>\<^sub>S = write_regS RVBAR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPSCR[liftState_simp]:
  "\<lbrakk>read_reg FPSCR_ref\<rbrakk>\<^sub>S = read_regS FPSCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPSCR[liftState_simp]:
  "\<lbrakk>write_reg FPSCR_ref v\<rbrakk>\<^sub>S = write_regS FPSCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_sme_only[liftState_simp]:
  "\<lbrakk>read_reg sme_only_ref\<rbrakk>\<^sub>S = read_regS sme_only_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_sme_only[liftState_simp]:
  "\<lbrakk>write_reg sme_only_ref v\<rbrakk>\<^sub>S = write_regS sme_only_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_setg_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>read_reg setg_mops_option_a_supported_ref\<rbrakk>\<^sub>S = read_regS setg_mops_option_a_supported_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_setg_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>write_reg setg_mops_option_a_supported_ref v\<rbrakk>\<^sub>S = write_regS setg_mops_option_a_supported_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_set_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>read_reg set_mops_option_a_supported_ref\<rbrakk>\<^sub>S = read_regS set_mops_option_a_supported_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_set_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>write_reg set_mops_option_a_supported_ref v\<rbrakk>\<^sub>S = write_regS set_mops_option_a_supported_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mte_implemented[liftState_simp]:
  "\<lbrakk>read_reg mte_implemented_ref\<rbrakk>\<^sub>S = read_regS mte_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mte_implemented[liftState_simp]:
  "\<lbrakk>write_reg mte_implemented_ref v\<rbrakk>\<^sub>S = write_regS mte_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_major[liftState_simp]:
  "\<lbrakk>read_reg mpam_major_ref\<rbrakk>\<^sub>S = read_regS mpam_major_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_major[liftState_simp]:
  "\<lbrakk>write_reg mpam_major_ref v\<rbrakk>\<^sub>S = write_regS mpam_major_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_mpam_frac[liftState_simp]:
  "\<lbrakk>read_reg mpam_frac_ref\<rbrakk>\<^sub>S = read_regS mpam_frac_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_mpam_frac[liftState_simp]:
  "\<lbrakk>write_reg mpam_frac_ref v\<rbrakk>\<^sub>S = write_regS mpam_frac_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_isb_is_branch[liftState_simp]:
  "\<lbrakk>read_reg isb_is_branch_ref\<rbrakk>\<^sub>S = read_regS isb_is_branch_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_isb_is_branch[liftState_simp]:
  "\<lbrakk>write_reg isb_is_branch_ref v\<rbrakk>\<^sub>S = write_regS isb_is_branch_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_has_sme_priority_control[liftState_simp]:
  "\<lbrakk>read_reg has_sme_priority_control_ref\<rbrakk>\<^sub>S = read_regS has_sme_priority_control_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_has_sme_priority_control[liftState_simp]:
  "\<lbrakk>write_reg has_sme_priority_control_ref v\<rbrakk>\<^sub>S = write_regS has_sme_priority_control_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_feat_rpres[liftState_simp]:
  "\<lbrakk>read_reg feat_rpres_ref\<rbrakk>\<^sub>S = read_regS feat_rpres_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_feat_rpres[liftState_simp]:
  "\<lbrakk>write_reg feat_rpres_ref v\<rbrakk>\<^sub>S = write_regS feat_rpres_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_empam_tidr_implemented[liftState_simp]:
  "\<lbrakk>read_reg empam_tidr_implemented_ref\<rbrakk>\<^sub>S = read_regS empam_tidr_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_empam_tidr_implemented[liftState_simp]:
  "\<lbrakk>write_reg empam_tidr_implemented_ref v\<rbrakk>\<^sub>S = write_regS empam_tidr_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_empam_sdeflt_implemented[liftState_simp]:
  "\<lbrakk>read_reg empam_sdeflt_implemented_ref\<rbrakk>\<^sub>S = read_regS empam_sdeflt_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_empam_sdeflt_implemented[liftState_simp]:
  "\<lbrakk>write_reg empam_sdeflt_implemented_ref v\<rbrakk>\<^sub>S = write_regS empam_sdeflt_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_empam_force_ns_implemented[liftState_simp]:
  "\<lbrakk>read_reg empam_force_ns_implemented_ref\<rbrakk>\<^sub>S = read_regS empam_force_ns_implemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_empam_force_ns_implemented[liftState_simp]:
  "\<lbrakk>write_reg empam_force_ns_implemented_ref v\<rbrakk>\<^sub>S = write_regS empam_force_ns_implemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_empam_force_ns_RAO[liftState_simp]:
  "\<lbrakk>read_reg empam_force_ns_RAO_ref\<rbrakk>\<^sub>S = read_regS empam_force_ns_RAO_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_empam_force_ns_RAO[liftState_simp]:
  "\<lbrakk>write_reg empam_force_ns_RAO_ref v\<rbrakk>\<^sub>S = write_regS empam_force_ns_RAO_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_cpyf_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>read_reg cpyf_mops_option_a_supported_ref\<rbrakk>\<^sub>S = read_regS cpyf_mops_option_a_supported_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_cpyf_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>write_reg cpyf_mops_option_a_supported_ref v\<rbrakk>\<^sub>S = write_regS cpyf_mops_option_a_supported_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_cpy_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>read_reg cpy_mops_option_a_supported_ref\<rbrakk>\<^sub>S = read_regS cpy_mops_option_a_supported_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_cpy_mops_option_a_supported[liftState_simp]:
  "\<lbrakk>write_reg cpy_mops_option_a_supported_ref v\<rbrakk>\<^sub>S = write_regS cpy_mops_option_a_supported_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_apply_effective_shareability[liftState_simp]:
  "\<lbrakk>read_reg apply_effective_shareability_ref\<rbrakk>\<^sub>S = read_regS apply_effective_shareability_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_apply_effective_shareability[liftState_simp]:
  "\<lbrakk>write_reg apply_effective_shareability_ref v\<rbrakk>\<^sub>S = write_regS apply_effective_shareability_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCR[liftState_simp]:
  "\<lbrakk>read_reg SCR_ref\<rbrakk>\<^sub>S = read_regS SCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCR[liftState_simp]:
  "\<lbrakk>write_reg SCR_ref v\<rbrakk>\<^sub>S = write_regS SCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SCR_EL3[liftState_simp]:
  "\<lbrakk>read_reg SCR_EL3_ref\<rbrakk>\<^sub>S = read_regS SCR_EL3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SCR_EL3[liftState_simp]:
  "\<lbrakk>write_reg SCR_EL3_ref v\<rbrakk>\<^sub>S = write_regS SCR_EL3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_HCR_EL2[liftState_simp]:
  "\<lbrakk>read_reg HCR_EL2_ref\<rbrakk>\<^sub>S = read_regS HCR_EL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_HCR_EL2[liftState_simp]:
  "\<lbrakk>write_reg HCR_EL2_ref v\<rbrakk>\<^sub>S = write_regS HCR_EL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Dclone[liftState_simp]:
  "\<lbrakk>read_reg Dclone_ref\<rbrakk>\<^sub>S = read_regS Dclone_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Dclone[liftState_simp]:
  "\<lbrakk>write_reg Dclone_ref v\<rbrakk>\<^sub>S = write_regS Dclone_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_LR_mon[liftState_simp]:
  "\<lbrakk>read_reg LR_mon_ref\<rbrakk>\<^sub>S = read_regS LR_mon_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_LR_mon[liftState_simp]:
  "\<lbrakk>write_reg LR_mon_ref v\<rbrakk>\<^sub>S = write_regS LR_mon_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SP_mon[liftState_simp]:
  "\<lbrakk>read_reg SP_mon_ref\<rbrakk>\<^sub>S = read_regS SP_mon_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SP_mon[liftState_simp]:
  "\<lbrakk>write_reg SP_mon_ref v\<rbrakk>\<^sub>S = write_regS SP_mon_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_sp_rel_access_pc[liftState_simp]:
  "\<lbrakk>read_reg sp_rel_access_pc_ref\<rbrakk>\<^sub>S = read_regS sp_rel_access_pc_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_sp_rel_access_pc[liftState_simp]:
  "\<lbrakk>write_reg sp_rel_access_pc_ref v\<rbrakk>\<^sub>S = write_regS sp_rel_access_pc_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DCACHE_CCSIDR_RESET[liftState_simp]:
  "\<lbrakk>read_reg DCACHE_CCSIDR_RESET_ref\<rbrakk>\<^sub>S = read_regS DCACHE_CCSIDR_RESET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DCACHE_CCSIDR_RESET[liftState_simp]:
  "\<lbrakk>write_reg DCACHE_CCSIDR_RESET_ref v\<rbrakk>\<^sub>S = write_regS DCACHE_CCSIDR_RESET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICACHE_CCSIDR_RESET[liftState_simp]:
  "\<lbrakk>read_reg ICACHE_CCSIDR_RESET_ref\<rbrakk>\<^sub>S = read_regS ICACHE_CCSIDR_RESET_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICACHE_CCSIDR_RESET[liftState_simp]:
  "\<lbrakk>write_reg ICACHE_CCSIDR_RESET_ref v\<rbrakk>\<^sub>S = write_regS ICACHE_CCSIDR_RESET_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_highest_el_aarch32[liftState_simp]:
  "\<lbrakk>read_reg highest_el_aarch32_ref\<rbrakk>\<^sub>S = read_regS highest_el_aarch32_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_highest_el_aarch32[liftState_simp]:
  "\<lbrakk>write_reg highest_el_aarch32_ref v\<rbrakk>\<^sub>S = write_regS highest_el_aarch32_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ExclusiveMonitorSet[liftState_simp]:
  "\<lbrakk>read_reg ExclusiveMonitorSet_ref\<rbrakk>\<^sub>S = read_regS ExclusiveMonitorSet_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ExclusiveMonitorSet[liftState_simp]:
  "\<lbrakk>write_reg ExclusiveMonitorSet_ref v\<rbrakk>\<^sub>S = write_regS ExclusiveMonitorSet_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BranchTaken[liftState_simp]:
  "\<lbrakk>read_reg BranchTaken_ref\<rbrakk>\<^sub>S = read_regS BranchTaken_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BranchTaken[liftState_simp]:
  "\<lbrakk>write_reg BranchTaken_ref v\<rbrakk>\<^sub>S = write_regS BranchTaken_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Branchtypetaken[liftState_simp]:
  "\<lbrakk>read_reg Branchtypetaken_ref\<rbrakk>\<^sub>S = read_regS Branchtypetaken_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Branchtypetaken[liftState_simp]:
  "\<lbrakk>write_reg Branchtypetaken_ref v\<rbrakk>\<^sub>S = write_regS Branchtypetaken_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_currentCond[liftState_simp]:
  "\<lbrakk>read_reg currentCond_ref\<rbrakk>\<^sub>S = read_regS currentCond_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_currentCond[liftState_simp]:
  "\<lbrakk>write_reg currentCond_ref v\<rbrakk>\<^sub>S = write_regS currentCond_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ThisInstrEnc[liftState_simp]:
  "\<lbrakk>read_reg ThisInstrEnc_ref\<rbrakk>\<^sub>S = read_regS ThisInstrEnc_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ThisInstrEnc[liftState_simp]:
  "\<lbrakk>write_reg ThisInstrEnc_ref v\<rbrakk>\<^sub>S = write_regS ThisInstrEnc_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ThisInstr[liftState_simp]:
  "\<lbrakk>read_reg ThisInstr_ref\<rbrakk>\<^sub>S = read_regS ThisInstr_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ThisInstr[liftState_simp]:
  "\<lbrakk>write_reg ThisInstr_ref v\<rbrakk>\<^sub>S = write_regS ThisInstr_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ETEBase[liftState_simp]:
  "\<lbrakk>read_reg ETEBase_ref\<rbrakk>\<^sub>S = read_regS ETEBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ETEBase[liftState_simp]:
  "\<lbrakk>write_reg ETEBase_ref v\<rbrakk>\<^sub>S = write_regS ETEBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VLPI_base[liftState_simp]:
  "\<lbrakk>read_reg VLPI_base_ref\<rbrakk>\<^sub>S = read_regS VLPI_base_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VLPI_base[liftState_simp]:
  "\<lbrakk>write_reg VLPI_base_ref v\<rbrakk>\<^sub>S = write_regS VLPI_base_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SGI_base[liftState_simp]:
  "\<lbrakk>read_reg SGI_base_ref\<rbrakk>\<^sub>S = read_regS SGI_base_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SGI_base[liftState_simp]:
  "\<lbrakk>write_reg SGI_base_ref v\<rbrakk>\<^sub>S = write_regS SGI_base_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RD_base[liftState_simp]:
  "\<lbrakk>read_reg RD_base_ref\<rbrakk>\<^sub>S = read_regS RD_base_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RD_base[liftState_simp]:
  "\<lbrakk>write_reg RD_base_ref v\<rbrakk>\<^sub>S = write_regS RD_base_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTCTLBase[liftState_simp]:
  "\<lbrakk>read_reg CNTCTLBase_ref\<rbrakk>\<^sub>S = read_regS CNTCTLBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTCTLBase[liftState_simp]:
  "\<lbrakk>write_reg CNTCTLBase_ref v\<rbrakk>\<^sub>S = write_regS CNTCTLBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTEL0BaseN[liftState_simp]:
  "\<lbrakk>read_reg CNTEL0BaseN_ref\<rbrakk>\<^sub>S = read_regS CNTEL0BaseN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTEL0BaseN[liftState_simp]:
  "\<lbrakk>write_reg CNTEL0BaseN_ref v\<rbrakk>\<^sub>S = write_regS CNTEL0BaseN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTBaseN[liftState_simp]:
  "\<lbrakk>read_reg CNTBaseN_ref\<rbrakk>\<^sub>S = read_regS CNTBaseN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTBaseN[liftState_simp]:
  "\<lbrakk>write_reg CNTBaseN_ref v\<rbrakk>\<^sub>S = write_regS CNTBaseN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CNTReadBase[liftState_simp]:
  "\<lbrakk>read_reg CNTReadBase_ref\<rbrakk>\<^sub>S = read_regS CNTReadBase_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CNTReadBase[liftState_simp]:
  "\<lbrakk>write_reg CNTReadBase_ref v\<rbrakk>\<^sub>S = write_regS CNTReadBase_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_InstructionStep[liftState_simp]:
  "\<lbrakk>read_reg InstructionStep_ref\<rbrakk>\<^sub>S = read_regS InstructionStep_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_InstructionStep[liftState_simp]:
  "\<lbrakk>write_reg InstructionStep_ref v\<rbrakk>\<^sub>S = write_regS InstructionStep_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RTPIDEN[liftState_simp]:
  "\<lbrakk>read_reg RTPIDEN_ref\<rbrakk>\<^sub>S = read_regS RTPIDEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RTPIDEN[liftState_simp]:
  "\<lbrakk>write_reg RTPIDEN_ref v\<rbrakk>\<^sub>S = write_regS RTPIDEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RLPIDEN[liftState_simp]:
  "\<lbrakk>read_reg RLPIDEN_ref\<rbrakk>\<^sub>S = read_regS RLPIDEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RLPIDEN[liftState_simp]:
  "\<lbrakk>write_reg RLPIDEN_ref v\<rbrakk>\<^sub>S = write_regS RLPIDEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPNIDEN[liftState_simp]:
  "\<lbrakk>read_reg SPNIDEN_ref\<rbrakk>\<^sub>S = read_regS SPNIDEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPNIDEN[liftState_simp]:
  "\<lbrakk>write_reg SPNIDEN_ref v\<rbrakk>\<^sub>S = write_regS SPNIDEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPIDEN[liftState_simp]:
  "\<lbrakk>read_reg SPIDEN_ref\<rbrakk>\<^sub>S = read_regS SPIDEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPIDEN[liftState_simp]:
  "\<lbrakk>write_reg SPIDEN_ref v\<rbrakk>\<^sub>S = write_regS SPIDEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NIDEN[liftState_simp]:
  "\<lbrakk>read_reg NIDEN_ref\<rbrakk>\<^sub>S = read_regS NIDEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NIDEN[liftState_simp]:
  "\<lbrakk>write_reg NIDEN_ref v\<rbrakk>\<^sub>S = write_regS NIDEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DBGEN[liftState_simp]:
  "\<lbrakk>read_reg DBGEN_ref\<rbrakk>\<^sub>S = read_regS DBGEN_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DBGEN[liftState_simp]:
  "\<lbrakk>write_reg DBGEN_ref v\<rbrakk>\<^sub>S = write_regS DBGEN_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_last_branch_valid[liftState_simp]:
  "\<lbrakk>read_reg last_branch_valid_ref\<rbrakk>\<^sub>S = read_regS last_branch_valid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_last_branch_valid[liftState_simp]:
  "\<lbrakk>write_reg last_branch_valid_ref v\<rbrakk>\<^sub>S = write_regS last_branch_valid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_last_cycle_count[liftState_simp]:
  "\<lbrakk>read_reg last_cycle_count_ref\<rbrakk>\<^sub>S = read_regS last_cycle_count_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_last_cycle_count[liftState_simp]:
  "\<lbrakk>write_reg last_cycle_count_ref v\<rbrakk>\<^sub>S = write_regS last_cycle_count_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPERecordSize[liftState_simp]:
  "\<lbrakk>read_reg SPERecordSize_ref\<rbrakk>\<^sub>S = read_regS SPERecordSize_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPERecordSize[liftState_simp]:
  "\<lbrakk>write_reg SPERecordSize_ref v\<rbrakk>\<^sub>S = write_regS SPERecordSize_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPE_LFSR_initialized[liftState_simp]:
  "\<lbrakk>read_reg SPE_LFSR_initialized_ref\<rbrakk>\<^sub>S = read_regS SPE_LFSR_initialized_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPE_LFSR_initialized[liftState_simp]:
  "\<lbrakk>write_reg SPE_LFSR_initialized_ref v\<rbrakk>\<^sub>S = write_regS SPE_LFSR_initialized_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPE_LFSR[liftState_simp]:
  "\<lbrakk>read_reg SPE_LFSR_ref\<rbrakk>\<^sub>S = read_regS SPE_LFSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPE_LFSR[liftState_simp]:
  "\<lbrakk>write_reg SPE_LFSR_ref v\<rbrakk>\<^sub>S = write_regS SPE_LFSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleEvents[liftState_simp]:
  "\<lbrakk>read_reg SPESampleEvents_ref\<rbrakk>\<^sub>S = read_regS SPESampleEvents_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleEvents[liftState_simp]:
  "\<lbrakk>write_reg SPESampleEvents_ref v\<rbrakk>\<^sub>S = write_regS SPESampleEvents_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleTimestampValid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleTimestampValid_ref\<rbrakk>\<^sub>S = read_regS SPESampleTimestampValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleTimestampValid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleTimestampValid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleTimestampValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleTimestamp[liftState_simp]:
  "\<lbrakk>read_reg SPESampleTimestamp_ref\<rbrakk>\<^sub>S = read_regS SPESampleTimestamp_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleTimestamp[liftState_simp]:
  "\<lbrakk>write_reg SPESampleTimestamp_ref v\<rbrakk>\<^sub>S = write_regS SPESampleTimestamp_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleSubclassValid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleSubclassValid_ref\<rbrakk>\<^sub>S = read_regS SPESampleSubclassValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleSubclassValid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleSubclassValid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleSubclassValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleSubclass[liftState_simp]:
  "\<lbrakk>read_reg SPESampleSubclass_ref\<rbrakk>\<^sub>S = read_regS SPESampleSubclass_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleSubclass[liftState_simp]:
  "\<lbrakk>write_reg SPESampleSubclass_ref v\<rbrakk>\<^sub>S = write_regS SPESampleSubclass_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleClass[liftState_simp]:
  "\<lbrakk>read_reg SPESampleClass_ref\<rbrakk>\<^sub>S = read_regS SPESampleClass_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleClass[liftState_simp]:
  "\<lbrakk>write_reg SPESampleClass_ref v\<rbrakk>\<^sub>S = write_regS SPESampleClass_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleOpType[liftState_simp]:
  "\<lbrakk>read_reg SPESampleOpType_ref\<rbrakk>\<^sub>S = read_regS SPESampleOpType_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleOpType[liftState_simp]:
  "\<lbrakk>write_reg SPESampleOpType_ref v\<rbrakk>\<^sub>S = write_regS SPESampleOpType_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleDataSourceValid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleDataSourceValid_ref\<rbrakk>\<^sub>S = read_regS SPESampleDataSourceValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleDataSourceValid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleDataSourceValid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleDataSourceValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleDataSource[liftState_simp]:
  "\<lbrakk>read_reg SPESampleDataSource_ref\<rbrakk>\<^sub>S = read_regS SPESampleDataSource_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleDataSource[liftState_simp]:
  "\<lbrakk>write_reg SPESampleDataSource_ref v\<rbrakk>\<^sub>S = write_regS SPESampleDataSource_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESamplePreviousBranchAddressValid[liftState_simp]:
  "\<lbrakk>read_reg SPESamplePreviousBranchAddressValid_ref\<rbrakk>\<^sub>S = read_regS SPESamplePreviousBranchAddressValid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESamplePreviousBranchAddressValid[liftState_simp]:
  "\<lbrakk>write_reg SPESamplePreviousBranchAddressValid_ref v\<rbrakk>\<^sub>S = write_regS SPESamplePreviousBranchAddressValid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESamplePreviousBranchAddress[liftState_simp]:
  "\<lbrakk>read_reg SPESamplePreviousBranchAddress_ref\<rbrakk>\<^sub>S = read_regS SPESamplePreviousBranchAddress_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESamplePreviousBranchAddress[liftState_simp]:
  "\<lbrakk>write_reg SPESamplePreviousBranchAddress_ref v\<rbrakk>\<^sub>S = write_regS SPESamplePreviousBranchAddress_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleInstIsNV2[liftState_simp]:
  "\<lbrakk>read_reg SPESampleInstIsNV2_ref\<rbrakk>\<^sub>S = read_regS SPESampleInstIsNV2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleInstIsNV2[liftState_simp]:
  "\<lbrakk>write_reg SPESampleInstIsNV2_ref v\<rbrakk>\<^sub>S = write_regS SPESampleInstIsNV2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleContextEL2Valid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleContextEL2Valid_ref\<rbrakk>\<^sub>S = read_regS SPESampleContextEL2Valid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleContextEL2Valid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleContextEL2Valid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleContextEL2Valid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleContextEL2[liftState_simp]:
  "\<lbrakk>read_reg SPESampleContextEL2_ref\<rbrakk>\<^sub>S = read_regS SPESampleContextEL2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleContextEL2[liftState_simp]:
  "\<lbrakk>write_reg SPESampleContextEL2_ref v\<rbrakk>\<^sub>S = write_regS SPESampleContextEL2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleContextEL1Valid[liftState_simp]:
  "\<lbrakk>read_reg SPESampleContextEL1Valid_ref\<rbrakk>\<^sub>S = read_regS SPESampleContextEL1Valid_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleContextEL1Valid[liftState_simp]:
  "\<lbrakk>write_reg SPESampleContextEL1Valid_ref v\<rbrakk>\<^sub>S = write_regS SPESampleContextEL1Valid_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleContextEL1[liftState_simp]:
  "\<lbrakk>read_reg SPESampleContextEL1_ref\<rbrakk>\<^sub>S = read_regS SPESampleContextEL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleContextEL1[liftState_simp]:
  "\<lbrakk>write_reg SPESampleContextEL1_ref v\<rbrakk>\<^sub>S = write_regS SPESampleContextEL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SPESampleInFlight[liftState_simp]:
  "\<lbrakk>read_reg SPESampleInFlight_ref\<rbrakk>\<^sub>S = read_regS SPESampleInFlight_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SPESampleInFlight[liftState_simp]:
  "\<lbrakk>write_reg SPESampleInFlight_ref v\<rbrakk>\<^sub>S = write_regS SPESampleInFlight_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_TSTATE[liftState_simp]:
  "\<lbrakk>read_reg TSTATE_ref\<rbrakk>\<^sub>S = read_regS TSTATE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_TSTATE[liftState_simp]:
  "\<lbrakk>write_reg TSTATE_ref v\<rbrakk>\<^sub>S = write_regS TSTATE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ICC_PMR_EL1[liftState_simp]:
  "\<lbrakk>read_reg ICC_PMR_EL1_ref\<rbrakk>\<^sub>S = read_regS ICC_PMR_EL1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ICC_PMR_EL1[liftState_simp]:
  "\<lbrakk>write_reg ICC_PMR_EL1_ref v\<rbrakk>\<^sub>S = write_regS ICC_PMR_EL1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPSR[liftState_simp]:
  "\<lbrakk>read_reg FPSR_ref\<rbrakk>\<^sub>S = read_regS FPSR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPSR[liftState_simp]:
  "\<lbrakk>write_reg FPSR_ref v\<rbrakk>\<^sub>S = write_regS FPSR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FPCR[liftState_simp]:
  "\<lbrakk>read_reg FPCR_ref\<rbrakk>\<^sub>S = read_regS FPCR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FPCR[liftState_simp]:
  "\<lbrakk>write_reg FPCR_ref v\<rbrakk>\<^sub>S = write_regS FPCR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZT0[liftState_simp]:
  "\<lbrakk>read_reg ZT0_ref\<rbrakk>\<^sub>S = read_regS ZT0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZT0[liftState_simp]:
  "\<lbrakk>write_reg ZT0_ref v\<rbrakk>\<^sub>S = write_regS ZT0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ZA[liftState_simp]:
  "\<lbrakk>read_reg ZA_ref\<rbrakk>\<^sub>S = read_regS ZA_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ZA[liftState_simp]:
  "\<lbrakk>write_reg ZA_ref v\<rbrakk>\<^sub>S = write_regS ZA_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FFR[liftState_simp]:
  "\<lbrakk>read_reg FFR_ref\<rbrakk>\<^sub>S = read_regS FFR_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FFR[liftState_simp]:
  "\<lbrakk>write_reg FFR_ref v\<rbrakk>\<^sub>S = write_regS FFR_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_P[liftState_simp]:
  "\<lbrakk>read_reg P_ref\<rbrakk>\<^sub>S = read_regS P_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_P[liftState_simp]:
  "\<lbrakk>write_reg P_ref v\<rbrakk>\<^sub>S = write_regS P_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_Z[liftState_simp]:
  "\<lbrakk>read_reg Z_ref\<rbrakk>\<^sub>S = read_regS Z_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_Z[liftState_simp]:
  "\<lbrakk>write_reg Z_ref v\<rbrakk>\<^sub>S = write_regS Z_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BTypeCompatible[liftState_simp]:
  "\<lbrakk>read_reg BTypeCompatible_ref\<rbrakk>\<^sub>S = read_regS BTypeCompatible_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BTypeCompatible[liftState_simp]:
  "\<lbrakk>write_reg BTypeCompatible_ref v\<rbrakk>\<^sub>S = write_regS BTypeCompatible_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_BTypeNext[liftState_simp]:
  "\<lbrakk>read_reg BTypeNext_ref\<rbrakk>\<^sub>S = read_regS BTypeNext_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_BTypeNext[liftState_simp]:
  "\<lbrakk>write_reg BTypeNext_ref v\<rbrakk>\<^sub>S = write_regS BTypeNext_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_InGuardedPage[liftState_simp]:
  "\<lbrakk>read_reg InGuardedPage_ref\<rbrakk>\<^sub>S = read_regS InGuardedPage_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_InGuardedPage[liftState_simp]:
  "\<lbrakk>write_reg InGuardedPage_ref v\<rbrakk>\<^sub>S = write_regS InGuardedPage_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_RC[liftState_simp]:
  "\<lbrakk>read_reg RC_ref\<rbrakk>\<^sub>S = read_regS RC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_RC[liftState_simp]:
  "\<lbrakk>write_reg RC_ref v\<rbrakk>\<^sub>S = write_regS RC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PhysicalCount[liftState_simp]:
  "\<lbrakk>read_reg PhysicalCount_ref\<rbrakk>\<^sub>S = read_regS PhysicalCount_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PhysicalCount[liftState_simp]:
  "\<lbrakk>write_reg PhysicalCount_ref v\<rbrakk>\<^sub>S = write_regS PhysicalCount_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PC[liftState_simp]:
  "\<lbrakk>read_reg PC_ref\<rbrakk>\<^sub>S = read_regS PC_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PC[liftState_simp]:
  "\<lbrakk>write_reg PC_ref v\<rbrakk>\<^sub>S = write_regS PC_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R30[liftState_simp]:
  "\<lbrakk>read_reg R30_ref\<rbrakk>\<^sub>S = read_regS R30_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R30[liftState_simp]:
  "\<lbrakk>write_reg R30_ref v\<rbrakk>\<^sub>S = write_regS R30_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R29[liftState_simp]:
  "\<lbrakk>read_reg R29_ref\<rbrakk>\<^sub>S = read_regS R29_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R29[liftState_simp]:
  "\<lbrakk>write_reg R29_ref v\<rbrakk>\<^sub>S = write_regS R29_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R28[liftState_simp]:
  "\<lbrakk>read_reg R28_ref\<rbrakk>\<^sub>S = read_regS R28_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R28[liftState_simp]:
  "\<lbrakk>write_reg R28_ref v\<rbrakk>\<^sub>S = write_regS R28_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R27[liftState_simp]:
  "\<lbrakk>read_reg R27_ref\<rbrakk>\<^sub>S = read_regS R27_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R27[liftState_simp]:
  "\<lbrakk>write_reg R27_ref v\<rbrakk>\<^sub>S = write_regS R27_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R26[liftState_simp]:
  "\<lbrakk>read_reg R26_ref\<rbrakk>\<^sub>S = read_regS R26_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R26[liftState_simp]:
  "\<lbrakk>write_reg R26_ref v\<rbrakk>\<^sub>S = write_regS R26_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R25[liftState_simp]:
  "\<lbrakk>read_reg R25_ref\<rbrakk>\<^sub>S = read_regS R25_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R25[liftState_simp]:
  "\<lbrakk>write_reg R25_ref v\<rbrakk>\<^sub>S = write_regS R25_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R24[liftState_simp]:
  "\<lbrakk>read_reg R24_ref\<rbrakk>\<^sub>S = read_regS R24_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R24[liftState_simp]:
  "\<lbrakk>write_reg R24_ref v\<rbrakk>\<^sub>S = write_regS R24_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R23[liftState_simp]:
  "\<lbrakk>read_reg R23_ref\<rbrakk>\<^sub>S = read_regS R23_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R23[liftState_simp]:
  "\<lbrakk>write_reg R23_ref v\<rbrakk>\<^sub>S = write_regS R23_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R22[liftState_simp]:
  "\<lbrakk>read_reg R22_ref\<rbrakk>\<^sub>S = read_regS R22_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R22[liftState_simp]:
  "\<lbrakk>write_reg R22_ref v\<rbrakk>\<^sub>S = write_regS R22_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R21[liftState_simp]:
  "\<lbrakk>read_reg R21_ref\<rbrakk>\<^sub>S = read_regS R21_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R21[liftState_simp]:
  "\<lbrakk>write_reg R21_ref v\<rbrakk>\<^sub>S = write_regS R21_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R20[liftState_simp]:
  "\<lbrakk>read_reg R20_ref\<rbrakk>\<^sub>S = read_regS R20_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R20[liftState_simp]:
  "\<lbrakk>write_reg R20_ref v\<rbrakk>\<^sub>S = write_regS R20_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R19[liftState_simp]:
  "\<lbrakk>read_reg R19_ref\<rbrakk>\<^sub>S = read_regS R19_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R19[liftState_simp]:
  "\<lbrakk>write_reg R19_ref v\<rbrakk>\<^sub>S = write_regS R19_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R18[liftState_simp]:
  "\<lbrakk>read_reg R18_ref\<rbrakk>\<^sub>S = read_regS R18_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R18[liftState_simp]:
  "\<lbrakk>write_reg R18_ref v\<rbrakk>\<^sub>S = write_regS R18_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R17[liftState_simp]:
  "\<lbrakk>read_reg R17_ref\<rbrakk>\<^sub>S = read_regS R17_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R17[liftState_simp]:
  "\<lbrakk>write_reg R17_ref v\<rbrakk>\<^sub>S = write_regS R17_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R16[liftState_simp]:
  "\<lbrakk>read_reg R16_ref\<rbrakk>\<^sub>S = read_regS R16_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R16[liftState_simp]:
  "\<lbrakk>write_reg R16_ref v\<rbrakk>\<^sub>S = write_regS R16_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R15[liftState_simp]:
  "\<lbrakk>read_reg R15_ref\<rbrakk>\<^sub>S = read_regS R15_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R15[liftState_simp]:
  "\<lbrakk>write_reg R15_ref v\<rbrakk>\<^sub>S = write_regS R15_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R14[liftState_simp]:
  "\<lbrakk>read_reg R14_ref\<rbrakk>\<^sub>S = read_regS R14_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R14[liftState_simp]:
  "\<lbrakk>write_reg R14_ref v\<rbrakk>\<^sub>S = write_regS R14_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R13[liftState_simp]:
  "\<lbrakk>read_reg R13_ref\<rbrakk>\<^sub>S = read_regS R13_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R13[liftState_simp]:
  "\<lbrakk>write_reg R13_ref v\<rbrakk>\<^sub>S = write_regS R13_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R12[liftState_simp]:
  "\<lbrakk>read_reg R12_ref\<rbrakk>\<^sub>S = read_regS R12_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R12[liftState_simp]:
  "\<lbrakk>write_reg R12_ref v\<rbrakk>\<^sub>S = write_regS R12_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R11[liftState_simp]:
  "\<lbrakk>read_reg R11_ref\<rbrakk>\<^sub>S = read_regS R11_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R11[liftState_simp]:
  "\<lbrakk>write_reg R11_ref v\<rbrakk>\<^sub>S = write_regS R11_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R10[liftState_simp]:
  "\<lbrakk>read_reg R10_ref\<rbrakk>\<^sub>S = read_regS R10_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R10[liftState_simp]:
  "\<lbrakk>write_reg R10_ref v\<rbrakk>\<^sub>S = write_regS R10_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R9[liftState_simp]:
  "\<lbrakk>read_reg R9_ref\<rbrakk>\<^sub>S = read_regS R9_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R9[liftState_simp]:
  "\<lbrakk>write_reg R9_ref v\<rbrakk>\<^sub>S = write_regS R9_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R8[liftState_simp]:
  "\<lbrakk>read_reg R8_ref\<rbrakk>\<^sub>S = read_regS R8_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R8[liftState_simp]:
  "\<lbrakk>write_reg R8_ref v\<rbrakk>\<^sub>S = write_regS R8_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R7[liftState_simp]:
  "\<lbrakk>read_reg R7_ref\<rbrakk>\<^sub>S = read_regS R7_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R7[liftState_simp]:
  "\<lbrakk>write_reg R7_ref v\<rbrakk>\<^sub>S = write_regS R7_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R6[liftState_simp]:
  "\<lbrakk>read_reg R6_ref\<rbrakk>\<^sub>S = read_regS R6_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R6[liftState_simp]:
  "\<lbrakk>write_reg R6_ref v\<rbrakk>\<^sub>S = write_regS R6_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R5[liftState_simp]:
  "\<lbrakk>read_reg R5_ref\<rbrakk>\<^sub>S = read_regS R5_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R5[liftState_simp]:
  "\<lbrakk>write_reg R5_ref v\<rbrakk>\<^sub>S = write_regS R5_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R4[liftState_simp]:
  "\<lbrakk>read_reg R4_ref\<rbrakk>\<^sub>S = read_regS R4_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R4[liftState_simp]:
  "\<lbrakk>write_reg R4_ref v\<rbrakk>\<^sub>S = write_regS R4_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R3[liftState_simp]:
  "\<lbrakk>read_reg R3_ref\<rbrakk>\<^sub>S = read_regS R3_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R3[liftState_simp]:
  "\<lbrakk>write_reg R3_ref v\<rbrakk>\<^sub>S = write_regS R3_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R2[liftState_simp]:
  "\<lbrakk>read_reg R2_ref\<rbrakk>\<^sub>S = read_regS R2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R2[liftState_simp]:
  "\<lbrakk>write_reg R2_ref v\<rbrakk>\<^sub>S = write_regS R2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R1[liftState_simp]:
  "\<lbrakk>read_reg R1_ref\<rbrakk>\<^sub>S = read_regS R1_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R1[liftState_simp]:
  "\<lbrakk>write_reg R1_ref v\<rbrakk>\<^sub>S = write_regS R1_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_R0[liftState_simp]:
  "\<lbrakk>read_reg R0_ref\<rbrakk>\<^sub>S = read_regS R0_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_R0[liftState_simp]:
  "\<lbrakk>write_reg R0_ref v\<rbrakk>\<^sub>S = write_regS R0_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_EventRegister[liftState_simp]:
  "\<lbrakk>read_reg EventRegister_ref\<rbrakk>\<^sub>S = read_regS EventRegister_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_EventRegister[liftState_simp]:
  "\<lbrakk>write_reg EventRegister_ref v\<rbrakk>\<^sub>S = write_regS EventRegister_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ShouldAdvanceSS[liftState_simp]:
  "\<lbrakk>read_reg ShouldAdvanceSS_ref\<rbrakk>\<^sub>S = read_regS ShouldAdvanceSS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ShouldAdvanceSS[liftState_simp]:
  "\<lbrakk>write_reg ShouldAdvanceSS_ref v\<rbrakk>\<^sub>S = write_regS ShouldAdvanceSS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ShouldAdvanceIT[liftState_simp]:
  "\<lbrakk>read_reg ShouldAdvanceIT_ref\<rbrakk>\<^sub>S = read_regS ShouldAdvanceIT_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ShouldAdvanceIT[liftState_simp]:
  "\<lbrakk>write_reg ShouldAdvanceIT_ref v\<rbrakk>\<^sub>S = write_regS ShouldAdvanceIT_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PSTATE[liftState_simp]:
  "\<lbrakk>read_reg PSTATE_ref\<rbrakk>\<^sub>S = read_regS PSTATE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PSTATE[liftState_simp]:
  "\<lbrakk>write_reg PSTATE_ref v\<rbrakk>\<^sub>S = write_regS PSTATE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_clock_divider[liftState_simp]:
  "\<lbrakk>read_reg clock_divider_ref\<rbrakk>\<^sub>S = read_regS clock_divider_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_clock_divider[liftState_simp]:
  "\<lbrakk>write_reg clock_divider_ref v\<rbrakk>\<^sub>S = write_regS clock_divider_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMULastThresholdValue[liftState_simp]:
  "\<lbrakk>read_reg PMULastThresholdValue_ref\<rbrakk>\<^sub>S = read_regS PMULastThresholdValue_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMULastThresholdValue[liftState_simp]:
  "\<lbrakk>write_reg PMULastThresholdValue_ref v\<rbrakk>\<^sub>S = write_regS PMULastThresholdValue_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_PMUEventAccumulator[liftState_simp]:
  "\<lbrakk>read_reg PMUEventAccumulator_ref\<rbrakk>\<^sub>S = read_regS PMUEventAccumulator_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_PMUEventAccumulator[liftState_simp]:
  "\<lbrakk>write_reg PMUEventAccumulator_ref v\<rbrakk>\<^sub>S = write_regS PMUEventAccumulator_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_DormantCtlReg[liftState_simp]:
  "\<lbrakk>read_reg DormantCtlReg_ref\<rbrakk>\<^sub>S = read_regS DormantCtlReg_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_DormantCtlReg[liftState_simp]:
  "\<lbrakk>write_reg DormantCtlReg_ref v\<rbrakk>\<^sub>S = write_regS DormantCtlReg_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_ConfigReg[liftState_simp]:
  "\<lbrakk>read_reg ConfigReg_ref\<rbrakk>\<^sub>S = read_regS ConfigReg_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_ConfigReg[liftState_simp]:
  "\<lbrakk>write_reg ConfigReg_ref v\<rbrakk>\<^sub>S = write_regS ConfigReg_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IsWFEsleep[liftState_simp]:
  "\<lbrakk>read_reg IsWFEsleep_ref\<rbrakk>\<^sub>S = read_regS IsWFEsleep_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IsWFEsleep[liftState_simp]:
  "\<lbrakk>write_reg IsWFEsleep_ref v\<rbrakk>\<^sub>S = write_regS IsWFEsleep_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_IsWFIsleep[liftState_simp]:
  "\<lbrakk>read_reg IsWFIsleep_ref\<rbrakk>\<^sub>S = read_regS IsWFIsleep_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_IsWFIsleep[liftState_simp]:
  "\<lbrakk>write_reg IsWFIsleep_ref v\<rbrakk>\<^sub>S = write_regS IsWFIsleep_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CP15SDISABLE2[liftState_simp]:
  "\<lbrakk>read_reg CP15SDISABLE2_ref\<rbrakk>\<^sub>S = read_regS CP15SDISABLE2_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CP15SDISABLE2[liftState_simp]:
  "\<lbrakk>write_reg CP15SDISABLE2_ref v\<rbrakk>\<^sub>S = write_regS CP15SDISABLE2_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_CP15SDISABLE[liftState_simp]:
  "\<lbrakk>read_reg CP15SDISABLE_ref\<rbrakk>\<^sub>S = read_regS CP15SDISABLE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_CP15SDISABLE[liftState_simp]:
  "\<lbrakk>write_reg CP15SDISABLE_ref v\<rbrakk>\<^sub>S = write_regS CP15SDISABLE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_cycle_count[liftState_simp]:
  "\<lbrakk>read_reg cycle_count_ref\<rbrakk>\<^sub>S = read_regS cycle_count_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_cycle_count[liftState_simp]:
  "\<lbrakk>write_reg cycle_count_ref v\<rbrakk>\<^sub>S = write_regS cycle_count_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_trcclaim_tags[liftState_simp]:
  "\<lbrakk>read_reg trcclaim_tags_ref\<rbrakk>\<^sub>S = read_regS trcclaim_tags_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_trcclaim_tags[liftState_simp]:
  "\<lbrakk>write_reg trcclaim_tags_ref v\<rbrakk>\<^sub>S = write_regS trcclaim_tags_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_WATCHPOINTS[liftState_simp]:
  "\<lbrakk>read_reg NUM_WATCHPOINTS_ref\<rbrakk>\<^sub>S = read_regS NUM_WATCHPOINTS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_WATCHPOINTS[liftState_simp]:
  "\<lbrakk>write_reg NUM_WATCHPOINTS_ref v\<rbrakk>\<^sub>S = write_regS NUM_WATCHPOINTS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_BREAKPOINTS[liftState_simp]:
  "\<lbrakk>read_reg NUM_BREAKPOINTS_ref\<rbrakk>\<^sub>S = read_regS NUM_BREAKPOINTS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_BREAKPOINTS[liftState_simp]:
  "\<lbrakk>write_reg NUM_BREAKPOINTS_ref v\<rbrakk>\<^sub>S = write_regS NUM_BREAKPOINTS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_GIC_LIST_REGS[liftState_simp]:
  "\<lbrakk>read_reg NUM_GIC_LIST_REGS_ref\<rbrakk>\<^sub>S = read_regS NUM_GIC_LIST_REGS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_GIC_LIST_REGS[liftState_simp]:
  "\<lbrakk>write_reg NUM_GIC_LIST_REGS_ref v\<rbrakk>\<^sub>S = write_regS NUM_GIC_LIST_REGS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_GIC_PRIORITY_BITS[liftState_simp]:
  "\<lbrakk>read_reg NUM_GIC_PRIORITY_BITS_ref\<rbrakk>\<^sub>S = read_regS NUM_GIC_PRIORITY_BITS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_GIC_PRIORITY_BITS[liftState_simp]:
  "\<lbrakk>write_reg NUM_GIC_PRIORITY_BITS_ref v\<rbrakk>\<^sub>S = write_regS NUM_GIC_PRIORITY_BITS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_GIC_PREEMPTION_BITS[liftState_simp]:
  "\<lbrakk>read_reg NUM_GIC_PREEMPTION_BITS_ref\<rbrakk>\<^sub>S = read_regS NUM_GIC_PREEMPTION_BITS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_GIC_PREEMPTION_BITS[liftState_simp]:
  "\<lbrakk>write_reg NUM_GIC_PREEMPTION_BITS_ref v\<rbrakk>\<^sub>S = write_regS NUM_GIC_PREEMPTION_BITS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_BRBE_RECORDS[liftState_simp]:
  "\<lbrakk>read_reg NUM_BRBE_RECORDS_ref\<rbrakk>\<^sub>S = read_regS NUM_BRBE_RECORDS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_BRBE_RECORDS[liftState_simp]:
  "\<lbrakk>write_reg NUM_BRBE_RECORDS_ref v\<rbrakk>\<^sub>S = write_regS NUM_BRBE_RECORDS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_PMU_COUNTERS[liftState_simp]:
  "\<lbrakk>read_reg NUM_PMU_COUNTERS_ref\<rbrakk>\<^sub>S = read_regS NUM_PMU_COUNTERS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_PMU_COUNTERS[liftState_simp]:
  "\<lbrakk>write_reg NUM_PMU_COUNTERS_ref v\<rbrakk>\<^sub>S = write_regS NUM_PMU_COUNTERS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_AMU_CG1_MONITORS[liftState_simp]:
  "\<lbrakk>read_reg NUM_AMU_CG1_MONITORS_ref\<rbrakk>\<^sub>S = read_regS NUM_AMU_CG1_MONITORS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_AMU_CG1_MONITORS[liftState_simp]:
  "\<lbrakk>write_reg NUM_AMU_CG1_MONITORS_ref v\<rbrakk>\<^sub>S = write_regS NUM_AMU_CG1_MONITORS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_AMU_CG0_MONITORS[liftState_simp]:
  "\<lbrakk>read_reg NUM_AMU_CG0_MONITORS_ref\<rbrakk>\<^sub>S = read_regS NUM_AMU_CG0_MONITORS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_AMU_CG0_MONITORS[liftState_simp]:
  "\<lbrakk>write_reg NUM_AMU_CG0_MONITORS_ref v\<rbrakk>\<^sub>S = write_regS NUM_AMU_CG0_MONITORS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_NUM_AMU_COUNTER_GROUPS[liftState_simp]:
  "\<lbrakk>read_reg NUM_AMU_COUNTER_GROUPS_ref\<rbrakk>\<^sub>S = read_regS NUM_AMU_COUNTER_GROUPS_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_NUM_AMU_COUNTER_GROUPS[liftState_simp]:
  "\<lbrakk>write_reg NUM_AMU_COUNTER_GROUPS_ref v\<rbrakk>\<^sub>S = write_regS NUM_AMU_COUNTER_GROUPS_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_VariantImplemented[liftState_simp]:
  "\<lbrakk>read_reg VariantImplemented_ref\<rbrakk>\<^sub>S = read_regS VariantImplemented_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_VariantImplemented[liftState_simp]:
  "\<lbrakk>write_reg VariantImplemented_ref v\<rbrakk>\<^sub>S = write_regS VariantImplemented_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FeatureImpl[liftState_simp]:
  "\<lbrakk>read_reg FeatureImpl_ref\<rbrakk>\<^sub>S = read_regS FeatureImpl_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FeatureImpl[liftState_simp]:
  "\<lbrakk>write_reg FeatureImpl_ref v\<rbrakk>\<^sub>S = write_regS FeatureImpl_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v9Ap4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v9Ap4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v9Ap4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v9Ap4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v9Ap4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v9Ap4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v9Ap3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v9Ap3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v9Ap3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v9Ap3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v9Ap3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v9Ap3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v9Ap2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v9Ap2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v9Ap2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v9Ap2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v9Ap2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v9Ap2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v9Ap1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v9Ap1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v9Ap1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v9Ap1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v9Ap1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v9Ap1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v9Ap0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v9Ap0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v9Ap0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v9Ap0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v9Ap0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v9Ap0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap9_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap9_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap9_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap9_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap8_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap8_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap8_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap8_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap7_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap7_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap7_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap7_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap7_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap7_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap6_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap6_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap6_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap6_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap6_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap6_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap5_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap5_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap5_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap5_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_v8Ap0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg v8Ap0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS v8Ap0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_v8Ap0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg v8Ap0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS v8Ap0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRBE_MPAM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRBE_MPAM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRBE_MPAM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRBE_MPAM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRBE_MPAM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRBE_MPAM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRBE_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRBE_EXT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRBE_EXT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRBE_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRBE_EXT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRBE_EXT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SYSREG128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SYSREG128_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SYSREG128_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SYSREG128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SYSREG128_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SYSREG128_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SYSINSTR128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SYSINSTR128_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SYSINSTR128_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SYSINSTR128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SYSINSTR128_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SYSINSTR128_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_B16B16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_B16B16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_B16B16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_B16B16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_B16B16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_B16B16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE2p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE2p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE2p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE2p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE2p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE2p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME_F16F16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME_F16F16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME_F16F16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME_F16F16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME_F16F16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME_F16F16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME2p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME2p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME2p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME2p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME2p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME2p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SEBEP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SEBEP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SEBEP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SEBEP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SEBEP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SEBEP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LVA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LVA3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LVA3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LVA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LVA3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LVA3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LSE128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LSE128_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LSE128_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LSE128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LSE128_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LSE128_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ITE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ITE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ITE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ITE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ITE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ITE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GCS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GCS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GCS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GCS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GCS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GCS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETEv1p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETEv1p3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETEv1p3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETEv1p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETEv1p3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETEv1p3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EBEP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EBEP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EBEP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EBEP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EBEP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EBEP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_D128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_D128_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_D128_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_D128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_D128_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_D128_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CHK_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CHK_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CHK_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CHK_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CHK_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CHK_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ABLE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ABLE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ABLE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ABLE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ABLE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ABLE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MEC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MEC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MEC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MEC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MEC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MEC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_BRBEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_BRBEv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_BRBEv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_BRBEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_BRBEv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_BRBEv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME_I16I64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME_I16I64_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME_I16I64_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME_I16I64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME_I16I64_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME_I16I64_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME_FA64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME_FA64_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME_FA64_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME_FA64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME_FA64_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME_FA64_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME_F64F64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME_F64F64_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME_F64F64_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME_F64F64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME_F64F64_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME_F64F64_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SME_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SME_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SME_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SME_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RME_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RME_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RME_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RME_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETEv1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETEv1p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETEv1p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETEv1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETEv1p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETEv1p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_BRBE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_BRBE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_BRBE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_BRBE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_BRBE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_BRBE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETEv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETEv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETEv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETEv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRBE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRBE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRBE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRBE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRBE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRBE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TME_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TME_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TME_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TME_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TME_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_SM4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_SM4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_SM4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_SM4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_SM4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_SM4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_SHA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_SHA3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_SHA3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_SHA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_SHA3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_SHA3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_PMULL128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_PMULL128_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_PMULL128_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_PMULL128_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_PMULL128_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_PMULL128_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_BitPerm_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_BitPerm_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_BitPerm_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_BitPerm_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_BitPerm_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_BitPerm_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_AES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_AES_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_AES_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_AES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_AES_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_AES_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DoPD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DoPD_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DoPD_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DoPD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DoPD_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DoPD_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_THE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_THE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_THE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_THE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_THE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_THE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPMU_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPMU_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPMU_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPMU_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPMU_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPMU_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPEv1p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPEv1p4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPEv1p4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPEv1p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPEv1p4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPEv1p4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPE_FDS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPE_FDS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPE_FDS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPE_FDS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPE_FDS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPE_FDS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPE_CRR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPE_CRR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPE_CRR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPE_CRR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPE_CRR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPE_CRR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPECRES2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPECRES2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPECRES2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPECRES2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPECRES2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPECRES2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_S2POE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_S2POE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_S2POE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_S2POE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_S2POE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_S2POE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_S2PIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_S2PIE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_S2PIE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_S2PIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_S2PIE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_S2PIE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_S1POE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_S1POE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_S1POE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_S1POE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_S1POE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_S1POE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_S1PIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_S1PIE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_S1PIE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_S1PIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_S1PIE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_S1PIE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RPRFM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RPRFM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RPRFM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RPRFM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RPRFM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RPRFM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RASv2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RASv2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RASv2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RASv2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RASv2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RASv2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RASSAv2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RASSAv2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RASSAv2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RASSAv2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RASSAv2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RASSAv2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PRFMSLC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PRFMSLC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PRFMSLC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PRFMSLC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PRFMSLC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PRFMSLC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p9_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p9_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p9_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p9_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_SS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_SS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_SS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_SS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_SS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_SS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_ICNTR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_ICNTR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_ICNTR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_ICNTR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_ICNTR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_ICNTR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_EDGE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_EDGE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_EDGE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_EDGE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_EDGE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_EDGE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PFAR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PFAR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PFAR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PFAR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PFAR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PFAR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PCSRv8p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PCSRv8p9_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PCSRv8p9_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PCSRv8p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PCSRv8p9_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PCSRv8p9_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_TAGGED_FAR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_TAGGED_FAR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_TAGGED_FAR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_TAGGED_FAR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_TAGGED_FAR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_TAGGED_FAR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_STORE_ONLY_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_STORE_ONLY_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_STORE_ONLY_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_STORE_ONLY_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_STORE_ONLY_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_STORE_ONLY_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_PERM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_PERM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_PERM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_PERM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_PERM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_PERM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_NO_ADDRESS_TAGS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_CANONICAL_TAGS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_ASYNC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_ASYNC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_ASYNC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_ASYNC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_ASYNC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_ASYNC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_ASYM_FAULT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_ASYM_FAULT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_ASYM_FAULT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_ASYM_FAULT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_ASYM_FAULT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_ASYM_FAULT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LRCPC3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LRCPC3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LRCPC3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LRCPC3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LRCPC3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LRCPC3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HAFT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HAFT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HAFT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HAFT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HAFT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HAFT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FGT2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FGT2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FGT2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FGT2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FGT2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FGT2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ECBHB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ECBHB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ECBHB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ECBHB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ECBHB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ECBHB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DoubleFault2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DoubleFault2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DoubleFault2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DoubleFault2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DoubleFault2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DoubleFault2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_Debugv8p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_Debugv8p9_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_Debugv8p9_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_Debugv8p9_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_Debugv8p9_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_Debugv8p9_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSSC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSSC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSSC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSSC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSSC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSSC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CLRBHB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CLRBHB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CLRBHB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CLRBHB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CLRBHB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CLRBHB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ANERR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ANERR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ANERR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ANERR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ANERR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ANERR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AIE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AIE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AIE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AIE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AIE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ADERR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ADERR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ADERR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ADERR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ADERR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ADERR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TIDCP1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TIDCP1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TIDCP1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TIDCP1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TIDCP1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TIDCP1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TCR2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TCR2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TCR2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TCR2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TCR2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TCR2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPEv1p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPEv1p3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPEv1p3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPEv1p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPEv1p3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPEv1p3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SCTLR2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SCTLR2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SCTLR2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SCTLR2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SCTLR2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SCTLR2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p8_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p8_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p8_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p8_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_TH_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_TH_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_TH_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_TH_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_TH_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_TH_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_EXT64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_EXT64_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_EXT64_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_EXT64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_EXT64_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_EXT64_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_NMI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_NMI_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_NMI_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_NMI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_NMI_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_NMI_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MOPS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MOPS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MOPS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MOPS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MOPS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MOPS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HBC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HBC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HBC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HBC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HBC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HBC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv3_NMI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv3_NMI_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv3_NMI_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv3_NMI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv3_NMI_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv3_NMI_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_Debugv8p8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_Debugv8p8_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_Debugv8p8_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_Debugv8p8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_Debugv8p8_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_Debugv8p8_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CMOW_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CMOW_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CMOW_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CMOW_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CMOW_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CMOW_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_XS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_XS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_XS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_XS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_XS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_XS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_WFxT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_WFxT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_WFxT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_WFxT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_WFxT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_WFxT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPEv1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPEv1p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPEv1p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPEv1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPEv1p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPEv1p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RPRES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RPRES_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RPRES_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RPRES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RPRES_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RPRES_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p7_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p7_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p7_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p7_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p7_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p7_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PAN3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PAN3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PAN3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PAN3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PAN3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PAN3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LS64_V_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LS64_V_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LS64_V_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LS64_V_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LS64_V_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LS64_V_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LS64_ACCDATA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LS64_ACCDATA_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LS64_ACCDATA_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LS64_ACCDATA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LS64_ACCDATA_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LS64_ACCDATA_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LS64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LS64_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LS64_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LS64_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LS64_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LS64_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LPA2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LPA2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LPA2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LPA2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LPA2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LPA2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HCX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HCX_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HCX_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HCX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HCX_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HCX_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EBF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EBF16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EBF16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EBF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EBF16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EBF16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AFP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AFP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AFP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AFP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AFP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AFP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TWED_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TWED_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TWED_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TWED_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TWED_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TWED_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PAuth2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PAuth2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PAuth2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PAuth2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PAuth2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PAuth2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTPMU_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTPMU_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTPMU_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTPMU_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTPMU_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTPMU_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MPAMv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MPAMv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MPAMv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MPAMv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MPAMv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MPAMv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MPAMv0p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MPAMv0p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MPAMv0p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MPAMv0p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MPAMv0p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MPAMv0p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HPMN0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HPMN0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HPMN0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HPMN0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HPMN0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HPMN0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FGT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FGT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FGT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FGT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FGT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FGT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ECV_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ECV_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ECV_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ECV_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ECV_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ECV_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DGH_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DGH_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DGH_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DGH_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DGH_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DGH_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_BF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_BF16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_BF16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_BF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_BF16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_BF16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AMUv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AMUv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AMUv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AMUv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AMUv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AMUv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SSBS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SSBS2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SSBS2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SSBS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SSBS2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SSBS2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SSBS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SSBS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SSBS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SSBS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SSBS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SSBS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPECRES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPECRES_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPECRES_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPECRES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPECRES_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPECRES_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RNG_TRAP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RNG_TRAP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RNG_TRAP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RNG_TRAP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RNG_TRAP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RNG_TRAP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RNG_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RNG_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RNG_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RNG_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RNG_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RNG_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p5_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p5_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p5_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p5_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MTE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MTE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MTE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MTE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MTE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MTE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GTG_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GTG_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GTG_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GTG_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GTG_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GTG_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FlagM2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FlagM2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FlagM2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FlagM2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FlagM2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FlagM2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FRINTTS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FRINTTS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FRINTTS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FRINTTS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FRINTTS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FRINTTS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ExS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ExS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ExS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ExS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ExS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ExS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EVT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EVT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EVT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EVT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EVT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EVT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_E0PD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_E0PD_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_E0PD_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_E0PD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_E0PD_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_E0PD_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DPB2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DPB2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DPB2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DPB2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DPB2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DPB2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_BTI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_BTI_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_BTI_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_BTI_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_BTI_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_BTI_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TTST_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TTST_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TTST_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TTST_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TTST_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TTST_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TTL_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TTL_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TTL_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TTL_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TTL_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TTL_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRF_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRF_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRF_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRF_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRF_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRF_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TLBIRANGE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TLBIRANGE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TLBIRANGE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TLBIRANGE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TLBIRANGE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TLBIRANGE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TLBIOS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TLBIOS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TLBIOS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TLBIOS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TLBIOS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TLBIOS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SEL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SEL2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SEL2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SEL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SEL2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SEL2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_S2FWB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_S2FWB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_S2FWB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_S2FWB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_S2FWB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_S2FWB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RASv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RASv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RASv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RASv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RASv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RASv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RASSAv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RASSAv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RASSAv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RASSAv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RASSAv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RASSAv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_NV2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_NV2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_NV2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_NV2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_NV2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_NV2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LSE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LSE2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LSE2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LSE2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LSE2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LSE2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LRCPC2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LRCPC2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LRCPC2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LRCPC2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LRCPC2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LRCPC2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_IDST_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_IDST_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_IDST_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_IDST_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_IDST_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_IDST_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FlagM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FlagM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FlagM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FlagM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FlagM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FlagM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FHM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FHM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FHM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FHM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FHM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FHM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DoubleFault_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DoubleFault_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DoubleFault_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DoubleFault_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DoubleFault_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DoubleFault_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DotProd_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DotProd_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DotProd_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DotProd_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DotProd_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DotProd_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_Debugv8p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_Debugv8p4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_Debugv8p4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_Debugv8p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_Debugv8p4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_Debugv8p4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DIT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DIT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DIT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DIT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DIT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DIT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CNTSC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CNTSC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CNTSC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CNTSC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CNTSC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CNTSC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_BBM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_BBM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_BBM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_BBM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_BBM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_BBM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AMUv1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AMUv1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AMUv1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AMUv1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AMUv1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AMUv1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPEv1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPEv1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPEv1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPEv1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPEv1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PAuth_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PAuth_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PAuth_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PAuth_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PAuth_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PAuth_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PACQARMA5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PACQARMA5_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PACQARMA5_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PACQARMA5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PACQARMA5_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PACQARMA5_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PACQARMA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PACQARMA3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PACQARMA3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PACQARMA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PACQARMA3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PACQARMA3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PACIMP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PACIMP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PACIMP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PACIMP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PACIMP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PACIMP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_NV_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_NV_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_NV_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_NV_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_NV_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_NV_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LRCPC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LRCPC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LRCPC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LRCPC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LRCPC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LRCPC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_JSCVT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_JSCVT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_JSCVT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_JSCVT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_JSCVT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_JSCVT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FPACCOMBINE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FPACCOMBINE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FPACCOMBINE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FPACCOMBINE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FPACCOMBINE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FPACCOMBINE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FPAC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FPAC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FPAC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FPAC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FPAC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FPAC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FCMA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FCMA_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FCMA_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FCMA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FCMA_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FCMA_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EPAC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EPAC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EPAC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EPAC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EPAC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EPAC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CONSTPACFIELD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CONSTPACFIELD_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CONSTPACFIELD_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CONSTPACFIELD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CONSTPACFIELD_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CONSTPACFIELD_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CCIDX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CCIDX_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CCIDX_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CCIDX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CCIDX_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CCIDX_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_XNX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_XNX_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_XNX_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_XNX_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_XNX_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_XNX_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_VPIPT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_VPIPT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_VPIPT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_VPIPT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_VPIPT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_VPIPT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_UAO_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_UAO_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_UAO_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_UAO_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_UAO_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_UAO_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TTCNP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TTCNP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TTCNP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TTCNP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TTCNP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TTCNP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SVE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SVE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SVE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SVE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SVE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SVE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SPE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SPE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SPE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SPE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SPE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SPE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SM4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SM4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SM4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SM4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SM4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SM4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SM3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SM3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SM3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SM3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SM3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SM3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SHA512_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SHA512_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SHA512_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SHA512_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SHA512_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SHA512_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SHA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SHA3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SHA3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SHA3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SHA3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SHA3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RAS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RAS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RAS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RAS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RAS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RAS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PCSRv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PCSRv8p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PCSRv8p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PCSRv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PCSRv8p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PCSRv8p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PAN2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PAN2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PAN2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PAN2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PAN2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PAN2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_MPAM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_MPAM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_MPAM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_MPAM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_MPAM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_MPAM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LVA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LVA_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LVA_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LVA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LVA_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LVA_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LSMAOC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LSMAOC_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LSMAOC_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LSMAOC_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LSMAOC_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LSMAOC_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LPA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LPA_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LPA_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LPA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LPA_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LPA_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_IESB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_IESB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_IESB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_IESB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_IESB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_IESB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_I8MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_I8MM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_I8MM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_I8MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_I8MM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_I8MM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HPDS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HPDS2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HPDS2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HPDS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HPDS2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HPDS2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FP16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FP16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FP16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FP16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FP16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FP16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_F64MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_F64MM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_F64MM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_F64MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_F64MM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_F64MM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_F32MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_F32MM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_F32MM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_F32MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_F32MM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_F32MM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EDHSR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EDHSR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EDHSR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EDHSR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EDHSR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EDHSR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_Debugv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_Debugv8p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_Debugv8p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_Debugv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_Debugv8p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_Debugv8p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DPB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DPB_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DPB_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DPB_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DPB_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DPB_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ASMv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ASMv8p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ASMv8p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ASMv8p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ASMv8p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ASMv8p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32I8MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32I8MM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32I8MM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32I8MM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32I8MM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32I8MM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32HPD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32HPD_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32HPD_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32HPD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32HPD_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32HPD_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32BF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32BF16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32BF16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32BF16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32BF16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32BF16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_VMID16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_VMID16_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_VMID16_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_VMID16_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_VMID16_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_VMID16_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_VHE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_VHE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_VHE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_VHE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_VHE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_VHE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_RDM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_RDM_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_RDM_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_RDM_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_RDM_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_RDM_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PAN_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PAN_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PAN_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PAN_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PAN_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PAN_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LSE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LSE_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LSE_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LSE_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LSE_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LSE_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_LOR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_LOR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_LOR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_LOR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_LOR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_LOR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HPDS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HPDS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HPDS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HPDS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HPDS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HPDS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_HAFDBS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_HAFDBS_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_HAFDBS_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_HAFDBS_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_HAFDBS_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_HAFDBS_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_Debugv8p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_Debugv8p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_Debugv8p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_Debugv8p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_Debugv8p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_Debugv8p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CRC32_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CRC32_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CRC32_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CRC32_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CRC32_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CRC32_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_nTLBPA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_nTLBPA_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_nTLBPA_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_nTLBPA_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_nTLBPA_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_nTLBPA_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRC_SR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRC_SR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRC_SR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRC_SR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRC_SR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRC_SR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_TRC_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_TRC_EXT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_TRC_EXT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_TRC_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_TRC_EXT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_TRC_EXT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SHA256_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SHA256_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SHA256_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SHA256_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SHA256_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SHA256_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_SHA1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_SHA1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_SHA1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_SHA1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_SHA1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_SHA1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_EXT32_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_EXT32_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_EXT32_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_EXT32_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_EXT32_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_EXT32_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_EXT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_EXT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_EXT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_EXT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_EXT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMUv3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMUv3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMUv3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMUv3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMUv3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMUv3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PMULL_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PMULL_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PMULL_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PMULL_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PMULL_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PMULL_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_PCSRv8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_PCSRv8_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_PCSRv8_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_PCSRv8_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_PCSRv8_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_PCSRv8_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_IVIPT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_IVIPT_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_IVIPT_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_IVIPT_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_IVIPT_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_IVIPT_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv4p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv4p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv4p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv4p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv4p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv4p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv3p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv3p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv3p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv3p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv3p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv3p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv3_TDIR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv3_TDIR_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv3_TDIR_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv3_TDIR_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv3_TDIR_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv3_TDIR_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv3_LEGACY_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv3_LEGACY_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv3_LEGACY_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv3_LEGACY_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv3_LEGACY_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv3_LEGACY_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_GICv3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_GICv3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_GICv3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_GICv3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_GICv3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_GICv3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_FP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_FP_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_FP_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_FP_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_FP_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_FP_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETS2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETS2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETS2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETS2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETS2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p6_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p6_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p6_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p6_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p6_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p6_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p5_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p5_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p5_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p5_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p5_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_ETMv4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_ETMv4_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_ETMv4_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_ETMv4_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_ETMv4_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_ETMv4_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_DoubleLock_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_DoubleLock_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_DoubleLock_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_DoubleLock_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_DoubleLock_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_DoubleLock_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV2_3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV2_3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV2_3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV2_3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV2_3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV2_3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV2_2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV2_2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV2_2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV2_2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV2_2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV2_2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV2_1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV2_1p2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV2_1p2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV2_1p2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV2_1p2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV2_1p2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_CSV2_1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_CSV2_1p1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_CSV2_1p1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_CSV2_1p1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_CSV2_1p1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_CSV2_1p1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AdvSIMD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AdvSIMD_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AdvSIMD_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AdvSIMD_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AdvSIMD_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AdvSIMD_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AES_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AES_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AES_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AES_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AES_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EL3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EL3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EL3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EL3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EL2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EL2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EL2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EL2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EL1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EL1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EL1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EL1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_EL0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_EL0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_EL0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_EL0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA64EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA64EL3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA64EL3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA64EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA64EL3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA64EL3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA64EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA64EL2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA64EL2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA64EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA64EL2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA64EL2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA64EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA64EL1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA64EL1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA64EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA64EL1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA64EL1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA64EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA64EL0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA64EL0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA64EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA64EL0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA64EL0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32EL3_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32EL3_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32EL3_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32EL3_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32EL3_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32EL2_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32EL2_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32EL2_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32EL2_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32EL2_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32EL1_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32EL1_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32EL1_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32EL1_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32EL1_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_FEAT_AA32EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>read_reg FEAT_AA32EL0_IMPLEMENTED_ref\<rbrakk>\<^sub>S = read_regS FEAT_AA32EL0_IMPLEMENTED_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_FEAT_AA32EL0_IMPLEMENTED[liftState_simp]:
  "\<lbrakk>write_reg FEAT_AA32EL0_IMPLEMENTED_ref v\<rbrakk>\<^sub>S = write_regS FEAT_AA32EL0_IMPLEMENTED_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma liftS_read_reg_SEE[liftState_simp]:
  "\<lbrakk>read_reg SEE_ref\<rbrakk>\<^sub>S = read_regS SEE_ref"
  by (intro liftState_read_reg) (auto simp: register_defs)

lemma liftS_write_reg_SEE[liftState_simp]:
  "\<lbrakk>write_reg SEE_ref v\<rbrakk>\<^sub>S = write_regS SEE_ref v"
  by (intro liftState_write_reg) (auto simp: register_defs)

lemma set_regval_Some_type_cases:
  assumes "set_regval r rv s = Some s'"
  obtains (ACCDATA_EL1_Type) v where "ACCDATA_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ACCDATA_EL1_Type_reg := (ACCDATA_EL1_Type_reg s)(r := v)\<rparr>"
  | (AMCFGR_EL0_Type) v where "AMCFGR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCFGR_EL0_Type_reg := (AMCFGR_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCFGR_Type) v where "AMCFGR_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCFGR_Type_reg := (AMCFGR_Type_reg s)(r := v)\<rparr>"
  | (AMCG1IDR_EL0_Type) v where "AMCG1IDR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCG1IDR_EL0_Type_reg := (AMCG1IDR_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCGCR_EL0_Type) v where "AMCGCR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCGCR_EL0_Type_reg := (AMCGCR_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCGCR_Type) v where "AMCGCR_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCGCR_Type_reg := (AMCGCR_Type_reg s)(r := v)\<rparr>"
  | (AMCIDR0_Type) v where "AMCIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCIDR0_Type_reg := (AMCIDR0_Type_reg s)(r := v)\<rparr>"
  | (AMCIDR1_Type) v where "AMCIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCIDR1_Type_reg := (AMCIDR1_Type_reg s)(r := v)\<rparr>"
  | (AMCIDR2_Type) v where "AMCIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCIDR2_Type_reg := (AMCIDR2_Type_reg s)(r := v)\<rparr>"
  | (AMCIDR3_Type) v where "AMCIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCIDR3_Type_reg := (AMCIDR3_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENCLR0_EL0_Type) v where "AMCNTENCLR0_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENCLR0_EL0_Type_reg := (AMCNTENCLR0_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENCLR0_Type) v where "AMCNTENCLR0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENCLR0_Type_reg := (AMCNTENCLR0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENCLR1_EL0_Type) v where "AMCNTENCLR1_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENCLR1_EL0_Type_reg := (AMCNTENCLR1_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENCLR1_Type) v where "AMCNTENCLR1_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENCLR1_Type_reg := (AMCNTENCLR1_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENSET0_EL0_Type) v where "AMCNTENSET0_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENSET0_EL0_Type_reg := (AMCNTENSET0_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENSET0_Type) v where "AMCNTENSET0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENSET0_Type_reg := (AMCNTENSET0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENSET1_EL0_Type) v where "AMCNTENSET1_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENSET1_EL0_Type_reg := (AMCNTENSET1_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCNTENSET1_Type) v where "AMCNTENSET1_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCNTENSET1_Type_reg := (AMCNTENSET1_Type_reg s)(r := v)\<rparr>"
  | (AMCR_EL0_Type) v where "AMCR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCR_EL0_Type_reg := (AMCR_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMCR_Type) v where "AMCR_Type_of_regval rv = Some v" and "s' = s\<lparr>AMCR_Type_reg := (AMCR_Type_reg s)(r := v)\<rparr>"
  | (AMDEVARCH_Type) v where "AMDEVARCH_Type_of_regval rv = Some v" and "s' = s\<lparr>AMDEVARCH_Type_reg := (AMDEVARCH_Type_reg s)(r := v)\<rparr>"
  | (AMDEVTYPE_Type) v where "AMDEVTYPE_Type_of_regval rv = Some v" and "s' = s\<lparr>AMDEVTYPE_Type_reg := (AMDEVTYPE_Type_reg s)(r := v)\<rparr>"
  | (AMIIDR_Type) v where "AMIIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>AMIIDR_Type_reg := (AMIIDR_Type_reg s)(r := v)\<rparr>"
  | (AMPIDR0_Type) v where "AMPIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMPIDR0_Type_reg := (AMPIDR0_Type_reg s)(r := v)\<rparr>"
  | (AMPIDR1_Type) v where "AMPIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>AMPIDR1_Type_reg := (AMPIDR1_Type_reg s)(r := v)\<rparr>"
  | (AMPIDR2_Type) v where "AMPIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>AMPIDR2_Type_reg := (AMPIDR2_Type_reg s)(r := v)\<rparr>"
  | (AMPIDR3_Type) v where "AMPIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>AMPIDR3_Type_reg := (AMPIDR3_Type_reg s)(r := v)\<rparr>"
  | (AMPIDR4_Type) v where "AMPIDR4_Type_of_regval rv = Some v" and "s' = s\<lparr>AMPIDR4_Type_reg := (AMPIDR4_Type_reg s)(r := v)\<rparr>"
  | (AMUSERENR_EL0_Type) v where "AMUSERENR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>AMUSERENR_EL0_Type_reg := (AMUSERENR_EL0_Type_reg s)(r := v)\<rparr>"
  | (AMUSERENR_Type) v where "AMUSERENR_Type_of_regval rv = Some v" and "s' = s\<lparr>AMUSERENR_Type_reg := (AMUSERENR_Type_reg s)(r := v)\<rparr>"
  | (BRBCR_EL1_Type) v where "BRBCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBCR_EL1_Type_reg := (BRBCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBCR_EL2_Type) v where "BRBCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBCR_EL2_Type_reg := (BRBCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (BRBFCR_EL1_Type) v where "BRBFCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBFCR_EL1_Type_reg := (BRBFCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBIDR0_EL1_Type) v where "BRBIDR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBIDR0_EL1_Type_reg := (BRBIDR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBINFINJ_EL1_Type) v where "BRBINFINJ_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBINFINJ_EL1_Type_reg := (BRBINFINJ_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBSRCINJ_EL1_Type) v where "BRBSRCINJ_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBSRCINJ_EL1_Type_reg := (BRBSRCINJ_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBTGTINJ_EL1_Type) v where "BRBTGTINJ_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBTGTINJ_EL1_Type_reg := (BRBTGTINJ_EL1_Type_reg s)(r := v)\<rparr>"
  | (BRBTS_EL1_Type) v where "BRBTS_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>BRBTS_EL1_Type_reg := (BRBTS_EL1_Type_reg s)(r := v)\<rparr>"
  | (BranchType) v where "BranchType_of_regval rv = Some v" and "s' = s\<lparr>BranchType_reg := (BranchType_reg s)(r := v)\<rparr>"
  | (CCSIDR2_EL1_Type) v where "CCSIDR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CCSIDR2_EL1_Type_reg := (CCSIDR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (CCSIDR2_Type) v where "CCSIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>CCSIDR2_Type_reg := (CCSIDR2_Type_reg s)(r := v)\<rparr>"
  | (CCSIDR_EL1_Type) v where "CCSIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CCSIDR_EL1_Type_reg := (CCSIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (CCSIDR_Type) v where "CCSIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>CCSIDR_Type_reg := (CCSIDR_Type_reg s)(r := v)\<rparr>"
  | (CLIDR_EL1_Type) v where "CLIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CLIDR_EL1_Type_reg := (CLIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (CLIDR_Type) v where "CLIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>CLIDR_Type_reg := (CLIDR_Type_reg s)(r := v)\<rparr>"
  | (CNTCR_Type) v where "CNTCR_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTCR_Type_reg := (CNTCR_Type_reg s)(r := v)\<rparr>"
  | (CNTEL0ACR_Type) v where "CNTEL0ACR_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTEL0ACR_Type_reg := (CNTEL0ACR_Type_reg s)(r := v)\<rparr>"
  | (CNTFID0_Type) v where "CNTFID0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTFID0_Type_reg := (CNTFID0_Type_reg s)(r := v)\<rparr>"
  | (CNTHCTL_EL2_Type) v where "CNTHCTL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHCTL_EL2_Type_reg := (CNTHCTL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHCTL_Type) v where "CNTHCTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHCTL_Type_reg := (CNTHCTL_Type_reg s)(r := v)\<rparr>"
  | (CNTHPS_CTL_EL2_Type) v where "CNTHPS_CTL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHPS_CTL_EL2_Type_reg := (CNTHPS_CTL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHPS_CTL_Type) v where "CNTHPS_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHPS_CTL_Type_reg := (CNTHPS_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTHPS_CVAL_EL2_Type) v where "CNTHPS_CVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHPS_CVAL_EL2_Type_reg := (CNTHPS_CVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHPS_TVAL_EL2_Type) v where "CNTHPS_TVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHPS_TVAL_EL2_Type_reg := (CNTHPS_TVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHP_CTL_EL2_Type) v where "CNTHP_CTL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHP_CTL_EL2_Type_reg := (CNTHP_CTL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHP_CTL_Type) v where "CNTHP_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHP_CTL_Type_reg := (CNTHP_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTHP_CVAL_EL2_Type) v where "CNTHP_CVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHP_CVAL_EL2_Type_reg := (CNTHP_CVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHP_CVAL_Type) v where "CNTHP_CVAL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHP_CVAL_Type_reg := (CNTHP_CVAL_Type_reg s)(r := v)\<rparr>"
  | (CNTHP_TVAL_EL2_Type) v where "CNTHP_TVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHP_TVAL_EL2_Type_reg := (CNTHP_TVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHVS_CTL_EL2_Type) v where "CNTHVS_CTL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHVS_CTL_EL2_Type_reg := (CNTHVS_CTL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHVS_CTL_Type) v where "CNTHVS_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHVS_CTL_Type_reg := (CNTHVS_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTHVS_CVAL_EL2_Type) v where "CNTHVS_CVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHVS_CVAL_EL2_Type_reg := (CNTHVS_CVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHVS_TVAL_EL2_Type) v where "CNTHVS_TVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHVS_TVAL_EL2_Type_reg := (CNTHVS_TVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHV_CTL_EL2_Type) v where "CNTHV_CTL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHV_CTL_EL2_Type_reg := (CNTHV_CTL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHV_CTL_Type) v where "CNTHV_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHV_CTL_Type_reg := (CNTHV_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTHV_CVAL_EL2_Type) v where "CNTHV_CVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHV_CVAL_EL2_Type_reg := (CNTHV_CVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTHV_TVAL_EL2_Type) v where "CNTHV_TVAL_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTHV_TVAL_EL2_Type_reg := (CNTHV_TVAL_EL2_Type_reg s)(r := v)\<rparr>"
  | (CNTID_Type) v where "CNTID_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTID_Type_reg := (CNTID_Type_reg s)(r := v)\<rparr>"
  | (CNTKCTL_EL1_Type) v where "CNTKCTL_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTKCTL_EL1_Type_reg := (CNTKCTL_EL1_Type_reg s)(r := v)\<rparr>"
  | (CNTKCTL_Type) v where "CNTKCTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTKCTL_Type_reg := (CNTKCTL_Type_reg s)(r := v)\<rparr>"
  | (CNTNSAR_Type) v where "CNTNSAR_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTNSAR_Type_reg := (CNTNSAR_Type_reg s)(r := v)\<rparr>"
  | (CNTPS_CTL_EL1_Type) v where "CNTPS_CTL_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTPS_CTL_EL1_Type_reg := (CNTPS_CTL_EL1_Type_reg s)(r := v)\<rparr>"
  | (CNTPS_CVAL_EL1_Type) v where "CNTPS_CVAL_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTPS_CVAL_EL1_Type_reg := (CNTPS_CVAL_EL1_Type_reg s)(r := v)\<rparr>"
  | (CNTPS_TVAL_EL1_Type) v where "CNTPS_TVAL_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTPS_TVAL_EL1_Type_reg := (CNTPS_TVAL_EL1_Type_reg s)(r := v)\<rparr>"
  | (CNTP_CTL_EL0_Type) v where "CNTP_CTL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTP_CTL_EL0_Type_reg := (CNTP_CTL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CNTP_CTL_Type) v where "CNTP_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTP_CTL_Type_reg := (CNTP_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTP_CVAL_EL0_Type) v where "CNTP_CVAL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTP_CVAL_EL0_Type_reg := (CNTP_CVAL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CNTP_CVAL_Type) v where "CNTP_CVAL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTP_CVAL_Type_reg := (CNTP_CVAL_Type_reg s)(r := v)\<rparr>"
  | (CNTP_TVAL_EL0_Type) v where "CNTP_TVAL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTP_TVAL_EL0_Type_reg := (CNTP_TVAL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CNTSCR_Type) v where "CNTSCR_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTSCR_Type_reg := (CNTSCR_Type_reg s)(r := v)\<rparr>"
  | (CNTSR_Type) v where "CNTSR_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTSR_Type_reg := (CNTSR_Type_reg s)(r := v)\<rparr>"
  | (CNTV_CTL_EL0_Type) v where "CNTV_CTL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTV_CTL_EL0_Type_reg := (CNTV_CTL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CNTV_CTL_Type) v where "CNTV_CTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTV_CTL_Type_reg := (CNTV_CTL_Type_reg s)(r := v)\<rparr>"
  | (CNTV_CVAL_EL0_Type) v where "CNTV_CVAL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTV_CVAL_EL0_Type_reg := (CNTV_CVAL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CNTV_CVAL_Type) v where "CNTV_CVAL_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTV_CVAL_Type_reg := (CNTV_CVAL_Type_reg s)(r := v)\<rparr>"
  | (CNTV_TVAL_EL0_Type) v where "CNTV_TVAL_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CNTV_TVAL_EL0_Type_reg := (CNTV_TVAL_EL0_Type_reg s)(r := v)\<rparr>"
  | (CONTEXTIDR_EL1_Type) v where "CONTEXTIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CONTEXTIDR_EL1_Type_reg := (CONTEXTIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (CONTEXTIDR_EL2_Type) v where "CONTEXTIDR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CONTEXTIDR_EL2_Type_reg := (CONTEXTIDR_EL2_Type_reg s)(r := v)\<rparr>"
  | (CONTEXTIDR_Type) v where "CONTEXTIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>CONTEXTIDR_Type_reg := (CONTEXTIDR_Type_reg s)(r := v)\<rparr>"
  | (CPACR_EL1_Type) v where "CPACR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CPACR_EL1_Type_reg := (CPACR_EL1_Type_reg s)(r := v)\<rparr>"
  | (CPACR_Type) v where "CPACR_Type_of_regval rv = Some v" and "s' = s\<lparr>CPACR_Type_reg := (CPACR_Type_reg s)(r := v)\<rparr>"
  | (CPTR_EL2_Type) v where "CPTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>CPTR_EL2_Type_reg := (CPTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (CPTR_EL3_Type) v where "CPTR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>CPTR_EL3_Type_reg := (CPTR_EL3_Type_reg s)(r := v)\<rparr>"
  | (CSSELR_EL1_Type) v where "CSSELR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>CSSELR_EL1_Type_reg := (CSSELR_EL1_Type_reg s)(r := v)\<rparr>"
  | (CSSELR_Type) v where "CSSELR_Type_of_regval rv = Some v" and "s' = s\<lparr>CSSELR_Type_reg := (CSSELR_Type_reg s)(r := v)\<rparr>"
  | (CTIAUTHSTATUS_Type) v where "CTIAUTHSTATUS_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIAUTHSTATUS_Type_reg := (CTIAUTHSTATUS_Type_reg s)(r := v)\<rparr>"
  | (CTICIDR0_Type) v where "CTICIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>CTICIDR0_Type_reg := (CTICIDR0_Type_reg s)(r := v)\<rparr>"
  | (CTICIDR1_Type) v where "CTICIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>CTICIDR1_Type_reg := (CTICIDR1_Type_reg s)(r := v)\<rparr>"
  | (CTICIDR2_Type) v where "CTICIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>CTICIDR2_Type_reg := (CTICIDR2_Type_reg s)(r := v)\<rparr>"
  | (CTICIDR3_Type) v where "CTICIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>CTICIDR3_Type_reg := (CTICIDR3_Type_reg s)(r := v)\<rparr>"
  | (CTICONTROL_Type) v where "CTICONTROL_Type_of_regval rv = Some v" and "s' = s\<lparr>CTICONTROL_Type_reg := (CTICONTROL_Type_reg s)(r := v)\<rparr>"
  | (CTIDEVARCH_Type) v where "CTIDEVARCH_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIDEVARCH_Type_reg := (CTIDEVARCH_Type_reg s)(r := v)\<rparr>"
  | (CTIDEVCTL_Type) v where "CTIDEVCTL_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIDEVCTL_Type_reg := (CTIDEVCTL_Type_reg s)(r := v)\<rparr>"
  | (CTIDEVID_Type) v where "CTIDEVID_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIDEVID_Type_reg := (CTIDEVID_Type_reg s)(r := v)\<rparr>"
  | (CTIDEVTYPE_Type) v where "CTIDEVTYPE_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIDEVTYPE_Type_reg := (CTIDEVTYPE_Type_reg s)(r := v)\<rparr>"
  | (CTIITCTRL_Type) v where "CTIITCTRL_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIITCTRL_Type_reg := (CTIITCTRL_Type_reg s)(r := v)\<rparr>"
  | (CTILAR_Type) v where "CTILAR_Type_of_regval rv = Some v" and "s' = s\<lparr>CTILAR_Type_reg := (CTILAR_Type_reg s)(r := v)\<rparr>"
  | (CTILSR_Type) v where "CTILSR_Type_of_regval rv = Some v" and "s' = s\<lparr>CTILSR_Type_reg := (CTILSR_Type_reg s)(r := v)\<rparr>"
  | (CTIPIDR0_Type) v where "CTIPIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIPIDR0_Type_reg := (CTIPIDR0_Type_reg s)(r := v)\<rparr>"
  | (CTIPIDR1_Type) v where "CTIPIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIPIDR1_Type_reg := (CTIPIDR1_Type_reg s)(r := v)\<rparr>"
  | (CTIPIDR2_Type) v where "CTIPIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIPIDR2_Type_reg := (CTIPIDR2_Type_reg s)(r := v)\<rparr>"
  | (CTIPIDR3_Type) v where "CTIPIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIPIDR3_Type_reg := (CTIPIDR3_Type_reg s)(r := v)\<rparr>"
  | (CTIPIDR4_Type) v where "CTIPIDR4_Type_of_regval rv = Some v" and "s' = s\<lparr>CTIPIDR4_Type_reg := (CTIPIDR4_Type_reg s)(r := v)\<rparr>"
  | (CTR_EL0_Type) v where "CTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>CTR_EL0_Type_reg := (CTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (CTR_Type) v where "CTR_Type_of_regval rv = Some v" and "s' = s\<lparr>CTR_Type_reg := (CTR_Type_reg s)(r := v)\<rparr>"
  | (Configuration_Type) v where "Configuration_Type_of_regval rv = Some v" and "s' = s\<lparr>Configuration_Type_reg := (Configuration_Type_reg s)(r := v)\<rparr>"
  | (DACR32_EL2_Type) v where "DACR32_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>DACR32_EL2_Type_reg := (DACR32_EL2_Type_reg s)(r := v)\<rparr>"
  | (DACR_Type) v where "DACR_Type_of_regval rv = Some v" and "s' = s\<lparr>DACR_Type_reg := (DACR_Type_reg s)(r := v)\<rparr>"
  | (DBGAUTHSTATUS_EL1_Type) v where "DBGAUTHSTATUS_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGAUTHSTATUS_EL1_Type_reg := (DBGAUTHSTATUS_EL1_Type_reg s)(r := v)\<rparr>"
  | (DBGAUTHSTATUS_Type) v where "DBGAUTHSTATUS_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGAUTHSTATUS_Type_reg := (DBGAUTHSTATUS_Type_reg s)(r := v)\<rparr>"
  | (DBGCLAIMCLR_EL1_Type) v where "DBGCLAIMCLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGCLAIMCLR_EL1_Type_reg := (DBGCLAIMCLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (DBGCLAIMCLR_Type) v where "DBGCLAIMCLR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGCLAIMCLR_Type_reg := (DBGCLAIMCLR_Type_reg s)(r := v)\<rparr>"
  | (DBGCLAIMSET_EL1_Type) v where "DBGCLAIMSET_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGCLAIMSET_EL1_Type_reg := (DBGCLAIMSET_EL1_Type_reg s)(r := v)\<rparr>"
  | (DBGCLAIMSET_Type) v where "DBGCLAIMSET_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGCLAIMSET_Type_reg := (DBGCLAIMSET_Type_reg s)(r := v)\<rparr>"
  | (DBGDCCINT_Type) v where "DBGDCCINT_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDCCINT_Type_reg := (DBGDCCINT_Type_reg s)(r := v)\<rparr>"
  | (DBGDEVID1_Type) v where "DBGDEVID1_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDEVID1_Type_reg := (DBGDEVID1_Type_reg s)(r := v)\<rparr>"
  | (DBGDEVID_Type) v where "DBGDEVID_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDEVID_Type_reg := (DBGDEVID_Type_reg s)(r := v)\<rparr>"
  | (DBGDIDR_Type) v where "DBGDIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDIDR_Type_reg := (DBGDIDR_Type_reg s)(r := v)\<rparr>"
  | (DBGDRAR_Type) v where "DBGDRAR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDRAR_Type_reg := (DBGDRAR_Type_reg s)(r := v)\<rparr>"
  | (DBGDSCRext_Type) v where "DBGDSCRext_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDSCRext_Type_reg := (DBGDSCRext_Type_reg s)(r := v)\<rparr>"
  | (DBGDSCRint_Type) v where "DBGDSCRint_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDSCRint_Type_reg := (DBGDSCRint_Type_reg s)(r := v)\<rparr>"
  | (DBGDTRRXext_Type) v where "DBGDTRRXext_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDTRRXext_Type_reg := (DBGDTRRXext_Type_reg s)(r := v)\<rparr>"
  | (DBGDTRRXint_Type) v where "DBGDTRRXint_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDTRRXint_Type_reg := (DBGDTRRXint_Type_reg s)(r := v)\<rparr>"
  | (DBGDTRTXext_Type) v where "DBGDTRTXext_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDTRTXext_Type_reg := (DBGDTRTXext_Type_reg s)(r := v)\<rparr>"
  | (DBGDTRTXint_Type) v where "DBGDTRTXint_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDTRTXint_Type_reg := (DBGDTRTXint_Type_reg s)(r := v)\<rparr>"
  | (DBGDTR_EL0_Type) v where "DBGDTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGDTR_EL0_Type_reg := (DBGDTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (DBGOSDLR_Type) v where "DBGOSDLR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGOSDLR_Type_reg := (DBGOSDLR_Type_reg s)(r := v)\<rparr>"
  | (DBGOSECCR_Type) v where "DBGOSECCR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGOSECCR_Type_reg := (DBGOSECCR_Type_reg s)(r := v)\<rparr>"
  | (DBGOSLAR_Type) v where "DBGOSLAR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGOSLAR_Type_reg := (DBGOSLAR_Type_reg s)(r := v)\<rparr>"
  | (DBGOSLSR_Type) v where "DBGOSLSR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGOSLSR_Type_reg := (DBGOSLSR_Type_reg s)(r := v)\<rparr>"
  | (DBGPRCR_EL1_Type) v where "DBGPRCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGPRCR_EL1_Type_reg := (DBGPRCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (DBGPRCR_Type) v where "DBGPRCR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGPRCR_Type_reg := (DBGPRCR_Type_reg s)(r := v)\<rparr>"
  | (DBGVCR32_EL2_Type) v where "DBGVCR32_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGVCR32_EL2_Type_reg := (DBGVCR32_EL2_Type_reg s)(r := v)\<rparr>"
  | (DBGVCR_Type) v where "DBGVCR_Type_of_regval rv = Some v" and "s' = s\<lparr>DBGVCR_Type_reg := (DBGVCR_Type_reg s)(r := v)\<rparr>"
  | (DCZID_EL0_Type) v where "DCZID_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>DCZID_EL0_Type_reg := (DCZID_EL0_Type_reg s)(r := v)\<rparr>"
  | (DFSR_Type) v where "DFSR_Type_of_regval rv = Some v" and "s' = s\<lparr>DFSR_Type_reg := (DFSR_Type_reg s)(r := v)\<rparr>"
  | (DISR_EL1_Type) v where "DISR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>DISR_EL1_Type_reg := (DISR_EL1_Type_reg s)(r := v)\<rparr>"
  | (DISR_Type) v where "DISR_Type_of_regval rv = Some v" and "s' = s\<lparr>DISR_Type_reg := (DISR_Type_reg s)(r := v)\<rparr>"
  | (DSPSR2_Type) v where "DSPSR2_Type_of_regval rv = Some v" and "s' = s\<lparr>DSPSR2_Type_reg := (DSPSR2_Type_reg s)(r := v)\<rparr>"
  | (DSPSR_EL0_Type) v where "DSPSR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>DSPSR_EL0_Type_reg := (DSPSR_EL0_Type_reg s)(r := v)\<rparr>"
  | (DSPSR_Type) v where "DSPSR_Type_of_regval rv = Some v" and "s' = s\<lparr>DSPSR_Type_reg := (DSPSR_Type_reg s)(r := v)\<rparr>"
  | (DormantCtl_Type) v where "DormantCtl_Type_of_regval rv = Some v" and "s' = s\<lparr>DormantCtl_Type_reg := (DormantCtl_Type_reg s)(r := v)\<rparr>"
  | (EDAA32PFR_Type) v where "EDAA32PFR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDAA32PFR_Type_reg := (EDAA32PFR_Type_reg s)(r := v)\<rparr>"
  | (EDCIDR0_Type) v where "EDCIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>EDCIDR0_Type_reg := (EDCIDR0_Type_reg s)(r := v)\<rparr>"
  | (EDCIDR1_Type) v where "EDCIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>EDCIDR1_Type_reg := (EDCIDR1_Type_reg s)(r := v)\<rparr>"
  | (EDCIDR2_Type) v where "EDCIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>EDCIDR2_Type_reg := (EDCIDR2_Type_reg s)(r := v)\<rparr>"
  | (EDCIDR3_Type) v where "EDCIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>EDCIDR3_Type_reg := (EDCIDR3_Type_reg s)(r := v)\<rparr>"
  | (EDDEVARCH_Type) v where "EDDEVARCH_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDEVARCH_Type_reg := (EDDEVARCH_Type_reg s)(r := v)\<rparr>"
  | (EDDEVID1_Type) v where "EDDEVID1_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDEVID1_Type_reg := (EDDEVID1_Type_reg s)(r := v)\<rparr>"
  | (EDDEVID_Type) v where "EDDEVID_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDEVID_Type_reg := (EDDEVID_Type_reg s)(r := v)\<rparr>"
  | (EDDEVTYPE_Type) v where "EDDEVTYPE_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDEVTYPE_Type_reg := (EDDEVTYPE_Type_reg s)(r := v)\<rparr>"
  | (EDDFR1_Type) v where "EDDFR1_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDFR1_Type_reg := (EDDFR1_Type_reg s)(r := v)\<rparr>"
  | (EDDFR_Type) v where "EDDFR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDDFR_Type_reg := (EDDFR_Type_reg s)(r := v)\<rparr>"
  | (EDECCR_Type) v where "EDECCR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDECCR_Type_reg := (EDECCR_Type_reg s)(r := v)\<rparr>"
  | (EDECR_Type) v where "EDECR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDECR_Type_reg := (EDECR_Type_reg s)(r := v)\<rparr>"
  | (EDESR_Type) v where "EDESR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDESR_Type_reg := (EDESR_Type_reg s)(r := v)\<rparr>"
  | (EDHSR_Type) v where "EDHSR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDHSR_Type_reg := (EDHSR_Type_reg s)(r := v)\<rparr>"
  | (EDITCTRL_Type) v where "EDITCTRL_Type_of_regval rv = Some v" and "s' = s\<lparr>EDITCTRL_Type_reg := (EDITCTRL_Type_reg s)(r := v)\<rparr>"
  | (EDLAR_Type) v where "EDLAR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDLAR_Type_reg := (EDLAR_Type_reg s)(r := v)\<rparr>"
  | (EDLSR_Type) v where "EDLSR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDLSR_Type_reg := (EDLSR_Type_reg s)(r := v)\<rparr>"
  | (EDPCSR_Type) v where "EDPCSR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPCSR_Type_reg := (EDPCSR_Type_reg s)(r := v)\<rparr>"
  | (EDPFR_Type) v where "EDPFR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPFR_Type_reg := (EDPFR_Type_reg s)(r := v)\<rparr>"
  | (EDPIDR0_Type) v where "EDPIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPIDR0_Type_reg := (EDPIDR0_Type_reg s)(r := v)\<rparr>"
  | (EDPIDR1_Type) v where "EDPIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPIDR1_Type_reg := (EDPIDR1_Type_reg s)(r := v)\<rparr>"
  | (EDPIDR2_Type) v where "EDPIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPIDR2_Type_reg := (EDPIDR2_Type_reg s)(r := v)\<rparr>"
  | (EDPIDR3_Type) v where "EDPIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPIDR3_Type_reg := (EDPIDR3_Type_reg s)(r := v)\<rparr>"
  | (EDPIDR4_Type) v where "EDPIDR4_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPIDR4_Type_reg := (EDPIDR4_Type_reg s)(r := v)\<rparr>"
  | (EDPRCR_Type) v where "EDPRCR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPRCR_Type_reg := (EDPRCR_Type_reg s)(r := v)\<rparr>"
  | (EDPRSR_Type) v where "EDPRSR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDPRSR_Type_reg := (EDPRSR_Type_reg s)(r := v)\<rparr>"
  | (EDRCR_Type) v where "EDRCR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDRCR_Type_reg := (EDRCR_Type_reg s)(r := v)\<rparr>"
  | (EDSCR2_Type) v where "EDSCR2_Type_of_regval rv = Some v" and "s' = s\<lparr>EDSCR2_Type_reg := (EDSCR2_Type_reg s)(r := v)\<rparr>"
  | (EDSCR_Type) v where "EDSCR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDSCR_Type_reg := (EDSCR_Type_reg s)(r := v)\<rparr>"
  | (EDVIDSR_Type) v where "EDVIDSR_Type_of_regval rv = Some v" and "s' = s\<lparr>EDVIDSR_Type_reg := (EDVIDSR_Type_reg s)(r := v)\<rparr>"
  | (ERRIDR_EL1_Type) v where "ERRIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ERRIDR_EL1_Type_reg := (ERRIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ERRIDR_Type) v where "ERRIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>ERRIDR_Type_reg := (ERRIDR_Type_reg s)(r := v)\<rparr>"
  | (ERRSELR_EL1_Type) v where "ERRSELR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ERRSELR_EL1_Type_reg := (ERRSELR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ERRSELR_Type) v where "ERRSELR_Type_of_regval rv = Some v" and "s' = s\<lparr>ERRSELR_Type_reg := (ERRSELR_Type_reg s)(r := v)\<rparr>"
  | (ERXGSR_EL1_Type) v where "ERXGSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ERXGSR_EL1_Type_reg := (ERXGSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ESR_EL1_Type) v where "ESR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ESR_EL1_Type_reg := (ESR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ESR_EL2_Type) v where "ESR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ESR_EL2_Type_reg := (ESR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ESR_EL3_Type) v where "ESR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>ESR_EL3_Type_reg := (ESR_EL3_Type_reg s)(r := v)\<rparr>"
  | (FPCR_Type) v where "FPCR_Type_of_regval rv = Some v" and "s' = s\<lparr>FPCR_Type_reg := (FPCR_Type_reg s)(r := v)\<rparr>"
  | (FPEXC32_EL2_Type) v where "FPEXC32_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>FPEXC32_EL2_Type_reg := (FPEXC32_EL2_Type_reg s)(r := v)\<rparr>"
  | (FPEXC_Type) v where "FPEXC_Type_of_regval rv = Some v" and "s' = s\<lparr>FPEXC_Type_reg := (FPEXC_Type_reg s)(r := v)\<rparr>"
  | (FPSCR_Type) v where "FPSCR_Type_of_regval rv = Some v" and "s' = s\<lparr>FPSCR_Type_reg := (FPSCR_Type_reg s)(r := v)\<rparr>"
  | (FPSID_Type) v where "FPSID_Type_of_regval rv = Some v" and "s' = s\<lparr>FPSID_Type_reg := (FPSID_Type_reg s)(r := v)\<rparr>"
  | (FPSR_Type) v where "FPSR_Type_of_regval rv = Some v" and "s' = s\<lparr>FPSR_Type_reg := (FPSR_Type_reg s)(r := v)\<rparr>"
  | (GCR_EL1_Type) v where "GCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>GCR_EL1_Type_reg := (GCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (GCSCRE0_EL1_Type) v where "GCSCRE0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSCRE0_EL1_Type_reg := (GCSCRE0_EL1_Type_reg s)(r := v)\<rparr>"
  | (GCSCR_EL1_Type) v where "GCSCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSCR_EL1_Type_reg := (GCSCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (GCSCR_EL2_Type) v where "GCSCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSCR_EL2_Type_reg := (GCSCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (GCSCR_EL3_Type) v where "GCSCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSCR_EL3_Type_reg := (GCSCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (GCSPR_EL0_Type) v where "GCSPR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSPR_EL0_Type_reg := (GCSPR_EL0_Type_reg s)(r := v)\<rparr>"
  | (GCSPR_EL1_Type) v where "GCSPR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSPR_EL1_Type_reg := (GCSPR_EL1_Type_reg s)(r := v)\<rparr>"
  | (GCSPR_EL2_Type) v where "GCSPR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSPR_EL2_Type_reg := (GCSPR_EL2_Type_reg s)(r := v)\<rparr>"
  | (GCSPR_EL3_Type) v where "GCSPR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>GCSPR_EL3_Type_reg := (GCSPR_EL3_Type_reg s)(r := v)\<rparr>"
  | (GICC_ABPR_Type) v where "GICC_ABPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_ABPR_Type_reg := (GICC_ABPR_Type_reg s)(r := v)\<rparr>"
  | (GICC_AEOIR_Type) v where "GICC_AEOIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_AEOIR_Type_reg := (GICC_AEOIR_Type_reg s)(r := v)\<rparr>"
  | (GICC_AHPPIR_Type) v where "GICC_AHPPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_AHPPIR_Type_reg := (GICC_AHPPIR_Type_reg s)(r := v)\<rparr>"
  | (GICC_AIAR_Type) v where "GICC_AIAR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_AIAR_Type_reg := (GICC_AIAR_Type_reg s)(r := v)\<rparr>"
  | (GICC_BPR_Type) v where "GICC_BPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_BPR_Type_reg := (GICC_BPR_Type_reg s)(r := v)\<rparr>"
  | (GICC_CTLR_Type) v where "GICC_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_CTLR_Type_reg := (GICC_CTLR_Type_reg s)(r := v)\<rparr>"
  | (GICC_DIR_Type) v where "GICC_DIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_DIR_Type_reg := (GICC_DIR_Type_reg s)(r := v)\<rparr>"
  | (GICC_EOIR_Type) v where "GICC_EOIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_EOIR_Type_reg := (GICC_EOIR_Type_reg s)(r := v)\<rparr>"
  | (GICC_HPPIR_Type) v where "GICC_HPPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_HPPIR_Type_reg := (GICC_HPPIR_Type_reg s)(r := v)\<rparr>"
  | (GICC_IAR_Type) v where "GICC_IAR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_IAR_Type_reg := (GICC_IAR_Type_reg s)(r := v)\<rparr>"
  | (GICC_PMR_Type) v where "GICC_PMR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_PMR_Type_reg := (GICC_PMR_Type_reg s)(r := v)\<rparr>"
  | (GICC_RPR_Type) v where "GICC_RPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_RPR_Type_reg := (GICC_RPR_Type_reg s)(r := v)\<rparr>"
  | (GICC_STATUSR_Type) v where "GICC_STATUSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICC_STATUSR_Type_reg := (GICC_STATUSR_Type_reg s)(r := v)\<rparr>"
  | (GICD_CLRSPI_NSR_Type) v where "GICD_CLRSPI_NSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_CLRSPI_NSR_Type_reg := (GICD_CLRSPI_NSR_Type_reg s)(r := v)\<rparr>"
  | (GICD_CLRSPI_SR_Type) v where "GICD_CLRSPI_SR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_CLRSPI_SR_Type_reg := (GICD_CLRSPI_SR_Type_reg s)(r := v)\<rparr>"
  | (GICD_CTLR_Type) v where "GICD_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_CTLR_Type_reg := (GICD_CTLR_Type_reg s)(r := v)\<rparr>"
  | (GICD_IIDR_Type) v where "GICD_IIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_IIDR_Type_reg := (GICD_IIDR_Type_reg s)(r := v)\<rparr>"
  | (GICD_SETSPI_NSR_Type) v where "GICD_SETSPI_NSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_SETSPI_NSR_Type_reg := (GICD_SETSPI_NSR_Type_reg s)(r := v)\<rparr>"
  | (GICD_SETSPI_SR_Type) v where "GICD_SETSPI_SR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_SETSPI_SR_Type_reg := (GICD_SETSPI_SR_Type_reg s)(r := v)\<rparr>"
  | (GICD_SGIR_Type) v where "GICD_SGIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_SGIR_Type_reg := (GICD_SGIR_Type_reg s)(r := v)\<rparr>"
  | (GICD_STATUSR_Type) v where "GICD_STATUSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_STATUSR_Type_reg := (GICD_STATUSR_Type_reg s)(r := v)\<rparr>"
  | (GICD_TYPER2_Type) v where "GICD_TYPER2_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_TYPER2_Type_reg := (GICD_TYPER2_Type_reg s)(r := v)\<rparr>"
  | (GICD_TYPER_Type) v where "GICD_TYPER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICD_TYPER_Type_reg := (GICD_TYPER_Type_reg s)(r := v)\<rparr>"
  | (GICH_EISR_Type) v where "GICH_EISR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_EISR_Type_reg := (GICH_EISR_Type_reg s)(r := v)\<rparr>"
  | (GICH_ELRSR_Type) v where "GICH_ELRSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_ELRSR_Type_reg := (GICH_ELRSR_Type_reg s)(r := v)\<rparr>"
  | (GICH_HCR_Type) v where "GICH_HCR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_HCR_Type_reg := (GICH_HCR_Type_reg s)(r := v)\<rparr>"
  | (GICH_MISR_Type) v where "GICH_MISR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_MISR_Type_reg := (GICH_MISR_Type_reg s)(r := v)\<rparr>"
  | (GICH_VMCR_Type) v where "GICH_VMCR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_VMCR_Type_reg := (GICH_VMCR_Type_reg s)(r := v)\<rparr>"
  | (GICH_VTR_Type) v where "GICH_VTR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICH_VTR_Type_reg := (GICH_VTR_Type_reg s)(r := v)\<rparr>"
  | (GICM_CLRSPI_NSR_Type) v where "GICM_CLRSPI_NSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_CLRSPI_NSR_Type_reg := (GICM_CLRSPI_NSR_Type_reg s)(r := v)\<rparr>"
  | (GICM_CLRSPI_SR_Type) v where "GICM_CLRSPI_SR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_CLRSPI_SR_Type_reg := (GICM_CLRSPI_SR_Type_reg s)(r := v)\<rparr>"
  | (GICM_IIDR_Type) v where "GICM_IIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_IIDR_Type_reg := (GICM_IIDR_Type_reg s)(r := v)\<rparr>"
  | (GICM_SETSPI_NSR_Type) v where "GICM_SETSPI_NSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_SETSPI_NSR_Type_reg := (GICM_SETSPI_NSR_Type_reg s)(r := v)\<rparr>"
  | (GICM_SETSPI_SR_Type) v where "GICM_SETSPI_SR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_SETSPI_SR_Type_reg := (GICM_SETSPI_SR_Type_reg s)(r := v)\<rparr>"
  | (GICM_TYPER_Type) v where "GICM_TYPER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICM_TYPER_Type_reg := (GICM_TYPER_Type_reg s)(r := v)\<rparr>"
  | (GICR_CLRLPIR_Type) v where "GICR_CLRLPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_CLRLPIR_Type_reg := (GICR_CLRLPIR_Type_reg s)(r := v)\<rparr>"
  | (GICR_CTLR_Type) v where "GICR_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_CTLR_Type_reg := (GICR_CTLR_Type_reg s)(r := v)\<rparr>"
  | (GICR_IIDR_Type) v where "GICR_IIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_IIDR_Type_reg := (GICR_IIDR_Type_reg s)(r := v)\<rparr>"
  | (GICR_INMIR0_Type) v where "GICR_INMIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_INMIR0_Type_reg := (GICR_INMIR0_Type_reg s)(r := v)\<rparr>"
  | (GICR_INVALLR_Type) v where "GICR_INVALLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_INVALLR_Type_reg := (GICR_INVALLR_Type_reg s)(r := v)\<rparr>"
  | (GICR_INVLPIR_Type) v where "GICR_INVLPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_INVLPIR_Type_reg := (GICR_INVLPIR_Type_reg s)(r := v)\<rparr>"
  | (GICR_ISENABLER0_Type) v where "GICR_ISENABLER0_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_ISENABLER0_Type_reg := (GICR_ISENABLER0_Type_reg s)(r := v)\<rparr>"
  | (GICR_MPAMIDR_Type) v where "GICR_MPAMIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_MPAMIDR_Type_reg := (GICR_MPAMIDR_Type_reg s)(r := v)\<rparr>"
  | (GICR_PARTIDR_Type) v where "GICR_PARTIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_PARTIDR_Type_reg := (GICR_PARTIDR_Type_reg s)(r := v)\<rparr>"
  | (GICR_PENDBASER_Type) v where "GICR_PENDBASER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_PENDBASER_Type_reg := (GICR_PENDBASER_Type_reg s)(r := v)\<rparr>"
  | (GICR_PROPBASER_Type) v where "GICR_PROPBASER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_PROPBASER_Type_reg := (GICR_PROPBASER_Type_reg s)(r := v)\<rparr>"
  | (GICR_SETLPIR_Type) v where "GICR_SETLPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_SETLPIR_Type_reg := (GICR_SETLPIR_Type_reg s)(r := v)\<rparr>"
  | (GICR_STATUSR_Type) v where "GICR_STATUSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_STATUSR_Type_reg := (GICR_STATUSR_Type_reg s)(r := v)\<rparr>"
  | (GICR_SYNCR_Type) v where "GICR_SYNCR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_SYNCR_Type_reg := (GICR_SYNCR_Type_reg s)(r := v)\<rparr>"
  | (GICR_VPENDBASER_Type) v where "GICR_VPENDBASER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_VPENDBASER_Type_reg := (GICR_VPENDBASER_Type_reg s)(r := v)\<rparr>"
  | (GICR_VPROPBASER_Type) v where "GICR_VPROPBASER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_VPROPBASER_Type_reg := (GICR_VPROPBASER_Type_reg s)(r := v)\<rparr>"
  | (GICR_VSGIPENDR_Type) v where "GICR_VSGIPENDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_VSGIPENDR_Type_reg := (GICR_VSGIPENDR_Type_reg s)(r := v)\<rparr>"
  | (GICR_VSGIR_Type) v where "GICR_VSGIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_VSGIR_Type_reg := (GICR_VSGIR_Type_reg s)(r := v)\<rparr>"
  | (GICR_WAKER_Type) v where "GICR_WAKER_Type_of_regval rv = Some v" and "s' = s\<lparr>GICR_WAKER_Type_reg := (GICR_WAKER_Type_reg s)(r := v)\<rparr>"
  | (GICV_ABPR_Type) v where "GICV_ABPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_ABPR_Type_reg := (GICV_ABPR_Type_reg s)(r := v)\<rparr>"
  | (GICV_AEOIR_Type) v where "GICV_AEOIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_AEOIR_Type_reg := (GICV_AEOIR_Type_reg s)(r := v)\<rparr>"
  | (GICV_AHPPIR_Type) v where "GICV_AHPPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_AHPPIR_Type_reg := (GICV_AHPPIR_Type_reg s)(r := v)\<rparr>"
  | (GICV_AIAR_Type) v where "GICV_AIAR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_AIAR_Type_reg := (GICV_AIAR_Type_reg s)(r := v)\<rparr>"
  | (GICV_BPR_Type) v where "GICV_BPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_BPR_Type_reg := (GICV_BPR_Type_reg s)(r := v)\<rparr>"
  | (GICV_CTLR_Type) v where "GICV_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_CTLR_Type_reg := (GICV_CTLR_Type_reg s)(r := v)\<rparr>"
  | (GICV_DIR_Type) v where "GICV_DIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_DIR_Type_reg := (GICV_DIR_Type_reg s)(r := v)\<rparr>"
  | (GICV_EOIR_Type) v where "GICV_EOIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_EOIR_Type_reg := (GICV_EOIR_Type_reg s)(r := v)\<rparr>"
  | (GICV_HPPIR_Type) v where "GICV_HPPIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_HPPIR_Type_reg := (GICV_HPPIR_Type_reg s)(r := v)\<rparr>"
  | (GICV_IAR_Type) v where "GICV_IAR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_IAR_Type_reg := (GICV_IAR_Type_reg s)(r := v)\<rparr>"
  | (GICV_PMR_Type) v where "GICV_PMR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_PMR_Type_reg := (GICV_PMR_Type_reg s)(r := v)\<rparr>"
  | (GICV_RPR_Type) v where "GICV_RPR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_RPR_Type_reg := (GICV_RPR_Type_reg s)(r := v)\<rparr>"
  | (GICV_STATUSR_Type) v where "GICV_STATUSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GICV_STATUSR_Type_reg := (GICV_STATUSR_Type_reg s)(r := v)\<rparr>"
  | (GITS_CBASER_Type) v where "GITS_CBASER_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_CBASER_Type_reg := (GITS_CBASER_Type_reg s)(r := v)\<rparr>"
  | (GITS_CREADR_Type) v where "GITS_CREADR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_CREADR_Type_reg := (GITS_CREADR_Type_reg s)(r := v)\<rparr>"
  | (GITS_CTLR_Type) v where "GITS_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_CTLR_Type_reg := (GITS_CTLR_Type_reg s)(r := v)\<rparr>"
  | (GITS_CWRITER_Type) v where "GITS_CWRITER_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_CWRITER_Type_reg := (GITS_CWRITER_Type_reg s)(r := v)\<rparr>"
  | (GITS_IIDR_Type) v where "GITS_IIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_IIDR_Type_reg := (GITS_IIDR_Type_reg s)(r := v)\<rparr>"
  | (GITS_MPAMIDR_Type) v where "GITS_MPAMIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_MPAMIDR_Type_reg := (GITS_MPAMIDR_Type_reg s)(r := v)\<rparr>"
  | (GITS_MPIDR_Type) v where "GITS_MPIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_MPIDR_Type_reg := (GITS_MPIDR_Type_reg s)(r := v)\<rparr>"
  | (GITS_PARTIDR_Type) v where "GITS_PARTIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_PARTIDR_Type_reg := (GITS_PARTIDR_Type_reg s)(r := v)\<rparr>"
  | (GITS_SGIR_Type) v where "GITS_SGIR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_SGIR_Type_reg := (GITS_SGIR_Type_reg s)(r := v)\<rparr>"
  | (GITS_STATUSR_Type) v where "GITS_STATUSR_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_STATUSR_Type_reg := (GITS_STATUSR_Type_reg s)(r := v)\<rparr>"
  | (GITS_TYPER_Type) v where "GITS_TYPER_Type_of_regval rv = Some v" and "s' = s\<lparr>GITS_TYPER_Type_reg := (GITS_TYPER_Type_reg s)(r := v)\<rparr>"
  | (GMID_EL1_Type) v where "GMID_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>GMID_EL1_Type_reg := (GMID_EL1_Type_reg s)(r := v)\<rparr>"
  | (GPCCR_EL3_Type) v where "GPCCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>GPCCR_EL3_Type_reg := (GPCCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (GPTBR_EL3_Type) v where "GPTBR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>GPTBR_EL3_Type_reg := (GPTBR_EL3_Type_reg s)(r := v)\<rparr>"
  | (HAFGRTR_EL2_Type) v where "HAFGRTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HAFGRTR_EL2_Type_reg := (HAFGRTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HCPTR_Type) v where "HCPTR_Type_of_regval rv = Some v" and "s' = s\<lparr>HCPTR_Type_reg := (HCPTR_Type_reg s)(r := v)\<rparr>"
  | (HCR2_Type) v where "HCR2_Type_of_regval rv = Some v" and "s' = s\<lparr>HCR2_Type_reg := (HCR2_Type_reg s)(r := v)\<rparr>"
  | (HCRX_EL2_Type) v where "HCRX_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HCRX_EL2_Type_reg := (HCRX_EL2_Type_reg s)(r := v)\<rparr>"
  | (HCR_EL2_Type) v where "HCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HCR_EL2_Type_reg := (HCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HCR_Type) v where "HCR_Type_of_regval rv = Some v" and "s' = s\<lparr>HCR_Type_reg := (HCR_Type_reg s)(r := v)\<rparr>"
  | (HDCR_Type) v where "HDCR_Type_of_regval rv = Some v" and "s' = s\<lparr>HDCR_Type_reg := (HDCR_Type_reg s)(r := v)\<rparr>"
  | (HDFGRTR2_EL2_Type) v where "HDFGRTR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HDFGRTR2_EL2_Type_reg := (HDFGRTR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (HDFGRTR_EL2_Type) v where "HDFGRTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HDFGRTR_EL2_Type_reg := (HDFGRTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HDFGWTR2_EL2_Type) v where "HDFGWTR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HDFGWTR2_EL2_Type_reg := (HDFGWTR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (HDFGWTR_EL2_Type) v where "HDFGWTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HDFGWTR_EL2_Type_reg := (HDFGWTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HFGITR_EL2_Type) v where "HFGITR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HFGITR_EL2_Type_reg := (HFGITR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HFGRTR2_EL2_Type) v where "HFGRTR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HFGRTR2_EL2_Type_reg := (HFGRTR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (HFGRTR_EL2_Type) v where "HFGRTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HFGRTR_EL2_Type_reg := (HFGRTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HFGWTR2_EL2_Type) v where "HFGWTR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HFGWTR2_EL2_Type_reg := (HFGWTR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (HFGWTR_EL2_Type) v where "HFGWTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HFGWTR_EL2_Type_reg := (HFGWTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HMAIR0_Type) v where "HMAIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>HMAIR0_Type_reg := (HMAIR0_Type_reg s)(r := v)\<rparr>"
  | (HMAIR1_Type) v where "HMAIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>HMAIR1_Type_reg := (HMAIR1_Type_reg s)(r := v)\<rparr>"
  | (HPFAR_EL2_Type) v where "HPFAR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HPFAR_EL2_Type_reg := (HPFAR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HPFAR_Type) v where "HPFAR_Type_of_regval rv = Some v" and "s' = s\<lparr>HPFAR_Type_reg := (HPFAR_Type_reg s)(r := v)\<rparr>"
  | (HRMR_Type) v where "HRMR_Type_of_regval rv = Some v" and "s' = s\<lparr>HRMR_Type_reg := (HRMR_Type_reg s)(r := v)\<rparr>"
  | (HSCTLR_Type) v where "HSCTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>HSCTLR_Type_reg := (HSCTLR_Type_reg s)(r := v)\<rparr>"
  | (HSR_Type) v where "HSR_Type_of_regval rv = Some v" and "s' = s\<lparr>HSR_Type_reg := (HSR_Type_reg s)(r := v)\<rparr>"
  | (HSTR_EL2_Type) v where "HSTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>HSTR_EL2_Type_reg := (HSTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (HSTR_Type) v where "HSTR_Type_of_regval rv = Some v" and "s' = s\<lparr>HSTR_Type_reg := (HSTR_Type_reg s)(r := v)\<rparr>"
  | (HTCR_Type) v where "HTCR_Type_of_regval rv = Some v" and "s' = s\<lparr>HTCR_Type_reg := (HTCR_Type_reg s)(r := v)\<rparr>"
  | (HTRFCR_Type) v where "HTRFCR_Type_of_regval rv = Some v" and "s' = s\<lparr>HTRFCR_Type_reg := (HTRFCR_Type_reg s)(r := v)\<rparr>"
  | (HTTBR_Type) v where "HTTBR_Type_of_regval rv = Some v" and "s' = s\<lparr>HTTBR_Type_reg := (HTTBR_Type_reg s)(r := v)\<rparr>"
  | (ICC_ASGI1R_EL1_Type) v where "ICC_ASGI1R_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_ASGI1R_EL1_Type_reg := (ICC_ASGI1R_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_ASGI1R_Type) v where "ICC_ASGI1R_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_ASGI1R_Type_reg := (ICC_ASGI1R_Type_reg s)(r := v)\<rparr>"
  | (ICC_BPR0_EL1_Type) v where "ICC_BPR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_BPR0_EL1_Type_reg := (ICC_BPR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_BPR0_Type) v where "ICC_BPR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_BPR0_Type_reg := (ICC_BPR0_Type_reg s)(r := v)\<rparr>"
  | (ICC_BPR1_EL1_Type) v where "ICC_BPR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_BPR1_EL1_Type_reg := (ICC_BPR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_BPR1_Type) v where "ICC_BPR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_BPR1_Type_reg := (ICC_BPR1_Type_reg s)(r := v)\<rparr>"
  | (ICC_CTLR_EL1_Type) v where "ICC_CTLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_CTLR_EL1_Type_reg := (ICC_CTLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_CTLR_EL3_Type) v where "ICC_CTLR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_CTLR_EL3_Type_reg := (ICC_CTLR_EL3_Type_reg s)(r := v)\<rparr>"
  | (ICC_CTLR_Type) v where "ICC_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_CTLR_Type_reg := (ICC_CTLR_Type_reg s)(r := v)\<rparr>"
  | (ICC_DIR_EL1_Type) v where "ICC_DIR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_DIR_EL1_Type_reg := (ICC_DIR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_DIR_Type) v where "ICC_DIR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_DIR_Type_reg := (ICC_DIR_Type_reg s)(r := v)\<rparr>"
  | (ICC_EOIR0_EL1_Type) v where "ICC_EOIR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_EOIR0_EL1_Type_reg := (ICC_EOIR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_EOIR0_Type) v where "ICC_EOIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_EOIR0_Type_reg := (ICC_EOIR0_Type_reg s)(r := v)\<rparr>"
  | (ICC_EOIR1_EL1_Type) v where "ICC_EOIR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_EOIR1_EL1_Type_reg := (ICC_EOIR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_EOIR1_Type) v where "ICC_EOIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_EOIR1_Type_reg := (ICC_EOIR1_Type_reg s)(r := v)\<rparr>"
  | (ICC_HPPIR0_EL1_Type) v where "ICC_HPPIR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_HPPIR0_EL1_Type_reg := (ICC_HPPIR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_HPPIR0_Type) v where "ICC_HPPIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_HPPIR0_Type_reg := (ICC_HPPIR0_Type_reg s)(r := v)\<rparr>"
  | (ICC_HPPIR1_EL1_Type) v where "ICC_HPPIR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_HPPIR1_EL1_Type_reg := (ICC_HPPIR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_HPPIR1_Type) v where "ICC_HPPIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_HPPIR1_Type_reg := (ICC_HPPIR1_Type_reg s)(r := v)\<rparr>"
  | (ICC_HSRE_Type) v where "ICC_HSRE_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_HSRE_Type_reg := (ICC_HSRE_Type_reg s)(r := v)\<rparr>"
  | (ICC_IAR0_EL1_Type) v where "ICC_IAR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IAR0_EL1_Type_reg := (ICC_IAR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_IAR0_Type) v where "ICC_IAR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IAR0_Type_reg := (ICC_IAR0_Type_reg s)(r := v)\<rparr>"
  | (ICC_IAR1_EL1_Type) v where "ICC_IAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IAR1_EL1_Type_reg := (ICC_IAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_IAR1_Type) v where "ICC_IAR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IAR1_Type_reg := (ICC_IAR1_Type_reg s)(r := v)\<rparr>"
  | (ICC_IGRPEN0_EL1_Type) v where "ICC_IGRPEN0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IGRPEN0_EL1_Type_reg := (ICC_IGRPEN0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_IGRPEN0_Type) v where "ICC_IGRPEN0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IGRPEN0_Type_reg := (ICC_IGRPEN0_Type_reg s)(r := v)\<rparr>"
  | (ICC_IGRPEN1_EL1_Type) v where "ICC_IGRPEN1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IGRPEN1_EL1_Type_reg := (ICC_IGRPEN1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_IGRPEN1_EL3_Type) v where "ICC_IGRPEN1_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IGRPEN1_EL3_Type_reg := (ICC_IGRPEN1_EL3_Type_reg s)(r := v)\<rparr>"
  | (ICC_IGRPEN1_Type) v where "ICC_IGRPEN1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_IGRPEN1_Type_reg := (ICC_IGRPEN1_Type_reg s)(r := v)\<rparr>"
  | (ICC_MCTLR_Type) v where "ICC_MCTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_MCTLR_Type_reg := (ICC_MCTLR_Type_reg s)(r := v)\<rparr>"
  | (ICC_MGRPEN1_Type) v where "ICC_MGRPEN1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_MGRPEN1_Type_reg := (ICC_MGRPEN1_Type_reg s)(r := v)\<rparr>"
  | (ICC_MSRE_Type) v where "ICC_MSRE_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_MSRE_Type_reg := (ICC_MSRE_Type_reg s)(r := v)\<rparr>"
  | (ICC_NMIAR1_EL1_Type) v where "ICC_NMIAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_NMIAR1_EL1_Type_reg := (ICC_NMIAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_PMR_EL1_Type) v where "ICC_PMR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_PMR_EL1_Type_reg := (ICC_PMR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_PMR_Type) v where "ICC_PMR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_PMR_Type_reg := (ICC_PMR_Type_reg s)(r := v)\<rparr>"
  | (ICC_RPR_EL1_Type) v where "ICC_RPR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_RPR_EL1_Type_reg := (ICC_RPR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_RPR_Type) v where "ICC_RPR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_RPR_Type_reg := (ICC_RPR_Type_reg s)(r := v)\<rparr>"
  | (ICC_SGI0R_EL1_Type) v where "ICC_SGI0R_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SGI0R_EL1_Type_reg := (ICC_SGI0R_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_SGI0R_Type) v where "ICC_SGI0R_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SGI0R_Type_reg := (ICC_SGI0R_Type_reg s)(r := v)\<rparr>"
  | (ICC_SGI1R_EL1_Type) v where "ICC_SGI1R_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SGI1R_EL1_Type_reg := (ICC_SGI1R_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_SGI1R_Type) v where "ICC_SGI1R_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SGI1R_Type_reg := (ICC_SGI1R_Type_reg s)(r := v)\<rparr>"
  | (ICC_SRE_EL1_Type) v where "ICC_SRE_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SRE_EL1_Type_reg := (ICC_SRE_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICC_SRE_EL2_Type) v where "ICC_SRE_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SRE_EL2_Type_reg := (ICC_SRE_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICC_SRE_EL3_Type) v where "ICC_SRE_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SRE_EL3_Type_reg := (ICC_SRE_EL3_Type_reg s)(r := v)\<rparr>"
  | (ICC_SRE_Type) v where "ICC_SRE_Type_of_regval rv = Some v" and "s' = s\<lparr>ICC_SRE_Type_reg := (ICC_SRE_Type_reg s)(r := v)\<rparr>"
  | (ICH_EISR_EL2_Type) v where "ICH_EISR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_EISR_EL2_Type_reg := (ICH_EISR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_EISR_Type) v where "ICH_EISR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_EISR_Type_reg := (ICH_EISR_Type_reg s)(r := v)\<rparr>"
  | (ICH_ELRSR_EL2_Type) v where "ICH_ELRSR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_ELRSR_EL2_Type_reg := (ICH_ELRSR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_ELRSR_Type) v where "ICH_ELRSR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_ELRSR_Type_reg := (ICH_ELRSR_Type_reg s)(r := v)\<rparr>"
  | (ICH_HCR_EL2_Type) v where "ICH_HCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_HCR_EL2_Type_reg := (ICH_HCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_HCR_Type) v where "ICH_HCR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_HCR_Type_reg := (ICH_HCR_Type_reg s)(r := v)\<rparr>"
  | (ICH_MISR_EL2_Type) v where "ICH_MISR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_MISR_EL2_Type_reg := (ICH_MISR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_MISR_Type) v where "ICH_MISR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_MISR_Type_reg := (ICH_MISR_Type_reg s)(r := v)\<rparr>"
  | (ICH_VMCR_EL2_Type) v where "ICH_VMCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_VMCR_EL2_Type_reg := (ICH_VMCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_VMCR_Type) v where "ICH_VMCR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_VMCR_Type_reg := (ICH_VMCR_Type_reg s)(r := v)\<rparr>"
  | (ICH_VTR_EL2_Type) v where "ICH_VTR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_VTR_EL2_Type_reg := (ICH_VTR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ICH_VTR_Type) v where "ICH_VTR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICH_VTR_Type_reg := (ICH_VTR_Type_reg s)(r := v)\<rparr>"
  | (ICV_BPR0_EL1_Type) v where "ICV_BPR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_BPR0_EL1_Type_reg := (ICV_BPR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_BPR0_Type) v where "ICV_BPR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_BPR0_Type_reg := (ICV_BPR0_Type_reg s)(r := v)\<rparr>"
  | (ICV_BPR1_EL1_Type) v where "ICV_BPR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_BPR1_EL1_Type_reg := (ICV_BPR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_BPR1_Type) v where "ICV_BPR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_BPR1_Type_reg := (ICV_BPR1_Type_reg s)(r := v)\<rparr>"
  | (ICV_CTLR_EL1_Type) v where "ICV_CTLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_CTLR_EL1_Type_reg := (ICV_CTLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_CTLR_Type) v where "ICV_CTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_CTLR_Type_reg := (ICV_CTLR_Type_reg s)(r := v)\<rparr>"
  | (ICV_DIR_EL1_Type) v where "ICV_DIR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_DIR_EL1_Type_reg := (ICV_DIR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_DIR_Type) v where "ICV_DIR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_DIR_Type_reg := (ICV_DIR_Type_reg s)(r := v)\<rparr>"
  | (ICV_EOIR0_EL1_Type) v where "ICV_EOIR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_EOIR0_EL1_Type_reg := (ICV_EOIR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_EOIR0_Type) v where "ICV_EOIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_EOIR0_Type_reg := (ICV_EOIR0_Type_reg s)(r := v)\<rparr>"
  | (ICV_EOIR1_EL1_Type) v where "ICV_EOIR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_EOIR1_EL1_Type_reg := (ICV_EOIR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_EOIR1_Type) v where "ICV_EOIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_EOIR1_Type_reg := (ICV_EOIR1_Type_reg s)(r := v)\<rparr>"
  | (ICV_HPPIR0_EL1_Type) v where "ICV_HPPIR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_HPPIR0_EL1_Type_reg := (ICV_HPPIR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_HPPIR0_Type) v where "ICV_HPPIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_HPPIR0_Type_reg := (ICV_HPPIR0_Type_reg s)(r := v)\<rparr>"
  | (ICV_HPPIR1_EL1_Type) v where "ICV_HPPIR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_HPPIR1_EL1_Type_reg := (ICV_HPPIR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_HPPIR1_Type) v where "ICV_HPPIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_HPPIR1_Type_reg := (ICV_HPPIR1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IAR0_EL1_Type) v where "ICV_IAR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IAR0_EL1_Type_reg := (ICV_IAR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IAR0_Type) v where "ICV_IAR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IAR0_Type_reg := (ICV_IAR0_Type_reg s)(r := v)\<rparr>"
  | (ICV_IAR1_EL1_Type) v where "ICV_IAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IAR1_EL1_Type_reg := (ICV_IAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IAR1_Type) v where "ICV_IAR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IAR1_Type_reg := (ICV_IAR1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IGRPEN0_EL1_Type) v where "ICV_IGRPEN0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IGRPEN0_EL1_Type_reg := (ICV_IGRPEN0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IGRPEN0_Type) v where "ICV_IGRPEN0_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IGRPEN0_Type_reg := (ICV_IGRPEN0_Type_reg s)(r := v)\<rparr>"
  | (ICV_IGRPEN1_EL1_Type) v where "ICV_IGRPEN1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IGRPEN1_EL1_Type_reg := (ICV_IGRPEN1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_IGRPEN1_Type) v where "ICV_IGRPEN1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_IGRPEN1_Type_reg := (ICV_IGRPEN1_Type_reg s)(r := v)\<rparr>"
  | (ICV_NMIAR1_EL1_Type) v where "ICV_NMIAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_NMIAR1_EL1_Type_reg := (ICV_NMIAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_PMR_EL1_Type) v where "ICV_PMR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_PMR_EL1_Type_reg := (ICV_PMR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_PMR_Type) v where "ICV_PMR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_PMR_Type_reg := (ICV_PMR_Type_reg s)(r := v)\<rparr>"
  | (ICV_RPR_EL1_Type) v where "ICV_RPR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_RPR_EL1_Type_reg := (ICV_RPR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ICV_RPR_Type) v where "ICV_RPR_Type_of_regval rv = Some v" and "s' = s\<lparr>ICV_RPR_Type_reg := (ICV_RPR_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64DFR0_EL1_Type) v where "ID_AA64DFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64DFR0_EL1_Type_reg := (ID_AA64DFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64DFR1_EL1_Type) v where "ID_AA64DFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64DFR1_EL1_Type_reg := (ID_AA64DFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64ISAR0_EL1_Type) v where "ID_AA64ISAR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64ISAR0_EL1_Type_reg := (ID_AA64ISAR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64ISAR1_EL1_Type) v where "ID_AA64ISAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64ISAR1_EL1_Type_reg := (ID_AA64ISAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64ISAR2_EL1_Type) v where "ID_AA64ISAR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64ISAR2_EL1_Type_reg := (ID_AA64ISAR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64MMFR0_EL1_Type) v where "ID_AA64MMFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64MMFR0_EL1_Type_reg := (ID_AA64MMFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64MMFR1_EL1_Type) v where "ID_AA64MMFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64MMFR1_EL1_Type_reg := (ID_AA64MMFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64MMFR2_EL1_Type) v where "ID_AA64MMFR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64MMFR2_EL1_Type_reg := (ID_AA64MMFR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64MMFR3_EL1_Type) v where "ID_AA64MMFR3_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64MMFR3_EL1_Type_reg := (ID_AA64MMFR3_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64MMFR4_EL1_Type) v where "ID_AA64MMFR4_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64MMFR4_EL1_Type_reg := (ID_AA64MMFR4_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64PFR0_EL1_Type) v where "ID_AA64PFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64PFR0_EL1_Type_reg := (ID_AA64PFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64PFR1_EL1_Type) v where "ID_AA64PFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64PFR1_EL1_Type_reg := (ID_AA64PFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64PFR2_EL1_Type) v where "ID_AA64PFR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64PFR2_EL1_Type_reg := (ID_AA64PFR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64SMFR0_EL1_Type) v where "ID_AA64SMFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64SMFR0_EL1_Type_reg := (ID_AA64SMFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_AA64ZFR0_EL1_Type) v where "ID_AA64ZFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_AA64ZFR0_EL1_Type_reg := (ID_AA64ZFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_DFR0_EL1_Type) v where "ID_DFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_DFR0_EL1_Type_reg := (ID_DFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_DFR0_Type) v where "ID_DFR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_DFR0_Type_reg := (ID_DFR0_Type_reg s)(r := v)\<rparr>"
  | (ID_DFR1_EL1_Type) v where "ID_DFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_DFR1_EL1_Type_reg := (ID_DFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_DFR1_Type) v where "ID_DFR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_DFR1_Type_reg := (ID_DFR1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR0_EL1_Type) v where "ID_ISAR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR0_EL1_Type_reg := (ID_ISAR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR0_Type) v where "ID_ISAR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR0_Type_reg := (ID_ISAR0_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR1_EL1_Type) v where "ID_ISAR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR1_EL1_Type_reg := (ID_ISAR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR1_Type) v where "ID_ISAR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR1_Type_reg := (ID_ISAR1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR2_EL1_Type) v where "ID_ISAR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR2_EL1_Type_reg := (ID_ISAR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR2_Type) v where "ID_ISAR2_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR2_Type_reg := (ID_ISAR2_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR3_EL1_Type) v where "ID_ISAR3_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR3_EL1_Type_reg := (ID_ISAR3_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR3_Type) v where "ID_ISAR3_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR3_Type_reg := (ID_ISAR3_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR4_EL1_Type) v where "ID_ISAR4_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR4_EL1_Type_reg := (ID_ISAR4_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR4_Type) v where "ID_ISAR4_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR4_Type_reg := (ID_ISAR4_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR5_EL1_Type) v where "ID_ISAR5_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR5_EL1_Type_reg := (ID_ISAR5_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR5_Type) v where "ID_ISAR5_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR5_Type_reg := (ID_ISAR5_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR6_EL1_Type) v where "ID_ISAR6_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR6_EL1_Type_reg := (ID_ISAR6_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_ISAR6_Type) v where "ID_ISAR6_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_ISAR6_Type_reg := (ID_ISAR6_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR0_EL1_Type) v where "ID_MMFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR0_EL1_Type_reg := (ID_MMFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR0_Type) v where "ID_MMFR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR0_Type_reg := (ID_MMFR0_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR1_EL1_Type) v where "ID_MMFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR1_EL1_Type_reg := (ID_MMFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR1_Type) v where "ID_MMFR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR1_Type_reg := (ID_MMFR1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR2_EL1_Type) v where "ID_MMFR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR2_EL1_Type_reg := (ID_MMFR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR2_Type) v where "ID_MMFR2_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR2_Type_reg := (ID_MMFR2_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR3_EL1_Type) v where "ID_MMFR3_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR3_EL1_Type_reg := (ID_MMFR3_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR3_Type) v where "ID_MMFR3_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR3_Type_reg := (ID_MMFR3_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR4_EL1_Type) v where "ID_MMFR4_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR4_EL1_Type_reg := (ID_MMFR4_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR4_Type) v where "ID_MMFR4_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR4_Type_reg := (ID_MMFR4_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR5_EL1_Type) v where "ID_MMFR5_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR5_EL1_Type_reg := (ID_MMFR5_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_MMFR5_Type) v where "ID_MMFR5_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_MMFR5_Type_reg := (ID_MMFR5_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR0_EL1_Type) v where "ID_PFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR0_EL1_Type_reg := (ID_PFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR0_Type) v where "ID_PFR0_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR0_Type_reg := (ID_PFR0_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR1_EL1_Type) v where "ID_PFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR1_EL1_Type_reg := (ID_PFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR1_Type) v where "ID_PFR1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR1_Type_reg := (ID_PFR1_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR2_EL1_Type) v where "ID_PFR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR2_EL1_Type_reg := (ID_PFR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (ID_PFR2_Type) v where "ID_PFR2_Type_of_regval rv = Some v" and "s' = s\<lparr>ID_PFR2_Type_reg := (ID_PFR2_Type_reg s)(r := v)\<rparr>"
  | (IFSR32_EL2_Type) v where "IFSR32_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>IFSR32_EL2_Type_reg := (IFSR32_EL2_Type_reg s)(r := v)\<rparr>"
  | (IFSR_Type) v where "IFSR_Type_of_regval rv = Some v" and "s' = s\<lparr>IFSR_Type_reg := (IFSR_Type_reg s)(r := v)\<rparr>"
  | (ISR_EL1_Type) v where "ISR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ISR_EL1_Type_reg := (ISR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ISR_Type) v where "ISR_Type_of_regval rv = Some v" and "s' = s\<lparr>ISR_Type_reg := (ISR_Type_reg s)(r := v)\<rparr>"
  | (InstrEnc) v where "InstrEnc_of_regval rv = Some v" and "s' = s\<lparr>InstrEnc_reg := (InstrEnc_reg s)(r := v)\<rparr>"
  | (LORC_EL1_Type) v where "LORC_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>LORC_EL1_Type_reg := (LORC_EL1_Type_reg s)(r := v)\<rparr>"
  | (LOREA_EL1_Type) v where "LOREA_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>LOREA_EL1_Type_reg := (LOREA_EL1_Type_reg s)(r := v)\<rparr>"
  | (LORID_EL1_Type) v where "LORID_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>LORID_EL1_Type_reg := (LORID_EL1_Type_reg s)(r := v)\<rparr>"
  | (LORN_EL1_Type) v where "LORN_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>LORN_EL1_Type_reg := (LORN_EL1_Type_reg s)(r := v)\<rparr>"
  | (LORSA_EL1_Type) v where "LORSA_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>LORSA_EL1_Type_reg := (LORSA_EL1_Type_reg s)(r := v)\<rparr>"
  | (MAIR0_Type) v where "MAIR0_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR0_Type_reg := (MAIR0_Type_reg s)(r := v)\<rparr>"
  | (MAIR1_Type) v where "MAIR1_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR1_Type_reg := (MAIR1_Type_reg s)(r := v)\<rparr>"
  | (MAIR2_EL1_Type) v where "MAIR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR2_EL1_Type_reg := (MAIR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (MAIR2_EL2_Type) v where "MAIR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR2_EL2_Type_reg := (MAIR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (MAIR2_EL3_Type) v where "MAIR2_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR2_EL3_Type_reg := (MAIR2_EL3_Type_reg s)(r := v)\<rparr>"
  | (MAIR_EL1_Type) v where "MAIR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR_EL1_Type_reg := (MAIR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MAIR_EL2_Type) v where "MAIR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR_EL2_Type_reg := (MAIR_EL2_Type_reg s)(r := v)\<rparr>"
  | (MAIR_EL3_Type) v where "MAIR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MAIR_EL3_Type_reg := (MAIR_EL3_Type_reg s)(r := v)\<rparr>"
  | (MDCCINT_EL1_Type) v where "MDCCINT_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MDCCINT_EL1_Type_reg := (MDCCINT_EL1_Type_reg s)(r := v)\<rparr>"
  | (MDCCSR_EL0_Type) v where "MDCCSR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>MDCCSR_EL0_Type_reg := (MDCCSR_EL0_Type_reg s)(r := v)\<rparr>"
  | (MDCR_EL2_Type) v where "MDCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MDCR_EL2_Type_reg := (MDCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (MDCR_EL3_Type) v where "MDCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MDCR_EL3_Type_reg := (MDCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (MDRAR_EL1_Type) v where "MDRAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MDRAR_EL1_Type_reg := (MDRAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MDSCR_EL1_Type) v where "MDSCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MDSCR_EL1_Type_reg := (MDSCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MDSELR_EL1_Type) v where "MDSELR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MDSELR_EL1_Type_reg := (MDSELR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MECIDR_EL2_Type) v where "MECIDR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MECIDR_EL2_Type_reg := (MECIDR_EL2_Type_reg s)(r := v)\<rparr>"
  | (MECID_A0_EL2_Type) v where "MECID_A0_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MECID_A0_EL2_Type_reg := (MECID_A0_EL2_Type_reg s)(r := v)\<rparr>"
  | (MECID_A1_EL2_Type) v where "MECID_A1_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MECID_A1_EL2_Type_reg := (MECID_A1_EL2_Type_reg s)(r := v)\<rparr>"
  | (MECID_P0_EL2_Type) v where "MECID_P0_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MECID_P0_EL2_Type_reg := (MECID_P0_EL2_Type_reg s)(r := v)\<rparr>"
  | (MECID_P1_EL2_Type) v where "MECID_P1_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MECID_P1_EL2_Type_reg := (MECID_P1_EL2_Type_reg s)(r := v)\<rparr>"
  | (MECID_RL_A_EL3_Type) v where "MECID_RL_A_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MECID_RL_A_EL3_Type_reg := (MECID_RL_A_EL3_Type_reg s)(r := v)\<rparr>"
  | (MFAR_EL3_Type) v where "MFAR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MFAR_EL3_Type_reg := (MFAR_EL3_Type_reg s)(r := v)\<rparr>"
  | (MIDR_EL1_Type) v where "MIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MIDR_EL1_Type_reg := (MIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MIDR_Type) v where "MIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>MIDR_Type_reg := (MIDR_Type_reg s)(r := v)\<rparr>"
  | (MPAM0_EL1_Type) v where "MPAM0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAM0_EL1_Type_reg := (MPAM0_EL1_Type_reg s)(r := v)\<rparr>"
  | (MPAM1_EL1_Type) v where "MPAM1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAM1_EL1_Type_reg := (MPAM1_EL1_Type_reg s)(r := v)\<rparr>"
  | (MPAM2_EL2_Type) v where "MPAM2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAM2_EL2_Type_reg := (MPAM2_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAM3_EL3_Type) v where "MPAM3_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAM3_EL3_Type_reg := (MPAM3_EL3_Type_reg s)(r := v)\<rparr>"
  | (MPAMHCR_EL2_Type) v where "MPAMHCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMHCR_EL2_Type_reg := (MPAMHCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMIDR_EL1_Type) v where "MPAMIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMIDR_EL1_Type_reg := (MPAMIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MPAMSM_EL1_Type) v where "MPAMSM_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMSM_EL1_Type_reg := (MPAMSM_EL1_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM0_EL2_Type) v where "MPAMVPM0_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM0_EL2_Type_reg := (MPAMVPM0_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM1_EL2_Type) v where "MPAMVPM1_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM1_EL2_Type_reg := (MPAMVPM1_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM2_EL2_Type) v where "MPAMVPM2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM2_EL2_Type_reg := (MPAMVPM2_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM3_EL2_Type) v where "MPAMVPM3_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM3_EL2_Type_reg := (MPAMVPM3_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM4_EL2_Type) v where "MPAMVPM4_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM4_EL2_Type_reg := (MPAMVPM4_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM5_EL2_Type) v where "MPAMVPM5_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM5_EL2_Type_reg := (MPAMVPM5_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM6_EL2_Type) v where "MPAMVPM6_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM6_EL2_Type_reg := (MPAMVPM6_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPM7_EL2_Type) v where "MPAMVPM7_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPM7_EL2_Type_reg := (MPAMVPM7_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPAMVPMV_EL2_Type) v where "MPAMVPMV_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>MPAMVPMV_EL2_Type_reg := (MPAMVPMV_EL2_Type_reg s)(r := v)\<rparr>"
  | (MPIDR_EL1_Type) v where "MPIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MPIDR_EL1_Type_reg := (MPIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (MPIDR_Type) v where "MPIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>MPIDR_Type_reg := (MPIDR_Type_reg s)(r := v)\<rparr>"
  | (MVBAR_Type) v where "MVBAR_Type_of_regval rv = Some v" and "s' = s\<lparr>MVBAR_Type_reg := (MVBAR_Type_reg s)(r := v)\<rparr>"
  | (MVFR0_EL1_Type) v where "MVFR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR0_EL1_Type_reg := (MVFR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (MVFR0_Type) v where "MVFR0_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR0_Type_reg := (MVFR0_Type_reg s)(r := v)\<rparr>"
  | (MVFR1_EL1_Type) v where "MVFR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR1_EL1_Type_reg := (MVFR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (MVFR1_Type) v where "MVFR1_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR1_Type_reg := (MVFR1_Type_reg s)(r := v)\<rparr>"
  | (MVFR2_EL1_Type) v where "MVFR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR2_EL1_Type_reg := (MVFR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (MVFR2_Type) v where "MVFR2_Type_of_regval rv = Some v" and "s' = s\<lparr>MVFR2_Type_reg := (MVFR2_Type_reg s)(r := v)\<rparr>"
  | (NMRR_Type) v where "NMRR_Type_of_regval rv = Some v" and "s' = s\<lparr>NMRR_Type_reg := (NMRR_Type_reg s)(r := v)\<rparr>"
  | (NSACR_Type) v where "NSACR_Type_of_regval rv = Some v" and "s' = s\<lparr>NSACR_Type_reg := (NSACR_Type_reg s)(r := v)\<rparr>"
  | (OSDLR_EL1_Type) v where "OSDLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>OSDLR_EL1_Type_reg := (OSDLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (OSECCR_EL1_Type) v where "OSECCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>OSECCR_EL1_Type_reg := (OSECCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (OSLAR_EL1_Type) v where "OSLAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>OSLAR_EL1_Type_reg := (OSLAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (OSLSR_EL1_Type) v where "OSLSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>OSLSR_EL1_Type_reg := (OSLSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (OpType) v where "OpType_of_regval rv = Some v" and "s' = s\<lparr>OpType_reg := (OpType_reg s)(r := v)\<rparr>"
  | (PAR_EL1_Type) v where "PAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PAR_EL1_Type_reg := (PAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PAR_Type) v where "PAR_Type_of_regval rv = Some v" and "s' = s\<lparr>PAR_Type_reg := (PAR_Type_reg s)(r := v)\<rparr>"
  | (PFAR_EL1_Type) v where "PFAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PFAR_EL1_Type_reg := (PFAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PFAR_EL2_Type) v where "PFAR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>PFAR_EL2_Type_reg := (PFAR_EL2_Type_reg s)(r := v)\<rparr>"
  | (PIRE0_EL1_Type) v where "PIRE0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PIRE0_EL1_Type_reg := (PIRE0_EL1_Type_reg s)(r := v)\<rparr>"
  | (PIRE0_EL2_Type) v where "PIRE0_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>PIRE0_EL2_Type_reg := (PIRE0_EL2_Type_reg s)(r := v)\<rparr>"
  | (PIR_EL1_Type) v where "PIR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PIR_EL1_Type_reg := (PIR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PIR_EL2_Type) v where "PIR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>PIR_EL2_Type_reg := (PIR_EL2_Type_reg s)(r := v)\<rparr>"
  | (PIR_EL3_Type) v where "PIR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>PIR_EL3_Type_reg := (PIR_EL3_Type_reg s)(r := v)\<rparr>"
  | (PMAUTHSTATUS_Type) v where "PMAUTHSTATUS_Type_of_regval rv = Some v" and "s' = s\<lparr>PMAUTHSTATUS_Type_reg := (PMAUTHSTATUS_Type_reg s)(r := v)\<rparr>"
  | (PMBIDR_EL1_Type) v where "PMBIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMBIDR_EL1_Type_reg := (PMBIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMBLIMITR_EL1_Type) v where "PMBLIMITR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMBLIMITR_EL1_Type_reg := (PMBLIMITR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMBPTR_EL1_Type) v where "PMBPTR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMBPTR_EL1_Type_reg := (PMBPTR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMBSR_EL1_Type) v where "PMBSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMBSR_EL1_Type_reg := (PMBSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMCCFILTR_EL0_Type) v where "PMCCFILTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCCFILTR_EL0_Type_reg := (PMCCFILTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCCFILTR_Type) v where "PMCCFILTR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCCFILTR_Type_reg := (PMCCFILTR_Type_reg s)(r := v)\<rparr>"
  | (PMCCNTR_EL0_Type) v where "PMCCNTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCCNTR_EL0_Type_reg := (PMCCNTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCCNTR_Type) v where "PMCCNTR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCCNTR_Type_reg := (PMCCNTR_Type_reg s)(r := v)\<rparr>"
  | (PMCCNTSVR_EL1_Type) v where "PMCCNTSVR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCCNTSVR_EL1_Type_reg := (PMCCNTSVR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMCEID0_EL0_Type) v where "PMCEID0_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID0_EL0_Type_reg := (PMCEID0_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCEID0_Type) v where "PMCEID0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID0_Type_reg := (PMCEID0_Type_reg s)(r := v)\<rparr>"
  | (PMCEID1_EL0_Type) v where "PMCEID1_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID1_EL0_Type_reg := (PMCEID1_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCEID1_Type) v where "PMCEID1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID1_Type_reg := (PMCEID1_Type_reg s)(r := v)\<rparr>"
  | (PMCEID2_Type) v where "PMCEID2_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID2_Type_reg := (PMCEID2_Type_reg s)(r := v)\<rparr>"
  | (PMCEID3_Type) v where "PMCEID3_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCEID3_Type_reg := (PMCEID3_Type_reg s)(r := v)\<rparr>"
  | (PMCFGR_Type) v where "PMCFGR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCFGR_Type_reg := (PMCFGR_Type_reg s)(r := v)\<rparr>"
  | (PMCGCR0_Type) v where "PMCGCR0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCGCR0_Type_reg := (PMCGCR0_Type_reg s)(r := v)\<rparr>"
  | (PMCIDR0_Type) v where "PMCIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCIDR0_Type_reg := (PMCIDR0_Type_reg s)(r := v)\<rparr>"
  | (PMCIDR1_Type) v where "PMCIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCIDR1_Type_reg := (PMCIDR1_Type_reg s)(r := v)\<rparr>"
  | (PMCIDR2_Type) v where "PMCIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCIDR2_Type_reg := (PMCIDR2_Type_reg s)(r := v)\<rparr>"
  | (PMCIDR3_Type) v where "PMCIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCIDR3_Type_reg := (PMCIDR3_Type_reg s)(r := v)\<rparr>"
  | (PMCNTENCLR_EL0_Type) v where "PMCNTENCLR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCNTENCLR_EL0_Type_reg := (PMCNTENCLR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCNTENCLR_Type) v where "PMCNTENCLR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCNTENCLR_Type_reg := (PMCNTENCLR_Type_reg s)(r := v)\<rparr>"
  | (PMCNTENSET_EL0_Type) v where "PMCNTENSET_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCNTENSET_EL0_Type_reg := (PMCNTENSET_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCNTENSET_Type) v where "PMCNTENSET_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCNTENSET_Type_reg := (PMCNTENSET_Type_reg s)(r := v)\<rparr>"
  | (PMCNTEN_Type) v where "PMCNTEN_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCNTEN_Type_reg := (PMCNTEN_Type_reg s)(r := v)\<rparr>"
  | (PMCR_EL0_Type) v where "PMCR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCR_EL0_Type_reg := (PMCR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMCR_Type) v where "PMCR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMCR_Type_reg := (PMCR_Type_reg s)(r := v)\<rparr>"
  | (PMDEVID_Type) v where "PMDEVID_Type_of_regval rv = Some v" and "s' = s\<lparr>PMDEVID_Type_reg := (PMDEVID_Type_reg s)(r := v)\<rparr>"
  | (PMDEVTYPE_Type) v where "PMDEVTYPE_Type_of_regval rv = Some v" and "s' = s\<lparr>PMDEVTYPE_Type_reg := (PMDEVTYPE_Type_reg s)(r := v)\<rparr>"
  | (PMECR_EL1_Type) v where "PMECR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMECR_EL1_Type_reg := (PMECR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMIAR_EL1_Type) v where "PMIAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMIAR_EL1_Type_reg := (PMIAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMICFILTR_EL0_Type) v where "PMICFILTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMICFILTR_EL0_Type_reg := (PMICFILTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMICNTR_EL0_Type) v where "PMICNTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMICNTR_EL0_Type_reg := (PMICNTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMICNTSVR_EL1_Type) v where "PMICNTSVR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMICNTSVR_EL1_Type_reg := (PMICNTSVR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMIIDR_Type) v where "PMIIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMIIDR_Type_reg := (PMIIDR_Type_reg s)(r := v)\<rparr>"
  | (PMINTENCLR_EL1_Type) v where "PMINTENCLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMINTENCLR_EL1_Type_reg := (PMINTENCLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMINTENCLR_Type) v where "PMINTENCLR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMINTENCLR_Type_reg := (PMINTENCLR_Type_reg s)(r := v)\<rparr>"
  | (PMINTENSET_EL1_Type) v where "PMINTENSET_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMINTENSET_EL1_Type_reg := (PMINTENSET_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMINTENSET_Type) v where "PMINTENSET_Type_of_regval rv = Some v" and "s' = s\<lparr>PMINTENSET_Type_reg := (PMINTENSET_Type_reg s)(r := v)\<rparr>"
  | (PMINTEN_Type) v where "PMINTEN_Type_of_regval rv = Some v" and "s' = s\<lparr>PMINTEN_Type_reg := (PMINTEN_Type_reg s)(r := v)\<rparr>"
  | (PMITCTRL_Type) v where "PMITCTRL_Type_of_regval rv = Some v" and "s' = s\<lparr>PMITCTRL_Type_reg := (PMITCTRL_Type_reg s)(r := v)\<rparr>"
  | (PMLAR_Type) v where "PMLAR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMLAR_Type_reg := (PMLAR_Type_reg s)(r := v)\<rparr>"
  | (PMLSR_Type) v where "PMLSR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMLSR_Type_reg := (PMLSR_Type_reg s)(r := v)\<rparr>"
  | (PMMIR_EL1_Type) v where "PMMIR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMMIR_EL1_Type_reg := (PMMIR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMMIR_Type) v where "PMMIR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMMIR_Type_reg := (PMMIR_Type_reg s)(r := v)\<rparr>"
  | (PMOVSCLR_EL0_Type) v where "PMOVSCLR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMOVSCLR_EL0_Type_reg := (PMOVSCLR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMOVSR_Type) v where "PMOVSR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMOVSR_Type_reg := (PMOVSR_Type_reg s)(r := v)\<rparr>"
  | (PMOVSSET_EL0_Type) v where "PMOVSSET_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMOVSSET_EL0_Type_reg := (PMOVSSET_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMOVSSET_Type) v where "PMOVSSET_Type_of_regval rv = Some v" and "s' = s\<lparr>PMOVSSET_Type_reg := (PMOVSSET_Type_reg s)(r := v)\<rparr>"
  | (PMOVS_Type) v where "PMOVS_Type_of_regval rv = Some v" and "s' = s\<lparr>PMOVS_Type_reg := (PMOVS_Type_reg s)(r := v)\<rparr>"
  | (PMPCSCTL_Type) v where "PMPCSCTL_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPCSCTL_Type_reg := (PMPCSCTL_Type_reg s)(r := v)\<rparr>"
  | (PMPCSR_Type) v where "PMPCSR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPCSR_Type_reg := (PMPCSR_Type_reg s)(r := v)\<rparr>"
  | (PMPIDR0_Type) v where "PMPIDR0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPIDR0_Type_reg := (PMPIDR0_Type_reg s)(r := v)\<rparr>"
  | (PMPIDR1_Type) v where "PMPIDR1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPIDR1_Type_reg := (PMPIDR1_Type_reg s)(r := v)\<rparr>"
  | (PMPIDR2_Type) v where "PMPIDR2_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPIDR2_Type_reg := (PMPIDR2_Type_reg s)(r := v)\<rparr>"
  | (PMPIDR3_Type) v where "PMPIDR3_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPIDR3_Type_reg := (PMPIDR3_Type_reg s)(r := v)\<rparr>"
  | (PMPIDR4_Type) v where "PMPIDR4_Type_of_regval rv = Some v" and "s' = s\<lparr>PMPIDR4_Type_reg := (PMPIDR4_Type_reg s)(r := v)\<rparr>"
  | (PMSCR_EL1_Type) v where "PMSCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSCR_EL1_Type_reg := (PMSCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSCR_EL2_Type) v where "PMSCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSCR_EL2_Type_reg := (PMSCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (PMSDSFR_EL1_Type) v where "PMSDSFR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSDSFR_EL1_Type_reg := (PMSDSFR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSELR_EL0_Type) v where "PMSELR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSELR_EL0_Type_reg := (PMSELR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMSELR_Type) v where "PMSELR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSELR_Type_reg := (PMSELR_Type_reg s)(r := v)\<rparr>"
  | (PMSEVFR_EL1_Type) v where "PMSEVFR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSEVFR_EL1_Type_reg := (PMSEVFR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSFCR_EL1_Type) v where "PMSFCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSFCR_EL1_Type_reg := (PMSFCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSICR_EL1_Type) v where "PMSICR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSICR_EL1_Type_reg := (PMSICR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSIDR_EL1_Type) v where "PMSIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSIDR_EL1_Type_reg := (PMSIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSIRR_EL1_Type) v where "PMSIRR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSIRR_EL1_Type_reg := (PMSIRR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSLATFR_EL1_Type) v where "PMSLATFR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSLATFR_EL1_Type_reg := (PMSLATFR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSNEVFR_EL1_Type) v where "PMSNEVFR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSNEVFR_EL1_Type_reg := (PMSNEVFR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSSCR_EL1_Type) v where "PMSSCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSSCR_EL1_Type_reg := (PMSSCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMSWINC_EL0_Type) v where "PMSWINC_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSWINC_EL0_Type_reg := (PMSWINC_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMSWINC_Type) v where "PMSWINC_Type_of_regval rv = Some v" and "s' = s\<lparr>PMSWINC_Type_reg := (PMSWINC_Type_reg s)(r := v)\<rparr>"
  | (PMUACR_EL1_Type) v where "PMUACR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>PMUACR_EL1_Type_reg := (PMUACR_EL1_Type_reg s)(r := v)\<rparr>"
  | (PMUSERENR_EL0_Type) v where "PMUSERENR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMUSERENR_EL0_Type_reg := (PMUSERENR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMUSERENR_Type) v where "PMUSERENR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMUSERENR_Type_reg := (PMUSERENR_Type_reg s)(r := v)\<rparr>"
  | (PMVCIDSR_Type) v where "PMVCIDSR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMVCIDSR_Type_reg := (PMVCIDSR_Type_reg s)(r := v)\<rparr>"
  | (PMVIDSR_Type) v where "PMVIDSR_Type_of_regval rv = Some v" and "s' = s\<lparr>PMVIDSR_Type_reg := (PMVIDSR_Type_reg s)(r := v)\<rparr>"
  | (PMXEVCNTR_EL0_Type) v where "PMXEVCNTR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMXEVCNTR_EL0_Type_reg := (PMXEVCNTR_EL0_Type_reg s)(r := v)\<rparr>"
  | (PMZR_EL0_Type) v where "PMZR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>PMZR_EL0_Type_reg := (PMZR_EL0_Type_reg s)(r := v)\<rparr>"
  | (POR_EL0_Type) v where "POR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>POR_EL0_Type_reg := (POR_EL0_Type_reg s)(r := v)\<rparr>"
  | (POR_EL1_Type) v where "POR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>POR_EL1_Type_reg := (POR_EL1_Type_reg s)(r := v)\<rparr>"
  | (POR_EL2_Type) v where "POR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>POR_EL2_Type_reg := (POR_EL2_Type_reg s)(r := v)\<rparr>"
  | (POR_EL3_Type) v where "POR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>POR_EL3_Type_reg := (POR_EL3_Type_reg s)(r := v)\<rparr>"
  | (PRRR_Type) v where "PRRR_Type_of_regval rv = Some v" and "s' = s\<lparr>PRRR_Type_reg := (PRRR_Type_reg s)(r := v)\<rparr>"
  | (ProcState) v where "ProcState_of_regval rv = Some v" and "s' = s\<lparr>ProcState_reg := (ProcState_reg s)(r := v)\<rparr>"
  | (RCWMASK_EL1_Type) v where "RCWMASK_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>RCWMASK_EL1_Type_reg := (RCWMASK_EL1_Type_reg s)(r := v)\<rparr>"
  | (RCWSMASK_EL1_Type) v where "RCWSMASK_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>RCWSMASK_EL1_Type_reg := (RCWSMASK_EL1_Type_reg s)(r := v)\<rparr>"
  | (RGSR_EL1_Type) v where "RGSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>RGSR_EL1_Type_reg := (RGSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (RMR_EL1_Type) v where "RMR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>RMR_EL1_Type_reg := (RMR_EL1_Type_reg s)(r := v)\<rparr>"
  | (RMR_EL2_Type) v where "RMR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>RMR_EL2_Type_reg := (RMR_EL2_Type_reg s)(r := v)\<rparr>"
  | (RMR_EL3_Type) v where "RMR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>RMR_EL3_Type_reg := (RMR_EL3_Type_reg s)(r := v)\<rparr>"
  | (RMR_Type) v where "RMR_Type_of_regval rv = Some v" and "s' = s\<lparr>RMR_Type_reg := (RMR_Type_reg s)(r := v)\<rparr>"
  | (RNDRRS_Type) v where "RNDRRS_Type_of_regval rv = Some v" and "s' = s\<lparr>RNDRRS_Type_reg := (RNDRRS_Type_reg s)(r := v)\<rparr>"
  | (RNDR_Type) v where "RNDR_Type_of_regval rv = Some v" and "s' = s\<lparr>RNDR_Type_reg := (RNDR_Type_reg s)(r := v)\<rparr>"
  | (RVBAR_EL1_Type) v where "RVBAR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>RVBAR_EL1_Type_reg := (RVBAR_EL1_Type_reg s)(r := v)\<rparr>"
  | (RVBAR_EL2_Type) v where "RVBAR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>RVBAR_EL2_Type_reg := (RVBAR_EL2_Type_reg s)(r := v)\<rparr>"
  | (RVBAR_EL3_Type) v where "RVBAR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>RVBAR_EL3_Type_reg := (RVBAR_EL3_Type_reg s)(r := v)\<rparr>"
  | (S2PIR_EL2_Type) v where "S2PIR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>S2PIR_EL2_Type_reg := (S2PIR_EL2_Type_reg s)(r := v)\<rparr>"
  | (S2POR_EL1_Type) v where "S2POR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>S2POR_EL1_Type_reg := (S2POR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SCR_EL3_Type) v where "SCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SCR_EL3_Type_reg := (SCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (SCR_Type) v where "SCR_Type_of_regval rv = Some v" and "s' = s\<lparr>SCR_Type_reg := (SCR_Type_reg s)(r := v)\<rparr>"
  | (SCTLR2_EL1_Type) v where "SCTLR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR2_EL1_Type_reg := (SCTLR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (SCTLR2_EL2_Type) v where "SCTLR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR2_EL2_Type_reg := (SCTLR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (SCTLR2_EL3_Type) v where "SCTLR2_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR2_EL3_Type_reg := (SCTLR2_EL3_Type_reg s)(r := v)\<rparr>"
  | (SCTLR_EL1_Type) v where "SCTLR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR_EL1_Type_reg := (SCTLR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SCTLR_EL2_Type) v where "SCTLR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR_EL2_Type_reg := (SCTLR_EL2_Type_reg s)(r := v)\<rparr>"
  | (SCTLR_EL3_Type) v where "SCTLR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR_EL3_Type_reg := (SCTLR_EL3_Type_reg s)(r := v)\<rparr>"
  | (SCTLR_Type) v where "SCTLR_Type_of_regval rv = Some v" and "s' = s\<lparr>SCTLR_Type_reg := (SCTLR_Type_reg s)(r := v)\<rparr>"
  | (SDCR_Type) v where "SDCR_Type_of_regval rv = Some v" and "s' = s\<lparr>SDCR_Type_reg := (SDCR_Type_reg s)(r := v)\<rparr>"
  | (SDER32_EL2_Type) v where "SDER32_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SDER32_EL2_Type_reg := (SDER32_EL2_Type_reg s)(r := v)\<rparr>"
  | (SDER32_EL3_Type) v where "SDER32_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SDER32_EL3_Type_reg := (SDER32_EL3_Type_reg s)(r := v)\<rparr>"
  | (SDER_Type) v where "SDER_Type_of_regval rv = Some v" and "s' = s\<lparr>SDER_Type_reg := (SDER_Type_reg s)(r := v)\<rparr>"
  | (SMCR_EL1_Type) v where "SMCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SMCR_EL1_Type_reg := (SMCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SMCR_EL2_Type) v where "SMCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SMCR_EL2_Type_reg := (SMCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (SMCR_EL3_Type) v where "SMCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SMCR_EL3_Type_reg := (SMCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (SMIDR_EL1_Type) v where "SMIDR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SMIDR_EL1_Type_reg := (SMIDR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SMPRIMAP_EL2_Type) v where "SMPRIMAP_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SMPRIMAP_EL2_Type_reg := (SMPRIMAP_EL2_Type_reg s)(r := v)\<rparr>"
  | (SMPRI_EL1_Type) v where "SMPRI_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SMPRI_EL1_Type_reg := (SMPRI_EL1_Type_reg s)(r := v)\<rparr>"
  | (SPMACCESSR_EL1_Type) v where "SPMACCESSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SPMACCESSR_EL1_Type_reg := (SPMACCESSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SPMACCESSR_EL2_Type) v where "SPMACCESSR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SPMACCESSR_EL2_Type_reg := (SPMACCESSR_EL2_Type_reg s)(r := v)\<rparr>"
  | (SPMACCESSR_EL3_Type) v where "SPMACCESSR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SPMACCESSR_EL3_Type_reg := (SPMACCESSR_EL3_Type_reg s)(r := v)\<rparr>"
  | (SPMSELR_EL0_Type) v where "SPMSELR_EL0_Type_of_regval rv = Some v" and "s' = s\<lparr>SPMSELR_EL0_Type_reg := (SPMSELR_EL0_Type_reg s)(r := v)\<rparr>"
  | (SPSR_EL1_Type) v where "SPSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_EL1_Type_reg := (SPSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (SPSR_EL2_Type) v where "SPSR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_EL2_Type_reg := (SPSR_EL2_Type_reg s)(r := v)\<rparr>"
  | (SPSR_EL3_Type) v where "SPSR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_EL3_Type_reg := (SPSR_EL3_Type_reg s)(r := v)\<rparr>"
  | (SPSR_abt_Type) v where "SPSR_abt_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_abt_Type_reg := (SPSR_abt_Type_reg s)(r := v)\<rparr>"
  | (SPSR_fiq_Type) v where "SPSR_fiq_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_fiq_Type_reg := (SPSR_fiq_Type_reg s)(r := v)\<rparr>"
  | (SPSR_hyp_Type) v where "SPSR_hyp_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_hyp_Type_reg := (SPSR_hyp_Type_reg s)(r := v)\<rparr>"
  | (SPSR_irq_Type) v where "SPSR_irq_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_irq_Type_reg := (SPSR_irq_Type_reg s)(r := v)\<rparr>"
  | (SPSR_mon_Type) v where "SPSR_mon_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_mon_Type_reg := (SPSR_mon_Type_reg s)(r := v)\<rparr>"
  | (SPSR_svc_Type) v where "SPSR_svc_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_svc_Type_reg := (SPSR_svc_Type_reg s)(r := v)\<rparr>"
  | (SPSR_und_Type) v where "SPSR_und_Type_of_regval rv = Some v" and "s' = s\<lparr>SPSR_und_Type_reg := (SPSR_und_Type_reg s)(r := v)\<rparr>"
  | (Signal) v where "Signal_of_regval rv = Some v" and "s' = s\<lparr>Signal_reg := (Signal_reg s)(r := v)\<rparr>"
  | (TCR2_EL1_Type) v where "TCR2_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TCR2_EL1_Type_reg := (TCR2_EL1_Type_reg s)(r := v)\<rparr>"
  | (TCR2_EL2_Type) v where "TCR2_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TCR2_EL2_Type_reg := (TCR2_EL2_Type_reg s)(r := v)\<rparr>"
  | (TCR_EL1_Type) v where "TCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TCR_EL1_Type_reg := (TCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (TCR_EL2_Type) v where "TCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TCR_EL2_Type_reg := (TCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (TCR_EL3_Type) v where "TCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>TCR_EL3_Type_reg := (TCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (TFSRE0_EL1_Type) v where "TFSRE0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TFSRE0_EL1_Type_reg := (TFSRE0_EL1_Type_reg s)(r := v)\<rparr>"
  | (TFSR_EL1_Type) v where "TFSR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TFSR_EL1_Type_reg := (TFSR_EL1_Type_reg s)(r := v)\<rparr>"
  | (TFSR_EL2_Type) v where "TFSR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TFSR_EL2_Type_reg := (TFSR_EL2_Type_reg s)(r := v)\<rparr>"
  | (TFSR_EL3_Type) v where "TFSR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>TFSR_EL3_Type_reg := (TFSR_EL3_Type_reg s)(r := v)\<rparr>"
  | (TLBTR_Type) v where "TLBTR_Type_of_regval rv = Some v" and "s' = s\<lparr>TLBTR_Type_reg := (TLBTR_Type_reg s)(r := v)\<rparr>"
  | (TMState) v where "TMState_of_regval rv = Some v" and "s' = s\<lparr>TMState_reg := (TMState_reg s)(r := v)\<rparr>"
  | (TRFCR_EL1_Type) v where "TRFCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TRFCR_EL1_Type_reg := (TRFCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (TRFCR_EL2_Type) v where "TRFCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TRFCR_EL2_Type_reg := (TRFCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (TRFCR_Type) v where "TRFCR_Type_of_regval rv = Some v" and "s' = s\<lparr>TRFCR_Type_reg := (TRFCR_Type_reg s)(r := v)\<rparr>"
  | (TTBCR2_Type) v where "TTBCR2_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBCR2_Type_reg := (TTBCR2_Type_reg s)(r := v)\<rparr>"
  | (TTBCR_Type) v where "TTBCR_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBCR_Type_reg := (TTBCR_Type_reg s)(r := v)\<rparr>"
  | (TTBR0_EL1_Type) v where "TTBR0_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR0_EL1_Type_reg := (TTBR0_EL1_Type_reg s)(r := v)\<rparr>"
  | (TTBR0_EL2_Type) v where "TTBR0_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR0_EL2_Type_reg := (TTBR0_EL2_Type_reg s)(r := v)\<rparr>"
  | (TTBR0_EL3_Type) v where "TTBR0_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR0_EL3_Type_reg := (TTBR0_EL3_Type_reg s)(r := v)\<rparr>"
  | (TTBR0_Type) v where "TTBR0_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR0_Type_reg := (TTBR0_Type_reg s)(r := v)\<rparr>"
  | (TTBR1_EL1_Type) v where "TTBR1_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR1_EL1_Type_reg := (TTBR1_EL1_Type_reg s)(r := v)\<rparr>"
  | (TTBR1_EL2_Type) v where "TTBR1_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR1_EL2_Type_reg := (TTBR1_EL2_Type_reg s)(r := v)\<rparr>"
  | (TTBR1_Type) v where "TTBR1_Type_of_regval rv = Some v" and "s' = s\<lparr>TTBR1_Type_reg := (TTBR1_Type_reg s)(r := v)\<rparr>"
  | (VDFSR_Type) v where "VDFSR_Type_of_regval rv = Some v" and "s' = s\<lparr>VDFSR_Type_reg := (VDFSR_Type_reg s)(r := v)\<rparr>"
  | (VDISR_EL2_Type) v where "VDISR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VDISR_EL2_Type_reg := (VDISR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VDISR_Type) v where "VDISR_Type_of_regval rv = Some v" and "s' = s\<lparr>VDISR_Type_reg := (VDISR_Type_reg s)(r := v)\<rparr>"
  | (VMECID_A_EL2_Type) v where "VMECID_A_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VMECID_A_EL2_Type_reg := (VMECID_A_EL2_Type_reg s)(r := v)\<rparr>"
  | (VMECID_P_EL2_Type) v where "VMECID_P_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VMECID_P_EL2_Type_reg := (VMECID_P_EL2_Type_reg s)(r := v)\<rparr>"
  | (VMPIDR_EL2_Type) v where "VMPIDR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VMPIDR_EL2_Type_reg := (VMPIDR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VMPIDR_Type) v where "VMPIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>VMPIDR_Type_reg := (VMPIDR_Type_reg s)(r := v)\<rparr>"
  | (VNCR_EL2_Type) v where "VNCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VNCR_EL2_Type_reg := (VNCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VPIDR_EL2_Type) v where "VPIDR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VPIDR_EL2_Type_reg := (VPIDR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VPIDR_Type) v where "VPIDR_Type_of_regval rv = Some v" and "s' = s\<lparr>VPIDR_Type_reg := (VPIDR_Type_reg s)(r := v)\<rparr>"
  | (VSESR_EL2_Type) v where "VSESR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VSESR_EL2_Type_reg := (VSESR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VSTCR_EL2_Type) v where "VSTCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VSTCR_EL2_Type_reg := (VSTCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VSTTBR_EL2_Type) v where "VSTTBR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VSTTBR_EL2_Type_reg := (VSTTBR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VTCR_EL2_Type) v where "VTCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VTCR_EL2_Type_reg := (VTCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VTCR_Type) v where "VTCR_Type_of_regval rv = Some v" and "s' = s\<lparr>VTCR_Type_reg := (VTCR_Type_reg s)(r := v)\<rparr>"
  | (VTTBR_EL2_Type) v where "VTTBR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>VTTBR_EL2_Type_reg := (VTTBR_EL2_Type_reg s)(r := v)\<rparr>"
  | (VTTBR_Type) v where "VTTBR_Type_of_regval rv = Some v" and "s' = s\<lparr>VTTBR_Type_reg := (VTTBR_Type_reg s)(r := v)\<rparr>"
  | (ZCR_EL1_Type) v where "ZCR_EL1_Type_of_regval rv = Some v" and "s' = s\<lparr>ZCR_EL1_Type_reg := (ZCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (ZCR_EL2_Type) v where "ZCR_EL2_Type_of_regval rv = Some v" and "s' = s\<lparr>ZCR_EL2_Type_reg := (ZCR_EL2_Type_reg s)(r := v)\<rparr>"
  | (ZCR_EL3_Type) v where "ZCR_EL3_Type_of_regval rv = Some v" and "s' = s\<lparr>ZCR_EL3_Type_reg := (ZCR_EL3_Type_reg s)(r := v)\<rparr>"
  | (bitvector_1) v where "bitvector_1_of_regval rv = Some v" and "s' = s\<lparr>bitvector_1_reg := (bitvector_1_reg s)(r := v)\<rparr>"
  | (bitvector_16) v where "bitvector_16_of_regval rv = Some v" and "s' = s\<lparr>bitvector_16_reg := (bitvector_16_reg s)(r := v)\<rparr>"
  | (bitvector_2) v where "bitvector_2_of_regval rv = Some v" and "s' = s\<lparr>bitvector_2_reg := (bitvector_2_reg s)(r := v)\<rparr>"
  | (bitvector_24) v where "bitvector_24_of_regval rv = Some v" and "s' = s\<lparr>bitvector_24_reg := (bitvector_24_reg s)(r := v)\<rparr>"
  | (bitvector_256) v where "bitvector_256_of_regval rv = Some v" and "s' = s\<lparr>bitvector_256_reg := (bitvector_256_reg s)(r := v)\<rparr>"
  | (bitvector_3) v where "bitvector_3_of_regval rv = Some v" and "s' = s\<lparr>bitvector_3_reg := (bitvector_3_reg s)(r := v)\<rparr>"
  | (bitvector_32) v where "bitvector_32_of_regval rv = Some v" and "s' = s\<lparr>bitvector_32_reg := (bitvector_32_reg s)(r := v)\<rparr>"
  | (bitvector_4) v where "bitvector_4_of_regval rv = Some v" and "s' = s\<lparr>bitvector_4_reg := (bitvector_4_reg s)(r := v)\<rparr>"
  | (bitvector_512) v where "bitvector_512_of_regval rv = Some v" and "s' = s\<lparr>bitvector_512_reg := (bitvector_512_reg s)(r := v)\<rparr>"
  | (bitvector_56) v where "bitvector_56_of_regval rv = Some v" and "s' = s\<lparr>bitvector_56_reg := (bitvector_56_reg s)(r := v)\<rparr>"
  | (bitvector_64) v where "bitvector_64_of_regval rv = Some v" and "s' = s\<lparr>bitvector_64_reg := (bitvector_64_reg s)(r := v)\<rparr>"
  | (bitvector_8) v where "bitvector_8_of_regval rv = Some v" and "s' = s\<lparr>bitvector_8_reg := (bitvector_8_reg s)(r := v)\<rparr>"
  | (bitvector_88) v where "bitvector_88_of_regval rv = Some v" and "s' = s\<lparr>bitvector_88_reg := (bitvector_88_reg s)(r := v)\<rparr>"
  | (bool) v where "bool_of_register_value rv = Some v" and "s' = s\<lparr>bool_reg := (bool_reg s)(r := v)\<rparr>"
  | (int) v where "int_of_register_value rv = Some v" and "s' = s\<lparr>int_reg := (int_reg s)(r := v)\<rparr>"
  | (option_InterruptID) v where "option_of_regval (\<lambda>v. InterruptID_of_regval v) rv = Some v" and "s' = s\<lparr>option_InterruptID_reg := (option_InterruptID_reg s)(r := v)\<rparr>"
  | (option_bitvector_32) v where "option_of_regval (\<lambda>v. bitvector_32_of_regval v) rv = Some v" and "s' = s\<lparr>option_bitvector_32_reg := (option_bitvector_32_reg s)(r := v)\<rparr>"
  | (vector_16_AMEVCNTR1_EL0_Type) v where "vector_of_regval (\<lambda>v. AMEVCNTR1_EL0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_AMEVCNTR1_EL0_Type_reg := (vector_16_AMEVCNTR1_EL0_Type_reg s)(r := v)\<rparr>"
  | (vector_16_AMEVCNTR1_Type) v where "vector_of_regval (\<lambda>v. AMEVCNTR1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_AMEVCNTR1_Type_reg := (vector_16_AMEVCNTR1_Type_reg s)(r := v)\<rparr>"
  | (vector_16_AMEVTYPER1_EL0_Type) v where "vector_of_regval (\<lambda>v. AMEVTYPER1_EL0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_AMEVTYPER1_EL0_Type_reg := (vector_16_AMEVTYPER1_EL0_Type_reg s)(r := v)\<rparr>"
  | (vector_16_AMEVTYPER1_Type) v where "vector_of_regval (\<lambda>v. AMEVTYPER1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_AMEVTYPER1_Type_reg := (vector_16_AMEVTYPER1_Type_reg s)(r := v)\<rparr>"
  | (vector_16_DBGBCR_Type) v where "vector_of_regval (\<lambda>v. DBGBCR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_DBGBCR_Type_reg := (vector_16_DBGBCR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_DBGBVR_Type) v where "vector_of_regval (\<lambda>v. DBGBVR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_DBGBVR_Type_reg := (vector_16_DBGBVR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_DBGBXVR_Type) v where "vector_of_regval (\<lambda>v. DBGBXVR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_DBGBXVR_Type_reg := (vector_16_DBGBXVR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_DBGWCR_Type) v where "vector_of_regval (\<lambda>v. DBGWCR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_DBGWCR_Type_reg := (vector_16_DBGWCR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_DBGWVR_Type) v where "vector_of_regval (\<lambda>v. DBGWVR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_DBGWVR_Type_reg := (vector_16_DBGWVR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_ICH_LRC_Type) v where "vector_of_regval (\<lambda>v. ICH_LRC_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_ICH_LRC_Type_reg := (vector_16_ICH_LRC_Type_reg s)(r := v)\<rparr>"
  | (vector_16_ICH_LR_EL2_Type) v where "vector_of_regval (\<lambda>v. ICH_LR_EL2_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_ICH_LR_EL2_Type_reg := (vector_16_ICH_LR_EL2_Type_reg s)(r := v)\<rparr>"
  | (vector_16_ICH_LR_Type) v where "vector_of_regval (\<lambda>v. ICH_LR_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_ICH_LR_Type_reg := (vector_16_ICH_LR_Type_reg s)(r := v)\<rparr>"
  | (vector_16_bitvector_256) v where "vector_of_regval (\<lambda>v. bitvector_256_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_bitvector_256_reg := (vector_16_bitvector_256_reg s)(r := v)\<rparr>"
  | (vector_16_bitvector_64) v where "vector_of_regval (\<lambda>v. bitvector_64_of_regval v) rv = Some v" and "s' = s\<lparr>vector_16_bitvector_64_reg := (vector_16_bitvector_64_reg s)(r := v)\<rparr>"
  | (vector_16_bool) v where "vector_of_regval (\<lambda>v. bool_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_16_bool_reg := (vector_16_bool_reg s)(r := v)\<rparr>"
  | (vector_256_bitvector_2048) v where "vector_of_regval (\<lambda>v. bitvector_2048_of_regval v) rv = Some v" and "s' = s\<lparr>vector_256_bitvector_2048_reg := (vector_256_bitvector_2048_reg s)(r := v)\<rparr>"
  | (vector_259_bool) v where "vector_of_regval (\<lambda>v. bool_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_259_bool_reg := (vector_259_bool_reg s)(r := v)\<rparr>"
  | (vector_31_PMEVCNTSVR_EL1_Type) v where "vector_of_regval (\<lambda>v. PMEVCNTSVR_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_31_PMEVCNTSVR_EL1_Type_reg := (vector_31_PMEVCNTSVR_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_31_PMEVTYPER_Type) v where "vector_of_regval (\<lambda>v. PMEVTYPER_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_31_PMEVTYPER_Type_reg := (vector_31_PMEVTYPER_Type_reg s)(r := v)\<rparr>"
  | (vector_31_bitvector_32) v where "vector_of_regval (\<lambda>v. bitvector_32_of_regval v) rv = Some v" and "s' = s\<lparr>vector_31_bitvector_32_reg := (vector_31_bitvector_32_reg s)(r := v)\<rparr>"
  | (vector_31_bool) v where "vector_of_regval (\<lambda>v. bool_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_31_bool_reg := (vector_31_bool_reg s)(r := v)\<rparr>"
  | (vector_31_int) v where "vector_of_regval (\<lambda>v. int_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_31_int_reg := (vector_31_int_reg s)(r := v)\<rparr>"
  | (vector_32_BRBINF_EL1_Type) v where "vector_of_regval (\<lambda>v. BRBINF_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_BRBINF_EL1_Type_reg := (vector_32_BRBINF_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_32_BRBSRC_EL1_Type) v where "vector_of_regval (\<lambda>v. BRBSRC_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_BRBSRC_EL1_Type_reg := (vector_32_BRBSRC_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_32_BRBTGT_EL1_Type) v where "vector_of_regval (\<lambda>v. BRBTGT_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_BRBTGT_EL1_Type_reg := (vector_32_BRBTGT_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_32_PMEVTYPER_EL0_Type) v where "vector_of_regval (\<lambda>v. PMEVTYPER_EL0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_PMEVTYPER_EL0_Type_reg := (vector_32_PMEVTYPER_EL0_Type_reg s)(r := v)\<rparr>"
  | (vector_32_bitvector_2048) v where "vector_of_regval (\<lambda>v. bitvector_2048_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_bitvector_2048_reg := (vector_32_bitvector_2048_reg s)(r := v)\<rparr>"
  | (vector_32_bitvector_64) v where "vector_of_regval (\<lambda>v. bitvector_64_of_regval v) rv = Some v" and "s' = s\<lparr>vector_32_bitvector_64_reg := (vector_32_bitvector_64_reg s)(r := v)\<rparr>"
  | (vector_32_bool) v where "vector_of_regval (\<lambda>v. bool_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_32_bool_reg := (vector_32_bool_reg s)(r := v)\<rparr>"
  | (vector_32_int) v where "vector_of_regval (\<lambda>v. int_of_register_value v) rv = Some v" and "s' = s\<lparr>vector_32_int_reg := (vector_32_int_reg s)(r := v)\<rparr>"
  | (vector_4_AMEVCNTR0_EL0_Type) v where "vector_of_regval (\<lambda>v. AMEVCNTR0_EL0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_AMEVCNTR0_EL0_Type_reg := (vector_4_AMEVCNTR0_EL0_Type_reg s)(r := v)\<rparr>"
  | (vector_4_AMEVCNTR0_Type) v where "vector_of_regval (\<lambda>v. AMEVCNTR0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_AMEVCNTR0_Type_reg := (vector_4_AMEVCNTR0_Type_reg s)(r := v)\<rparr>"
  | (vector_4_AMEVTYPER0_EL0_Type) v where "vector_of_regval (\<lambda>v. AMEVTYPER0_EL0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_AMEVTYPER0_EL0_Type_reg := (vector_4_AMEVTYPER0_EL0_Type_reg s)(r := v)\<rparr>"
  | (vector_4_AMEVTYPER0_Type) v where "vector_of_regval (\<lambda>v. AMEVTYPER0_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_AMEVTYPER0_Type_reg := (vector_4_AMEVTYPER0_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ERRnFR_ElemType) v where "vector_of_regval (\<lambda>v. ERRnFR_ElemType_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ERRnFR_ElemType_reg := (vector_4_ERRnFR_ElemType_reg s)(r := v)\<rparr>"
  | (vector_4_ICC_AP1R_EL1_Type) v where "vector_of_regval (\<lambda>v. ICC_AP1R_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICC_AP1R_EL1_Type_reg := (vector_4_ICC_AP1R_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ICH_AP0R_EL2_Type) v where "vector_of_regval (\<lambda>v. ICH_AP0R_EL2_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICH_AP0R_EL2_Type_reg := (vector_4_ICH_AP0R_EL2_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ICH_AP0R_Type) v where "vector_of_regval (\<lambda>v. ICH_AP0R_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICH_AP0R_Type_reg := (vector_4_ICH_AP0R_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ICH_AP1R_EL2_Type) v where "vector_of_regval (\<lambda>v. ICH_AP1R_EL2_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICH_AP1R_EL2_Type_reg := (vector_4_ICH_AP1R_EL2_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ICH_AP1R_Type) v where "vector_of_regval (\<lambda>v. ICH_AP1R_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICH_AP1R_Type_reg := (vector_4_ICH_AP1R_Type_reg s)(r := v)\<rparr>"
  | (vector_4_ICV_AP1R_EL1_Type) v where "vector_of_regval (\<lambda>v. ICV_AP1R_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_ICV_AP1R_EL1_Type_reg := (vector_4_ICV_AP1R_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_4_bitvector_32) v where "vector_of_regval (\<lambda>v. bitvector_32_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_bitvector_32_reg := (vector_4_bitvector_32_reg s)(r := v)\<rparr>"
  | (vector_4_bitvector_64) v where "vector_of_regval (\<lambda>v. bitvector_64_of_regval v) rv = Some v" and "s' = s\<lparr>vector_4_bitvector_64_reg := (vector_4_bitvector_64_reg s)(r := v)\<rparr>"
  | (vector_5_bitvector_64) v where "vector_of_regval (\<lambda>v. bitvector_64_of_regval v) rv = Some v" and "s' = s\<lparr>vector_5_bitvector_64_reg := (vector_5_bitvector_64_reg s)(r := v)\<rparr>"
  | (vector_64_BRBINFType) v where "vector_of_regval (\<lambda>v. BRBINFType_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_BRBINFType_reg := (vector_64_BRBINFType_reg s)(r := v)\<rparr>"
  | (vector_64_BRBSRCType) v where "vector_of_regval (\<lambda>v. BRBSRCType_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_BRBSRCType_reg := (vector_64_BRBSRCType_reg s)(r := v)\<rparr>"
  | (vector_64_BRBTGTType) v where "vector_of_regval (\<lambda>v. BRBTGTType_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_BRBTGTType_reg := (vector_64_BRBTGTType_reg s)(r := v)\<rparr>"
  | (vector_64_DBGBCR_EL1_Type) v where "vector_of_regval (\<lambda>v. DBGBCR_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_DBGBCR_EL1_Type_reg := (vector_64_DBGBCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_64_DBGBVR_EL1_Type) v where "vector_of_regval (\<lambda>v. DBGBVR_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_DBGBVR_EL1_Type_reg := (vector_64_DBGBVR_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_64_DBGWCR_EL1_Type) v where "vector_of_regval (\<lambda>v. DBGWCR_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_DBGWCR_EL1_Type_reg := (vector_64_DBGWCR_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_64_DBGWVR_EL1_Type) v where "vector_of_regval (\<lambda>v. DBGWVR_EL1_Type_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_DBGWVR_EL1_Type_reg := (vector_64_DBGWVR_EL1_Type_reg s)(r := v)\<rparr>"
  | (vector_64_bitvector_8) v where "vector_of_regval (\<lambda>v. bitvector_8_of_regval v) rv = Some v" and "s' = s\<lparr>vector_64_bitvector_8_reg := (vector_64_bitvector_8_reg s)(r := v)\<rparr>"
  | (vector_7_bitvector_64) v where "vector_of_regval (\<lambda>v. bitvector_64_of_regval v) rv = Some v" and "s' = s\<lparr>vector_7_bitvector_64_reg := (vector_7_bitvector_64_reg s)(r := v)\<rparr>"
proof -
  from assms show ?thesis
    unfolding set_regval_unfold registers_def
    apply (elim option_bind_SomeE map_of_Cons_SomeE)
    subgoal using option_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_AMEVTYPER1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_AMEVTYPER0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_ICH_LRC_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDTRTXint_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDTRRXint_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGOSECCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMINTENSET_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_ICH_LR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICH_AP0R_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICH_AP1R_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDTRRXext_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGOSLAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDTRTXext_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_BRBSRC_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_BRBTGT_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_BRBINF_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using ERXGSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_AMEVTYPER1_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_AMEVCNTR0_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_AMEVCNTR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_AMEVCNTR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_AMEVCNTR1_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTV_CVAL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using SPMACCESSR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICV_AP1R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using RNDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMPRIMAP_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RNDRRS_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using PMIAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using PMICNTSVR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPMACCESSR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using PMCCNTSVR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICC_AP1R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICC_AP1R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICH_AP0R_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_31_PMEVCNTSVR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ICH_AP1R_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPMACCESSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_ICH_LR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCCNTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMOVSSET_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_31_bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_DBGWVR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_DBGWCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_DBGBXVR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_DBGBVR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_DBGBCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_1 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DACR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DACR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HMAIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HMAIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using BRBTGTINJ_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using BRBSRCINJ_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_int by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_bitvector_8 by (auto simp: register_defs fun_upd_def)
    subgoal using PMSDSFR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMBPTR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCCNTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_16 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_16 by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64PFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64MMFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64ISAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64DFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64DFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_TYPER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using EDDEVARCH_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIDEVARCH_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTFID0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using AMIIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_AMEVTYPER0_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMDEVARCH_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPMSELR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMPRI_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMZR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMXEVCNTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMUACR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSSCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSNEVFR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSLATFR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSIRR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSICR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSFCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSEVFR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMMIR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMECR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMBIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using OSLAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using MECIDR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDSELR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using LORSA_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using LORN_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using LORID_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using LOREA_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using LORC_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64ZFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64SMFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64PFR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64PFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64MMFR4_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64MMFR3_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64MMFR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64MMFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64ISAR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_AA64ISAR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_NMIAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_NMIAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN1_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_CTLR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HFGWTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HFGWTR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HFGRTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HFGRTR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using HDFGWTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HDFGWTR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HDFGRTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HDFGRTR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HAFGRTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GMID_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DCZID_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using DACR32_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTV_TVAL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_TVAL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTPS_TVAL_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHV_TVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHVS_TVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHP_TVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHPS_TVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using BRBINFINJ_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCG1IDR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ACCDATA_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using TLBTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID1_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCEID0_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using NMRR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using NMRR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR4_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR3_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR6_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR6_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR4_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR3_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_DFR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_DFR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using FPSID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDEVID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CLIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VTCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VPIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VPIDR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VMPIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VMPIDR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBCR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBCR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TRFCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TRFCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RMR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RMR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PRRR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PRRR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMVIDSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMVCIDSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMUSERENR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMUSERENR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSWINC_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSWINC_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSELR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSELR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPIDR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPCSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMPCSCTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMOVS_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMMIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMLSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMLAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMITCTRL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMINTEN_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMINTENSET_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMIIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMDEVTYPE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMDEVID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCNTEN_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCGCR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCFGR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMAUTHSTATUS_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MVFR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using ISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ISR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_PFR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR5_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_MMFR5_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR5_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR5_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_ISAR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_DFR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ID_DFR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_RPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_RPR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_PMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_PMR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IGRPEN1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IGRPEN1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IGRPEN0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IGRPEN0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IAR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IAR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_IAR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_HPPIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_HPPIR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_HPPIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_HPPIR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_EOIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_EOIR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_EOIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_EOIR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_DIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_DIR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_CTLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_BPR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_BPR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_BPR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICV_BPR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_VTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_VTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_VMCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_VMCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_MISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_MISR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_HCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_HCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_ELRSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_ELRSR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_EISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICH_EISR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SGI1R_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SGI1R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SGI0R_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SGI0R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_RPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_RPR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_PMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_MSRE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_MGRPEN1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_MCTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IGRPEN0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IAR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IAR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IAR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_IAR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_HSRE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_SRE_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_HPPIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_HPPIR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_HPPIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_HPPIR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_EOIR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_EOIR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_EOIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_EOIR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_DIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_DIR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_CTLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_CTLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_BPR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_ASGI1R_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_ASGI1R_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HTRFCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TRFCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HTCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HSTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HSTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HRMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RMR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_TYPER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_STATUSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_SGIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_PARTIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_MPIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_MPAMIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_IIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_CWRITER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_CREADR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GITS_CBASER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_STATUSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_RPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_PMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_IAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_HPPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_EOIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_DIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_BPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_AIAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_AHPPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_AEOIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICV_ABPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_WAKER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_VSGIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_VSGIPENDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_VPROPBASER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_VPENDBASER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_SYNCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_STATUSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_SETLPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_PROPBASER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_PENDBASER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_PARTIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_MPAMIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_ISENABLER0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_INVLPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_INVALLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_INMIR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_IIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICR_CLRLPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_TYPER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_SETSPI_SR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_SETSPI_NSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_IIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_CLRSPI_SR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICM_CLRSPI_NSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_VTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_VMCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_MISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_HCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_ELRSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICH_EISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_TYPER2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_STATUSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_SGIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_SETSPI_SR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_SETSPI_NSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_IIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_CLRSPI_SR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICD_CLRSPI_NSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_STATUSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_RPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_PMR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_IAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_HPPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_EOIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_DIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_BPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_AIAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_AHPPIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_AEOIR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_ABPR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using ERRSELR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ERRSELR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ERRIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ERRIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDVIDSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDRCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPRSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPRCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPIDR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPFR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDPCSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDLSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDLAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDITCTRL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDHSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDDFR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDDFR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDDEVTYPE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using EDDEVID1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDDEVID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDCIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDCIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDCIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDCIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDAA32PFR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGVCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGVCR32_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDRAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDRAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDEVID1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDCCINT_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDCCINT_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGCLAIMSET_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGCLAIMSET_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGCLAIMCLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGCLAIMCLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGAUTHSTATUS_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGAUTHSTATUS_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIPIDR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIPIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIPIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIPIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIPIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTILSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTILAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIITCTRL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIDEVTYPE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using CTIDEVID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIDEVCTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTICONTROL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTICIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTICIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTICIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTICIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CTIAUTHSTATUS_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CSSELR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CSSELR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CSSELR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTV_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTNSAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTID_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHV_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHVS_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHPS_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHCTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTEL0ACR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CCSIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CCSIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CCSIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CCSIDR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMUSERENR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMUSERENR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMPIDR4_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMPIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMPIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMPIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMPIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMDEVTYPE_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENSET1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENSET1_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENSET0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENSET0_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENCLR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENCLR1_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENCLR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCNTENCLR0_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCIDR3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCIDR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCIDR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCIDR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCGCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCGCR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCFGR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using AMCFGR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RVBAR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RVBAR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RVBAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VDISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VDISR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VDFSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VSESR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DISR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DISR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HFGITR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VNCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RCWSMASK_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RCWMASK_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bool by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bool by (auto simp: register_defs fun_upd_def)
    subgoal using VMECID_A_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using S2POR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VSTTBR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VSTCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using S2PIR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MECID_RL_A_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MECID_P1_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MECID_A1_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MECID_A0_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VMECID_P_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MECID_P0_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using POR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using POR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using POR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using POR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_DBGWVR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_DBGWCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VTTBR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VTTBR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using VTCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDSCR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_DBGBVR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_DBGBCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CONTEXTIDR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TFSR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TFSR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TFSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TFSRE0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using RGSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTKCTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR0_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR2_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PIR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR2_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PIRE0_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TCR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PIR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TCR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PIR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PIRE0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MAIR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GICC_CTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using GPTBR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GPCCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTKCTL_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTSCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTPS_CVAL_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTPS_CTL_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHV_CVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHV_CTL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHVS_CVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHVS_CTL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHPS_CVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHPS_CTL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTV_CVAL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTV_CTL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CVAL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CVAL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CVAL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTP_CTL_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHP_CVAL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHP_CVAL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHP_CTL_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHP_CTL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using FPEXC_Type by (auto simp: register_defs fun_upd_def)
    subgoal using FPEXC32_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR2_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using HCR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDSCRext_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGDSCRint_Type by (auto simp: register_defs fun_upd_def)
    subgoal using IFSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using IFSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using IFSR32_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DFSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DFSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using MVBAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using HSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HPFAR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR1_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR0_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HTTBR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBR0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CONTEXTIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CONTEXTIDR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TTBCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CONTEXTIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CLIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMSM_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAM0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM7_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM6_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM5_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM4_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM3_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM1_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPMV_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMVPM0_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMHCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAMIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAM1_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAM3_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MPAM2_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HCRX_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSCRE0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using EDESR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDECCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using OSECCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_und_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_svc_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_mon_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_irq_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_hyp_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_fiq_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_abt_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SPSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using PFAR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PFAR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MFAR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HPFAR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using ESR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ESR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ESR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HSCTLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCTLR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGOSLSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using OSLSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDSCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using option_InterruptID by (auto simp: register_defs fun_upd_def)
    subgoal using option_InterruptID by (auto simp: register_defs fun_upd_def)
    subgoal using DBGPRCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGPRCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DBGOSDLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using OSDLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using NSACR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HCPTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CPACR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CPTR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CPTR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using CPACR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSPR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSPR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSPR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using GCSPR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SMCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ZCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ZCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using ZCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMBSR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMBLIMITR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMSCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bool by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using PMSIDR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_BRBTGTType by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_BRBSRCType by (auto simp: register_defs fun_upd_def)
    subgoal using vector_64_BRBINFType by (auto simp: register_defs fun_upd_def)
    subgoal using BRBIDR0_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using TCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DSPSR2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DSPSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using DSPSR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using EDECR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_3 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_8 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_16 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_2 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_2 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using CNTHCTL_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using BRBTS_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using BRBFCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using BRBCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using BRBCR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMOVSSET_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMICNTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SDER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SDER32_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SDER32_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SDCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMICFILTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_31_PMEVTYPER_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_PMEVTYPER_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCNTENSET_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCNTENSET_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCCFILTR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCCFILTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMOVSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMOVSCLR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMINTENCLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMINTENCLR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCNTENCLR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using PMCNTENCLR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using EDSCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDCCSR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HDCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using MDCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using CTR_EL0_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_4_ERRnFR_ElemType by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using FPSCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using SCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using SCR_EL3_Type by (auto simp: register_defs fun_upd_def)
    subgoal using HCR_EL2_Type by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_7_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_7_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using BranchType by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_4 by (auto simp: register_defs fun_upd_def)
    subgoal using InstrEnc by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_56 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_24 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_8 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_2 by (auto simp: register_defs fun_upd_def)
    subgoal using OpType by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_16 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using TMState by (auto simp: register_defs fun_upd_def)
    subgoal using ICC_PMR_EL1_Type by (auto simp: register_defs fun_upd_def)
    subgoal using FPSR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using FPCR_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_512 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_256_bitvector_2048 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_256 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_bitvector_256 by (auto simp: register_defs fun_upd_def)
    subgoal using vector_32_bitvector_2048 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_2 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using vector_5_bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_88 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_64 by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_1 by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using ProcState by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using vector_31_bool by (auto simp: register_defs fun_upd_def)
    subgoal using vector_31_int by (auto simp: register_defs fun_upd_def)
    subgoal using DormantCtl_Type by (auto simp: register_defs fun_upd_def)
    subgoal using Configuration_Type by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using Signal by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using bitvector_32 by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    subgoal using vector_16_bool by (auto simp: register_defs fun_upd_def)
    subgoal using vector_259_bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using bool by (auto simp: register_defs fun_upd_def)
    subgoal using int by (auto simp: register_defs fun_upd_def)
    by auto
qed

lemma get_regval_type_cases:
  fixes r :: string
  obtains (ACCDATA_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ACCDATA_EL1_Type (ACCDATA_EL1_Type_reg s r)))"
  | (AMCFGR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCFGR_EL0_Type (AMCFGR_EL0_Type_reg s r)))"
  | (AMCFGR_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCFGR_Type (AMCFGR_Type_reg s r)))"
  | (AMCG1IDR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCG1IDR_EL0_Type (AMCG1IDR_EL0_Type_reg s r)))"
  | (AMCGCR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCGCR_EL0_Type (AMCGCR_EL0_Type_reg s r)))"
  | (AMCGCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCGCR_Type (AMCGCR_Type_reg s r)))"
  | (AMCIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCIDR0_Type (AMCIDR0_Type_reg s r)))"
  | (AMCIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCIDR1_Type (AMCIDR1_Type_reg s r)))"
  | (AMCIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCIDR2_Type (AMCIDR2_Type_reg s r)))"
  | (AMCIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCIDR3_Type (AMCIDR3_Type_reg s r)))"
  | (AMCNTENCLR0_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENCLR0_EL0_Type (AMCNTENCLR0_EL0_Type_reg s r)))"
  | (AMCNTENCLR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENCLR0_Type (AMCNTENCLR0_Type_reg s r)))"
  | (AMCNTENCLR1_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENCLR1_EL0_Type (AMCNTENCLR1_EL0_Type_reg s r)))"
  | (AMCNTENCLR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENCLR1_Type (AMCNTENCLR1_Type_reg s r)))"
  | (AMCNTENSET0_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENSET0_EL0_Type (AMCNTENSET0_EL0_Type_reg s r)))"
  | (AMCNTENSET0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENSET0_Type (AMCNTENSET0_Type_reg s r)))"
  | (AMCNTENSET1_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENSET1_EL0_Type (AMCNTENSET1_EL0_Type_reg s r)))"
  | (AMCNTENSET1_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCNTENSET1_Type (AMCNTENSET1_Type_reg s r)))"
  | (AMCR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCR_EL0_Type (AMCR_EL0_Type_reg s r)))"
  | (AMCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMCR_Type (AMCR_Type_reg s r)))"
  | (AMDEVARCH_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMDEVARCH_Type (AMDEVARCH_Type_reg s r)))"
  | (AMDEVTYPE_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMDEVTYPE_Type (AMDEVTYPE_Type_reg s r)))"
  | (AMIIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMIIDR_Type (AMIIDR_Type_reg s r)))"
  | (AMPIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMPIDR0_Type (AMPIDR0_Type_reg s r)))"
  | (AMPIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMPIDR1_Type (AMPIDR1_Type_reg s r)))"
  | (AMPIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMPIDR2_Type (AMPIDR2_Type_reg s r)))"
  | (AMPIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMPIDR3_Type (AMPIDR3_Type_reg s r)))"
  | (AMPIDR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMPIDR4_Type (AMPIDR4_Type_reg s r)))"
  | (AMUSERENR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMUSERENR_EL0_Type (AMUSERENR_EL0_Type_reg s r)))"
  | (AMUSERENR_Type) "get_regval r = (\<lambda>s. Some (regval_of_AMUSERENR_Type (AMUSERENR_Type_reg s r)))"
  | (BRBCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBCR_EL1_Type (BRBCR_EL1_Type_reg s r)))"
  | (BRBCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBCR_EL2_Type (BRBCR_EL2_Type_reg s r)))"
  | (BRBFCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBFCR_EL1_Type (BRBFCR_EL1_Type_reg s r)))"
  | (BRBIDR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBIDR0_EL1_Type (BRBIDR0_EL1_Type_reg s r)))"
  | (BRBINFINJ_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBINFINJ_EL1_Type (BRBINFINJ_EL1_Type_reg s r)))"
  | (BRBSRCINJ_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBSRCINJ_EL1_Type (BRBSRCINJ_EL1_Type_reg s r)))"
  | (BRBTGTINJ_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBTGTINJ_EL1_Type (BRBTGTINJ_EL1_Type_reg s r)))"
  | (BRBTS_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_BRBTS_EL1_Type (BRBTS_EL1_Type_reg s r)))"
  | (BranchType) "get_regval r = (\<lambda>s. Some (regval_of_BranchType (BranchType_reg s r)))"
  | (CCSIDR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CCSIDR2_EL1_Type (CCSIDR2_EL1_Type_reg s r)))"
  | (CCSIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CCSIDR2_Type (CCSIDR2_Type_reg s r)))"
  | (CCSIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CCSIDR_EL1_Type (CCSIDR_EL1_Type_reg s r)))"
  | (CCSIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CCSIDR_Type (CCSIDR_Type_reg s r)))"
  | (CLIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CLIDR_EL1_Type (CLIDR_EL1_Type_reg s r)))"
  | (CLIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CLIDR_Type (CLIDR_Type_reg s r)))"
  | (CNTCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTCR_Type (CNTCR_Type_reg s r)))"
  | (CNTEL0ACR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTEL0ACR_Type (CNTEL0ACR_Type_reg s r)))"
  | (CNTFID0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTFID0_Type (CNTFID0_Type_reg s r)))"
  | (CNTHCTL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHCTL_EL2_Type (CNTHCTL_EL2_Type_reg s r)))"
  | (CNTHCTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHCTL_Type (CNTHCTL_Type_reg s r)))"
  | (CNTHPS_CTL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHPS_CTL_EL2_Type (CNTHPS_CTL_EL2_Type_reg s r)))"
  | (CNTHPS_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHPS_CTL_Type (CNTHPS_CTL_Type_reg s r)))"
  | (CNTHPS_CVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHPS_CVAL_EL2_Type (CNTHPS_CVAL_EL2_Type_reg s r)))"
  | (CNTHPS_TVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHPS_TVAL_EL2_Type (CNTHPS_TVAL_EL2_Type_reg s r)))"
  | (CNTHP_CTL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHP_CTL_EL2_Type (CNTHP_CTL_EL2_Type_reg s r)))"
  | (CNTHP_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHP_CTL_Type (CNTHP_CTL_Type_reg s r)))"
  | (CNTHP_CVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHP_CVAL_EL2_Type (CNTHP_CVAL_EL2_Type_reg s r)))"
  | (CNTHP_CVAL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHP_CVAL_Type (CNTHP_CVAL_Type_reg s r)))"
  | (CNTHP_TVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHP_TVAL_EL2_Type (CNTHP_TVAL_EL2_Type_reg s r)))"
  | (CNTHVS_CTL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHVS_CTL_EL2_Type (CNTHVS_CTL_EL2_Type_reg s r)))"
  | (CNTHVS_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHVS_CTL_Type (CNTHVS_CTL_Type_reg s r)))"
  | (CNTHVS_CVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHVS_CVAL_EL2_Type (CNTHVS_CVAL_EL2_Type_reg s r)))"
  | (CNTHVS_TVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHVS_TVAL_EL2_Type (CNTHVS_TVAL_EL2_Type_reg s r)))"
  | (CNTHV_CTL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHV_CTL_EL2_Type (CNTHV_CTL_EL2_Type_reg s r)))"
  | (CNTHV_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHV_CTL_Type (CNTHV_CTL_Type_reg s r)))"
  | (CNTHV_CVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHV_CVAL_EL2_Type (CNTHV_CVAL_EL2_Type_reg s r)))"
  | (CNTHV_TVAL_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTHV_TVAL_EL2_Type (CNTHV_TVAL_EL2_Type_reg s r)))"
  | (CNTID_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTID_Type (CNTID_Type_reg s r)))"
  | (CNTKCTL_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTKCTL_EL1_Type (CNTKCTL_EL1_Type_reg s r)))"
  | (CNTKCTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTKCTL_Type (CNTKCTL_Type_reg s r)))"
  | (CNTNSAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTNSAR_Type (CNTNSAR_Type_reg s r)))"
  | (CNTPS_CTL_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTPS_CTL_EL1_Type (CNTPS_CTL_EL1_Type_reg s r)))"
  | (CNTPS_CVAL_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTPS_CVAL_EL1_Type (CNTPS_CVAL_EL1_Type_reg s r)))"
  | (CNTPS_TVAL_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTPS_TVAL_EL1_Type (CNTPS_TVAL_EL1_Type_reg s r)))"
  | (CNTP_CTL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTP_CTL_EL0_Type (CNTP_CTL_EL0_Type_reg s r)))"
  | (CNTP_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTP_CTL_Type (CNTP_CTL_Type_reg s r)))"
  | (CNTP_CVAL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTP_CVAL_EL0_Type (CNTP_CVAL_EL0_Type_reg s r)))"
  | (CNTP_CVAL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTP_CVAL_Type (CNTP_CVAL_Type_reg s r)))"
  | (CNTP_TVAL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTP_TVAL_EL0_Type (CNTP_TVAL_EL0_Type_reg s r)))"
  | (CNTSCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTSCR_Type (CNTSCR_Type_reg s r)))"
  | (CNTSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTSR_Type (CNTSR_Type_reg s r)))"
  | (CNTV_CTL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTV_CTL_EL0_Type (CNTV_CTL_EL0_Type_reg s r)))"
  | (CNTV_CTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTV_CTL_Type (CNTV_CTL_Type_reg s r)))"
  | (CNTV_CVAL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTV_CVAL_EL0_Type (CNTV_CVAL_EL0_Type_reg s r)))"
  | (CNTV_CVAL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTV_CVAL_Type (CNTV_CVAL_Type_reg s r)))"
  | (CNTV_TVAL_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CNTV_TVAL_EL0_Type (CNTV_TVAL_EL0_Type_reg s r)))"
  | (CONTEXTIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CONTEXTIDR_EL1_Type (CONTEXTIDR_EL1_Type_reg s r)))"
  | (CONTEXTIDR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CONTEXTIDR_EL2_Type (CONTEXTIDR_EL2_Type_reg s r)))"
  | (CONTEXTIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CONTEXTIDR_Type (CONTEXTIDR_Type_reg s r)))"
  | (CPACR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CPACR_EL1_Type (CPACR_EL1_Type_reg s r)))"
  | (CPACR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CPACR_Type (CPACR_Type_reg s r)))"
  | (CPTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CPTR_EL2_Type (CPTR_EL2_Type_reg s r)))"
  | (CPTR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_CPTR_EL3_Type (CPTR_EL3_Type_reg s r)))"
  | (CSSELR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CSSELR_EL1_Type (CSSELR_EL1_Type_reg s r)))"
  | (CSSELR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CSSELR_Type (CSSELR_Type_reg s r)))"
  | (CTIAUTHSTATUS_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIAUTHSTATUS_Type (CTIAUTHSTATUS_Type_reg s r)))"
  | (CTICIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTICIDR0_Type (CTICIDR0_Type_reg s r)))"
  | (CTICIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTICIDR1_Type (CTICIDR1_Type_reg s r)))"
  | (CTICIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTICIDR2_Type (CTICIDR2_Type_reg s r)))"
  | (CTICIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTICIDR3_Type (CTICIDR3_Type_reg s r)))"
  | (CTICONTROL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTICONTROL_Type (CTICONTROL_Type_reg s r)))"
  | (CTIDEVARCH_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIDEVARCH_Type (CTIDEVARCH_Type_reg s r)))"
  | (CTIDEVCTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIDEVCTL_Type (CTIDEVCTL_Type_reg s r)))"
  | (CTIDEVID_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIDEVID_Type (CTIDEVID_Type_reg s r)))"
  | (CTIDEVTYPE_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIDEVTYPE_Type (CTIDEVTYPE_Type_reg s r)))"
  | (CTIITCTRL_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIITCTRL_Type (CTIITCTRL_Type_reg s r)))"
  | (CTILAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTILAR_Type (CTILAR_Type_reg s r)))"
  | (CTILSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTILSR_Type (CTILSR_Type_reg s r)))"
  | (CTIPIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIPIDR0_Type (CTIPIDR0_Type_reg s r)))"
  | (CTIPIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIPIDR1_Type (CTIPIDR1_Type_reg s r)))"
  | (CTIPIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIPIDR2_Type (CTIPIDR2_Type_reg s r)))"
  | (CTIPIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIPIDR3_Type (CTIPIDR3_Type_reg s r)))"
  | (CTIPIDR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTIPIDR4_Type (CTIPIDR4_Type_reg s r)))"
  | (CTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTR_EL0_Type (CTR_EL0_Type_reg s r)))"
  | (CTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_CTR_Type (CTR_Type_reg s r)))"
  | (Configuration_Type) "get_regval r = (\<lambda>s. Some (regval_of_Configuration_Type (Configuration_Type_reg s r)))"
  | (DACR32_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_DACR32_EL2_Type (DACR32_EL2_Type_reg s r)))"
  | (DACR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DACR_Type (DACR_Type_reg s r)))"
  | (DBGAUTHSTATUS_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGAUTHSTATUS_EL1_Type (DBGAUTHSTATUS_EL1_Type_reg s r)))"
  | (DBGAUTHSTATUS_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGAUTHSTATUS_Type (DBGAUTHSTATUS_Type_reg s r)))"
  | (DBGCLAIMCLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGCLAIMCLR_EL1_Type (DBGCLAIMCLR_EL1_Type_reg s r)))"
  | (DBGCLAIMCLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGCLAIMCLR_Type (DBGCLAIMCLR_Type_reg s r)))"
  | (DBGCLAIMSET_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGCLAIMSET_EL1_Type (DBGCLAIMSET_EL1_Type_reg s r)))"
  | (DBGCLAIMSET_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGCLAIMSET_Type (DBGCLAIMSET_Type_reg s r)))"
  | (DBGDCCINT_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDCCINT_Type (DBGDCCINT_Type_reg s r)))"
  | (DBGDEVID1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDEVID1_Type (DBGDEVID1_Type_reg s r)))"
  | (DBGDEVID_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDEVID_Type (DBGDEVID_Type_reg s r)))"
  | (DBGDIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDIDR_Type (DBGDIDR_Type_reg s r)))"
  | (DBGDRAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDRAR_Type (DBGDRAR_Type_reg s r)))"
  | (DBGDSCRext_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDSCRext_Type (DBGDSCRext_Type_reg s r)))"
  | (DBGDSCRint_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDSCRint_Type (DBGDSCRint_Type_reg s r)))"
  | (DBGDTRRXext_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDTRRXext_Type (DBGDTRRXext_Type_reg s r)))"
  | (DBGDTRRXint_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDTRRXint_Type (DBGDTRRXint_Type_reg s r)))"
  | (DBGDTRTXext_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDTRTXext_Type (DBGDTRTXext_Type_reg s r)))"
  | (DBGDTRTXint_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDTRTXint_Type (DBGDTRTXint_Type_reg s r)))"
  | (DBGDTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGDTR_EL0_Type (DBGDTR_EL0_Type_reg s r)))"
  | (DBGOSDLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGOSDLR_Type (DBGOSDLR_Type_reg s r)))"
  | (DBGOSECCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGOSECCR_Type (DBGOSECCR_Type_reg s r)))"
  | (DBGOSLAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGOSLAR_Type (DBGOSLAR_Type_reg s r)))"
  | (DBGOSLSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGOSLSR_Type (DBGOSLSR_Type_reg s r)))"
  | (DBGPRCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGPRCR_EL1_Type (DBGPRCR_EL1_Type_reg s r)))"
  | (DBGPRCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGPRCR_Type (DBGPRCR_Type_reg s r)))"
  | (DBGVCR32_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGVCR32_EL2_Type (DBGVCR32_EL2_Type_reg s r)))"
  | (DBGVCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DBGVCR_Type (DBGVCR_Type_reg s r)))"
  | (DCZID_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_DCZID_EL0_Type (DCZID_EL0_Type_reg s r)))"
  | (DFSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DFSR_Type (DFSR_Type_reg s r)))"
  | (DISR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_DISR_EL1_Type (DISR_EL1_Type_reg s r)))"
  | (DISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DISR_Type (DISR_Type_reg s r)))"
  | (DSPSR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_DSPSR2_Type (DSPSR2_Type_reg s r)))"
  | (DSPSR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_DSPSR_EL0_Type (DSPSR_EL0_Type_reg s r)))"
  | (DSPSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_DSPSR_Type (DSPSR_Type_reg s r)))"
  | (DormantCtl_Type) "get_regval r = (\<lambda>s. Some (regval_of_DormantCtl_Type (DormantCtl_Type_reg s r)))"
  | (EDAA32PFR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDAA32PFR_Type (EDAA32PFR_Type_reg s r)))"
  | (EDCIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDCIDR0_Type (EDCIDR0_Type_reg s r)))"
  | (EDCIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDCIDR1_Type (EDCIDR1_Type_reg s r)))"
  | (EDCIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDCIDR2_Type (EDCIDR2_Type_reg s r)))"
  | (EDCIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDCIDR3_Type (EDCIDR3_Type_reg s r)))"
  | (EDDEVARCH_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDEVARCH_Type (EDDEVARCH_Type_reg s r)))"
  | (EDDEVID1_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDEVID1_Type (EDDEVID1_Type_reg s r)))"
  | (EDDEVID_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDEVID_Type (EDDEVID_Type_reg s r)))"
  | (EDDEVTYPE_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDEVTYPE_Type (EDDEVTYPE_Type_reg s r)))"
  | (EDDFR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDFR1_Type (EDDFR1_Type_reg s r)))"
  | (EDDFR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDDFR_Type (EDDFR_Type_reg s r)))"
  | (EDECCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDECCR_Type (EDECCR_Type_reg s r)))"
  | (EDECR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDECR_Type (EDECR_Type_reg s r)))"
  | (EDESR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDESR_Type (EDESR_Type_reg s r)))"
  | (EDHSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDHSR_Type (EDHSR_Type_reg s r)))"
  | (EDITCTRL_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDITCTRL_Type (EDITCTRL_Type_reg s r)))"
  | (EDLAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDLAR_Type (EDLAR_Type_reg s r)))"
  | (EDLSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDLSR_Type (EDLSR_Type_reg s r)))"
  | (EDPCSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPCSR_Type (EDPCSR_Type_reg s r)))"
  | (EDPFR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPFR_Type (EDPFR_Type_reg s r)))"
  | (EDPIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPIDR0_Type (EDPIDR0_Type_reg s r)))"
  | (EDPIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPIDR1_Type (EDPIDR1_Type_reg s r)))"
  | (EDPIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPIDR2_Type (EDPIDR2_Type_reg s r)))"
  | (EDPIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPIDR3_Type (EDPIDR3_Type_reg s r)))"
  | (EDPIDR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPIDR4_Type (EDPIDR4_Type_reg s r)))"
  | (EDPRCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPRCR_Type (EDPRCR_Type_reg s r)))"
  | (EDPRSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDPRSR_Type (EDPRSR_Type_reg s r)))"
  | (EDRCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDRCR_Type (EDRCR_Type_reg s r)))"
  | (EDSCR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDSCR2_Type (EDSCR2_Type_reg s r)))"
  | (EDSCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDSCR_Type (EDSCR_Type_reg s r)))"
  | (EDVIDSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_EDVIDSR_Type (EDVIDSR_Type_reg s r)))"
  | (ERRIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ERRIDR_EL1_Type (ERRIDR_EL1_Type_reg s r)))"
  | (ERRIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ERRIDR_Type (ERRIDR_Type_reg s r)))"
  | (ERRSELR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ERRSELR_EL1_Type (ERRSELR_EL1_Type_reg s r)))"
  | (ERRSELR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ERRSELR_Type (ERRSELR_Type_reg s r)))"
  | (ERXGSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ERXGSR_EL1_Type (ERXGSR_EL1_Type_reg s r)))"
  | (ESR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ESR_EL1_Type (ESR_EL1_Type_reg s r)))"
  | (ESR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ESR_EL2_Type (ESR_EL2_Type_reg s r)))"
  | (ESR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ESR_EL3_Type (ESR_EL3_Type_reg s r)))"
  | (FPCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPCR_Type (FPCR_Type_reg s r)))"
  | (FPEXC32_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPEXC32_EL2_Type (FPEXC32_EL2_Type_reg s r)))"
  | (FPEXC_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPEXC_Type (FPEXC_Type_reg s r)))"
  | (FPSCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPSCR_Type (FPSCR_Type_reg s r)))"
  | (FPSID_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPSID_Type (FPSID_Type_reg s r)))"
  | (FPSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_FPSR_Type (FPSR_Type_reg s r)))"
  | (GCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCR_EL1_Type (GCR_EL1_Type_reg s r)))"
  | (GCSCRE0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSCRE0_EL1_Type (GCSCRE0_EL1_Type_reg s r)))"
  | (GCSCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSCR_EL1_Type (GCSCR_EL1_Type_reg s r)))"
  | (GCSCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSCR_EL2_Type (GCSCR_EL2_Type_reg s r)))"
  | (GCSCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSCR_EL3_Type (GCSCR_EL3_Type_reg s r)))"
  | (GCSPR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSPR_EL0_Type (GCSPR_EL0_Type_reg s r)))"
  | (GCSPR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSPR_EL1_Type (GCSPR_EL1_Type_reg s r)))"
  | (GCSPR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSPR_EL2_Type (GCSPR_EL2_Type_reg s r)))"
  | (GCSPR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_GCSPR_EL3_Type (GCSPR_EL3_Type_reg s r)))"
  | (GICC_ABPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_ABPR_Type (GICC_ABPR_Type_reg s r)))"
  | (GICC_AEOIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_AEOIR_Type (GICC_AEOIR_Type_reg s r)))"
  | (GICC_AHPPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_AHPPIR_Type (GICC_AHPPIR_Type_reg s r)))"
  | (GICC_AIAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_AIAR_Type (GICC_AIAR_Type_reg s r)))"
  | (GICC_BPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_BPR_Type (GICC_BPR_Type_reg s r)))"
  | (GICC_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_CTLR_Type (GICC_CTLR_Type_reg s r)))"
  | (GICC_DIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_DIR_Type (GICC_DIR_Type_reg s r)))"
  | (GICC_EOIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_EOIR_Type (GICC_EOIR_Type_reg s r)))"
  | (GICC_HPPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_HPPIR_Type (GICC_HPPIR_Type_reg s r)))"
  | (GICC_IAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_IAR_Type (GICC_IAR_Type_reg s r)))"
  | (GICC_PMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_PMR_Type (GICC_PMR_Type_reg s r)))"
  | (GICC_RPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_RPR_Type (GICC_RPR_Type_reg s r)))"
  | (GICC_STATUSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICC_STATUSR_Type (GICC_STATUSR_Type_reg s r)))"
  | (GICD_CLRSPI_NSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_CLRSPI_NSR_Type (GICD_CLRSPI_NSR_Type_reg s r)))"
  | (GICD_CLRSPI_SR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_CLRSPI_SR_Type (GICD_CLRSPI_SR_Type_reg s r)))"
  | (GICD_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_CTLR_Type (GICD_CTLR_Type_reg s r)))"
  | (GICD_IIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_IIDR_Type (GICD_IIDR_Type_reg s r)))"
  | (GICD_SETSPI_NSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_SETSPI_NSR_Type (GICD_SETSPI_NSR_Type_reg s r)))"
  | (GICD_SETSPI_SR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_SETSPI_SR_Type (GICD_SETSPI_SR_Type_reg s r)))"
  | (GICD_SGIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_SGIR_Type (GICD_SGIR_Type_reg s r)))"
  | (GICD_STATUSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_STATUSR_Type (GICD_STATUSR_Type_reg s r)))"
  | (GICD_TYPER2_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_TYPER2_Type (GICD_TYPER2_Type_reg s r)))"
  | (GICD_TYPER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICD_TYPER_Type (GICD_TYPER_Type_reg s r)))"
  | (GICH_EISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_EISR_Type (GICH_EISR_Type_reg s r)))"
  | (GICH_ELRSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_ELRSR_Type (GICH_ELRSR_Type_reg s r)))"
  | (GICH_HCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_HCR_Type (GICH_HCR_Type_reg s r)))"
  | (GICH_MISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_MISR_Type (GICH_MISR_Type_reg s r)))"
  | (GICH_VMCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_VMCR_Type (GICH_VMCR_Type_reg s r)))"
  | (GICH_VTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICH_VTR_Type (GICH_VTR_Type_reg s r)))"
  | (GICM_CLRSPI_NSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_CLRSPI_NSR_Type (GICM_CLRSPI_NSR_Type_reg s r)))"
  | (GICM_CLRSPI_SR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_CLRSPI_SR_Type (GICM_CLRSPI_SR_Type_reg s r)))"
  | (GICM_IIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_IIDR_Type (GICM_IIDR_Type_reg s r)))"
  | (GICM_SETSPI_NSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_SETSPI_NSR_Type (GICM_SETSPI_NSR_Type_reg s r)))"
  | (GICM_SETSPI_SR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_SETSPI_SR_Type (GICM_SETSPI_SR_Type_reg s r)))"
  | (GICM_TYPER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICM_TYPER_Type (GICM_TYPER_Type_reg s r)))"
  | (GICR_CLRLPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_CLRLPIR_Type (GICR_CLRLPIR_Type_reg s r)))"
  | (GICR_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_CTLR_Type (GICR_CTLR_Type_reg s r)))"
  | (GICR_IIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_IIDR_Type (GICR_IIDR_Type_reg s r)))"
  | (GICR_INMIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_INMIR0_Type (GICR_INMIR0_Type_reg s r)))"
  | (GICR_INVALLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_INVALLR_Type (GICR_INVALLR_Type_reg s r)))"
  | (GICR_INVLPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_INVLPIR_Type (GICR_INVLPIR_Type_reg s r)))"
  | (GICR_ISENABLER0_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_ISENABLER0_Type (GICR_ISENABLER0_Type_reg s r)))"
  | (GICR_MPAMIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_MPAMIDR_Type (GICR_MPAMIDR_Type_reg s r)))"
  | (GICR_PARTIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_PARTIDR_Type (GICR_PARTIDR_Type_reg s r)))"
  | (GICR_PENDBASER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_PENDBASER_Type (GICR_PENDBASER_Type_reg s r)))"
  | (GICR_PROPBASER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_PROPBASER_Type (GICR_PROPBASER_Type_reg s r)))"
  | (GICR_SETLPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_SETLPIR_Type (GICR_SETLPIR_Type_reg s r)))"
  | (GICR_STATUSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_STATUSR_Type (GICR_STATUSR_Type_reg s r)))"
  | (GICR_SYNCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_SYNCR_Type (GICR_SYNCR_Type_reg s r)))"
  | (GICR_VPENDBASER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_VPENDBASER_Type (GICR_VPENDBASER_Type_reg s r)))"
  | (GICR_VPROPBASER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_VPROPBASER_Type (GICR_VPROPBASER_Type_reg s r)))"
  | (GICR_VSGIPENDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_VSGIPENDR_Type (GICR_VSGIPENDR_Type_reg s r)))"
  | (GICR_VSGIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_VSGIR_Type (GICR_VSGIR_Type_reg s r)))"
  | (GICR_WAKER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICR_WAKER_Type (GICR_WAKER_Type_reg s r)))"
  | (GICV_ABPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_ABPR_Type (GICV_ABPR_Type_reg s r)))"
  | (GICV_AEOIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_AEOIR_Type (GICV_AEOIR_Type_reg s r)))"
  | (GICV_AHPPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_AHPPIR_Type (GICV_AHPPIR_Type_reg s r)))"
  | (GICV_AIAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_AIAR_Type (GICV_AIAR_Type_reg s r)))"
  | (GICV_BPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_BPR_Type (GICV_BPR_Type_reg s r)))"
  | (GICV_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_CTLR_Type (GICV_CTLR_Type_reg s r)))"
  | (GICV_DIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_DIR_Type (GICV_DIR_Type_reg s r)))"
  | (GICV_EOIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_EOIR_Type (GICV_EOIR_Type_reg s r)))"
  | (GICV_HPPIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_HPPIR_Type (GICV_HPPIR_Type_reg s r)))"
  | (GICV_IAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_IAR_Type (GICV_IAR_Type_reg s r)))"
  | (GICV_PMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_PMR_Type (GICV_PMR_Type_reg s r)))"
  | (GICV_RPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_RPR_Type (GICV_RPR_Type_reg s r)))"
  | (GICV_STATUSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GICV_STATUSR_Type (GICV_STATUSR_Type_reg s r)))"
  | (GITS_CBASER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_CBASER_Type (GITS_CBASER_Type_reg s r)))"
  | (GITS_CREADR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_CREADR_Type (GITS_CREADR_Type_reg s r)))"
  | (GITS_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_CTLR_Type (GITS_CTLR_Type_reg s r)))"
  | (GITS_CWRITER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_CWRITER_Type (GITS_CWRITER_Type_reg s r)))"
  | (GITS_IIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_IIDR_Type (GITS_IIDR_Type_reg s r)))"
  | (GITS_MPAMIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_MPAMIDR_Type (GITS_MPAMIDR_Type_reg s r)))"
  | (GITS_MPIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_MPIDR_Type (GITS_MPIDR_Type_reg s r)))"
  | (GITS_PARTIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_PARTIDR_Type (GITS_PARTIDR_Type_reg s r)))"
  | (GITS_SGIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_SGIR_Type (GITS_SGIR_Type_reg s r)))"
  | (GITS_STATUSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_STATUSR_Type (GITS_STATUSR_Type_reg s r)))"
  | (GITS_TYPER_Type) "get_regval r = (\<lambda>s. Some (regval_of_GITS_TYPER_Type (GITS_TYPER_Type_reg s r)))"
  | (GMID_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_GMID_EL1_Type (GMID_EL1_Type_reg s r)))"
  | (GPCCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_GPCCR_EL3_Type (GPCCR_EL3_Type_reg s r)))"
  | (GPTBR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_GPTBR_EL3_Type (GPTBR_EL3_Type_reg s r)))"
  | (HAFGRTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HAFGRTR_EL2_Type (HAFGRTR_EL2_Type_reg s r)))"
  | (HCPTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HCPTR_Type (HCPTR_Type_reg s r)))"
  | (HCR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HCR2_Type (HCR2_Type_reg s r)))"
  | (HCRX_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HCRX_EL2_Type (HCRX_EL2_Type_reg s r)))"
  | (HCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HCR_EL2_Type (HCR_EL2_Type_reg s r)))"
  | (HCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HCR_Type (HCR_Type_reg s r)))"
  | (HDCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HDCR_Type (HDCR_Type_reg s r)))"
  | (HDFGRTR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HDFGRTR2_EL2_Type (HDFGRTR2_EL2_Type_reg s r)))"
  | (HDFGRTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HDFGRTR_EL2_Type (HDFGRTR_EL2_Type_reg s r)))"
  | (HDFGWTR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HDFGWTR2_EL2_Type (HDFGWTR2_EL2_Type_reg s r)))"
  | (HDFGWTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HDFGWTR_EL2_Type (HDFGWTR_EL2_Type_reg s r)))"
  | (HFGITR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HFGITR_EL2_Type (HFGITR_EL2_Type_reg s r)))"
  | (HFGRTR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HFGRTR2_EL2_Type (HFGRTR2_EL2_Type_reg s r)))"
  | (HFGRTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HFGRTR_EL2_Type (HFGRTR_EL2_Type_reg s r)))"
  | (HFGWTR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HFGWTR2_EL2_Type (HFGWTR2_EL2_Type_reg s r)))"
  | (HFGWTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HFGWTR_EL2_Type (HFGWTR_EL2_Type_reg s r)))"
  | (HMAIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_HMAIR0_Type (HMAIR0_Type_reg s r)))"
  | (HMAIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_HMAIR1_Type (HMAIR1_Type_reg s r)))"
  | (HPFAR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HPFAR_EL2_Type (HPFAR_EL2_Type_reg s r)))"
  | (HPFAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HPFAR_Type (HPFAR_Type_reg s r)))"
  | (HRMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HRMR_Type (HRMR_Type_reg s r)))"
  | (HSCTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HSCTLR_Type (HSCTLR_Type_reg s r)))"
  | (HSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HSR_Type (HSR_Type_reg s r)))"
  | (HSTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_HSTR_EL2_Type (HSTR_EL2_Type_reg s r)))"
  | (HSTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HSTR_Type (HSTR_Type_reg s r)))"
  | (HTCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HTCR_Type (HTCR_Type_reg s r)))"
  | (HTRFCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HTRFCR_Type (HTRFCR_Type_reg s r)))"
  | (HTTBR_Type) "get_regval r = (\<lambda>s. Some (regval_of_HTTBR_Type (HTTBR_Type_reg s r)))"
  | (ICC_ASGI1R_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_ASGI1R_EL1_Type (ICC_ASGI1R_EL1_Type_reg s r)))"
  | (ICC_ASGI1R_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_ASGI1R_Type (ICC_ASGI1R_Type_reg s r)))"
  | (ICC_BPR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_BPR0_EL1_Type (ICC_BPR0_EL1_Type_reg s r)))"
  | (ICC_BPR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_BPR0_Type (ICC_BPR0_Type_reg s r)))"
  | (ICC_BPR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_BPR1_EL1_Type (ICC_BPR1_EL1_Type_reg s r)))"
  | (ICC_BPR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_BPR1_Type (ICC_BPR1_Type_reg s r)))"
  | (ICC_CTLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_CTLR_EL1_Type (ICC_CTLR_EL1_Type_reg s r)))"
  | (ICC_CTLR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_CTLR_EL3_Type (ICC_CTLR_EL3_Type_reg s r)))"
  | (ICC_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_CTLR_Type (ICC_CTLR_Type_reg s r)))"
  | (ICC_DIR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_DIR_EL1_Type (ICC_DIR_EL1_Type_reg s r)))"
  | (ICC_DIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_DIR_Type (ICC_DIR_Type_reg s r)))"
  | (ICC_EOIR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_EOIR0_EL1_Type (ICC_EOIR0_EL1_Type_reg s r)))"
  | (ICC_EOIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_EOIR0_Type (ICC_EOIR0_Type_reg s r)))"
  | (ICC_EOIR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_EOIR1_EL1_Type (ICC_EOIR1_EL1_Type_reg s r)))"
  | (ICC_EOIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_EOIR1_Type (ICC_EOIR1_Type_reg s r)))"
  | (ICC_HPPIR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_HPPIR0_EL1_Type (ICC_HPPIR0_EL1_Type_reg s r)))"
  | (ICC_HPPIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_HPPIR0_Type (ICC_HPPIR0_Type_reg s r)))"
  | (ICC_HPPIR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_HPPIR1_EL1_Type (ICC_HPPIR1_EL1_Type_reg s r)))"
  | (ICC_HPPIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_HPPIR1_Type (ICC_HPPIR1_Type_reg s r)))"
  | (ICC_HSRE_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_HSRE_Type (ICC_HSRE_Type_reg s r)))"
  | (ICC_IAR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IAR0_EL1_Type (ICC_IAR0_EL1_Type_reg s r)))"
  | (ICC_IAR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IAR0_Type (ICC_IAR0_Type_reg s r)))"
  | (ICC_IAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IAR1_EL1_Type (ICC_IAR1_EL1_Type_reg s r)))"
  | (ICC_IAR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IAR1_Type (ICC_IAR1_Type_reg s r)))"
  | (ICC_IGRPEN0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IGRPEN0_EL1_Type (ICC_IGRPEN0_EL1_Type_reg s r)))"
  | (ICC_IGRPEN0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IGRPEN0_Type (ICC_IGRPEN0_Type_reg s r)))"
  | (ICC_IGRPEN1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IGRPEN1_EL1_Type (ICC_IGRPEN1_EL1_Type_reg s r)))"
  | (ICC_IGRPEN1_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IGRPEN1_EL3_Type (ICC_IGRPEN1_EL3_Type_reg s r)))"
  | (ICC_IGRPEN1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_IGRPEN1_Type (ICC_IGRPEN1_Type_reg s r)))"
  | (ICC_MCTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_MCTLR_Type (ICC_MCTLR_Type_reg s r)))"
  | (ICC_MGRPEN1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_MGRPEN1_Type (ICC_MGRPEN1_Type_reg s r)))"
  | (ICC_MSRE_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_MSRE_Type (ICC_MSRE_Type_reg s r)))"
  | (ICC_NMIAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_NMIAR1_EL1_Type (ICC_NMIAR1_EL1_Type_reg s r)))"
  | (ICC_PMR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_PMR_EL1_Type (ICC_PMR_EL1_Type_reg s r)))"
  | (ICC_PMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_PMR_Type (ICC_PMR_Type_reg s r)))"
  | (ICC_RPR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_RPR_EL1_Type (ICC_RPR_EL1_Type_reg s r)))"
  | (ICC_RPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_RPR_Type (ICC_RPR_Type_reg s r)))"
  | (ICC_SGI0R_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SGI0R_EL1_Type (ICC_SGI0R_EL1_Type_reg s r)))"
  | (ICC_SGI0R_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SGI0R_Type (ICC_SGI0R_Type_reg s r)))"
  | (ICC_SGI1R_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SGI1R_EL1_Type (ICC_SGI1R_EL1_Type_reg s r)))"
  | (ICC_SGI1R_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SGI1R_Type (ICC_SGI1R_Type_reg s r)))"
  | (ICC_SRE_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SRE_EL1_Type (ICC_SRE_EL1_Type_reg s r)))"
  | (ICC_SRE_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SRE_EL2_Type (ICC_SRE_EL2_Type_reg s r)))"
  | (ICC_SRE_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SRE_EL3_Type (ICC_SRE_EL3_Type_reg s r)))"
  | (ICC_SRE_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICC_SRE_Type (ICC_SRE_Type_reg s r)))"
  | (ICH_EISR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_EISR_EL2_Type (ICH_EISR_EL2_Type_reg s r)))"
  | (ICH_EISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_EISR_Type (ICH_EISR_Type_reg s r)))"
  | (ICH_ELRSR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_ELRSR_EL2_Type (ICH_ELRSR_EL2_Type_reg s r)))"
  | (ICH_ELRSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_ELRSR_Type (ICH_ELRSR_Type_reg s r)))"
  | (ICH_HCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_HCR_EL2_Type (ICH_HCR_EL2_Type_reg s r)))"
  | (ICH_HCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_HCR_Type (ICH_HCR_Type_reg s r)))"
  | (ICH_MISR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_MISR_EL2_Type (ICH_MISR_EL2_Type_reg s r)))"
  | (ICH_MISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_MISR_Type (ICH_MISR_Type_reg s r)))"
  | (ICH_VMCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_VMCR_EL2_Type (ICH_VMCR_EL2_Type_reg s r)))"
  | (ICH_VMCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_VMCR_Type (ICH_VMCR_Type_reg s r)))"
  | (ICH_VTR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_VTR_EL2_Type (ICH_VTR_EL2_Type_reg s r)))"
  | (ICH_VTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICH_VTR_Type (ICH_VTR_Type_reg s r)))"
  | (ICV_BPR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_BPR0_EL1_Type (ICV_BPR0_EL1_Type_reg s r)))"
  | (ICV_BPR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_BPR0_Type (ICV_BPR0_Type_reg s r)))"
  | (ICV_BPR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_BPR1_EL1_Type (ICV_BPR1_EL1_Type_reg s r)))"
  | (ICV_BPR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_BPR1_Type (ICV_BPR1_Type_reg s r)))"
  | (ICV_CTLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_CTLR_EL1_Type (ICV_CTLR_EL1_Type_reg s r)))"
  | (ICV_CTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_CTLR_Type (ICV_CTLR_Type_reg s r)))"
  | (ICV_DIR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_DIR_EL1_Type (ICV_DIR_EL1_Type_reg s r)))"
  | (ICV_DIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_DIR_Type (ICV_DIR_Type_reg s r)))"
  | (ICV_EOIR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_EOIR0_EL1_Type (ICV_EOIR0_EL1_Type_reg s r)))"
  | (ICV_EOIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_EOIR0_Type (ICV_EOIR0_Type_reg s r)))"
  | (ICV_EOIR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_EOIR1_EL1_Type (ICV_EOIR1_EL1_Type_reg s r)))"
  | (ICV_EOIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_EOIR1_Type (ICV_EOIR1_Type_reg s r)))"
  | (ICV_HPPIR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_HPPIR0_EL1_Type (ICV_HPPIR0_EL1_Type_reg s r)))"
  | (ICV_HPPIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_HPPIR0_Type (ICV_HPPIR0_Type_reg s r)))"
  | (ICV_HPPIR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_HPPIR1_EL1_Type (ICV_HPPIR1_EL1_Type_reg s r)))"
  | (ICV_HPPIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_HPPIR1_Type (ICV_HPPIR1_Type_reg s r)))"
  | (ICV_IAR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IAR0_EL1_Type (ICV_IAR0_EL1_Type_reg s r)))"
  | (ICV_IAR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IAR0_Type (ICV_IAR0_Type_reg s r)))"
  | (ICV_IAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IAR1_EL1_Type (ICV_IAR1_EL1_Type_reg s r)))"
  | (ICV_IAR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IAR1_Type (ICV_IAR1_Type_reg s r)))"
  | (ICV_IGRPEN0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IGRPEN0_EL1_Type (ICV_IGRPEN0_EL1_Type_reg s r)))"
  | (ICV_IGRPEN0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IGRPEN0_Type (ICV_IGRPEN0_Type_reg s r)))"
  | (ICV_IGRPEN1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IGRPEN1_EL1_Type (ICV_IGRPEN1_EL1_Type_reg s r)))"
  | (ICV_IGRPEN1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_IGRPEN1_Type (ICV_IGRPEN1_Type_reg s r)))"
  | (ICV_NMIAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_NMIAR1_EL1_Type (ICV_NMIAR1_EL1_Type_reg s r)))"
  | (ICV_PMR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_PMR_EL1_Type (ICV_PMR_EL1_Type_reg s r)))"
  | (ICV_PMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_PMR_Type (ICV_PMR_Type_reg s r)))"
  | (ICV_RPR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_RPR_EL1_Type (ICV_RPR_EL1_Type_reg s r)))"
  | (ICV_RPR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ICV_RPR_Type (ICV_RPR_Type_reg s r)))"
  | (ID_AA64DFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64DFR0_EL1_Type (ID_AA64DFR0_EL1_Type_reg s r)))"
  | (ID_AA64DFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64DFR1_EL1_Type (ID_AA64DFR1_EL1_Type_reg s r)))"
  | (ID_AA64ISAR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64ISAR0_EL1_Type (ID_AA64ISAR0_EL1_Type_reg s r)))"
  | (ID_AA64ISAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64ISAR1_EL1_Type (ID_AA64ISAR1_EL1_Type_reg s r)))"
  | (ID_AA64ISAR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64ISAR2_EL1_Type (ID_AA64ISAR2_EL1_Type_reg s r)))"
  | (ID_AA64MMFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64MMFR0_EL1_Type (ID_AA64MMFR0_EL1_Type_reg s r)))"
  | (ID_AA64MMFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64MMFR1_EL1_Type (ID_AA64MMFR1_EL1_Type_reg s r)))"
  | (ID_AA64MMFR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64MMFR2_EL1_Type (ID_AA64MMFR2_EL1_Type_reg s r)))"
  | (ID_AA64MMFR3_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64MMFR3_EL1_Type (ID_AA64MMFR3_EL1_Type_reg s r)))"
  | (ID_AA64MMFR4_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64MMFR4_EL1_Type (ID_AA64MMFR4_EL1_Type_reg s r)))"
  | (ID_AA64PFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64PFR0_EL1_Type (ID_AA64PFR0_EL1_Type_reg s r)))"
  | (ID_AA64PFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64PFR1_EL1_Type (ID_AA64PFR1_EL1_Type_reg s r)))"
  | (ID_AA64PFR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64PFR2_EL1_Type (ID_AA64PFR2_EL1_Type_reg s r)))"
  | (ID_AA64SMFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64SMFR0_EL1_Type (ID_AA64SMFR0_EL1_Type_reg s r)))"
  | (ID_AA64ZFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_AA64ZFR0_EL1_Type (ID_AA64ZFR0_EL1_Type_reg s r)))"
  | (ID_DFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_DFR0_EL1_Type (ID_DFR0_EL1_Type_reg s r)))"
  | (ID_DFR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_DFR0_Type (ID_DFR0_Type_reg s r)))"
  | (ID_DFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_DFR1_EL1_Type (ID_DFR1_EL1_Type_reg s r)))"
  | (ID_DFR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_DFR1_Type (ID_DFR1_Type_reg s r)))"
  | (ID_ISAR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR0_EL1_Type (ID_ISAR0_EL1_Type_reg s r)))"
  | (ID_ISAR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR0_Type (ID_ISAR0_Type_reg s r)))"
  | (ID_ISAR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR1_EL1_Type (ID_ISAR1_EL1_Type_reg s r)))"
  | (ID_ISAR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR1_Type (ID_ISAR1_Type_reg s r)))"
  | (ID_ISAR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR2_EL1_Type (ID_ISAR2_EL1_Type_reg s r)))"
  | (ID_ISAR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR2_Type (ID_ISAR2_Type_reg s r)))"
  | (ID_ISAR3_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR3_EL1_Type (ID_ISAR3_EL1_Type_reg s r)))"
  | (ID_ISAR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR3_Type (ID_ISAR3_Type_reg s r)))"
  | (ID_ISAR4_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR4_EL1_Type (ID_ISAR4_EL1_Type_reg s r)))"
  | (ID_ISAR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR4_Type (ID_ISAR4_Type_reg s r)))"
  | (ID_ISAR5_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR5_EL1_Type (ID_ISAR5_EL1_Type_reg s r)))"
  | (ID_ISAR5_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR5_Type (ID_ISAR5_Type_reg s r)))"
  | (ID_ISAR6_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR6_EL1_Type (ID_ISAR6_EL1_Type_reg s r)))"
  | (ID_ISAR6_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_ISAR6_Type (ID_ISAR6_Type_reg s r)))"
  | (ID_MMFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR0_EL1_Type (ID_MMFR0_EL1_Type_reg s r)))"
  | (ID_MMFR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR0_Type (ID_MMFR0_Type_reg s r)))"
  | (ID_MMFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR1_EL1_Type (ID_MMFR1_EL1_Type_reg s r)))"
  | (ID_MMFR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR1_Type (ID_MMFR1_Type_reg s r)))"
  | (ID_MMFR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR2_EL1_Type (ID_MMFR2_EL1_Type_reg s r)))"
  | (ID_MMFR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR2_Type (ID_MMFR2_Type_reg s r)))"
  | (ID_MMFR3_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR3_EL1_Type (ID_MMFR3_EL1_Type_reg s r)))"
  | (ID_MMFR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR3_Type (ID_MMFR3_Type_reg s r)))"
  | (ID_MMFR4_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR4_EL1_Type (ID_MMFR4_EL1_Type_reg s r)))"
  | (ID_MMFR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR4_Type (ID_MMFR4_Type_reg s r)))"
  | (ID_MMFR5_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR5_EL1_Type (ID_MMFR5_EL1_Type_reg s r)))"
  | (ID_MMFR5_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_MMFR5_Type (ID_MMFR5_Type_reg s r)))"
  | (ID_PFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR0_EL1_Type (ID_PFR0_EL1_Type_reg s r)))"
  | (ID_PFR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR0_Type (ID_PFR0_Type_reg s r)))"
  | (ID_PFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR1_EL1_Type (ID_PFR1_EL1_Type_reg s r)))"
  | (ID_PFR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR1_Type (ID_PFR1_Type_reg s r)))"
  | (ID_PFR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR2_EL1_Type (ID_PFR2_EL1_Type_reg s r)))"
  | (ID_PFR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ID_PFR2_Type (ID_PFR2_Type_reg s r)))"
  | (IFSR32_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_IFSR32_EL2_Type (IFSR32_EL2_Type_reg s r)))"
  | (IFSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_IFSR_Type (IFSR_Type_reg s r)))"
  | (ISR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ISR_EL1_Type (ISR_EL1_Type_reg s r)))"
  | (ISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_ISR_Type (ISR_Type_reg s r)))"
  | (InstrEnc) "get_regval r = (\<lambda>s. Some (regval_of___InstrEnc (InstrEnc_reg s r)))"
  | (LORC_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_LORC_EL1_Type (LORC_EL1_Type_reg s r)))"
  | (LOREA_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_LOREA_EL1_Type (LOREA_EL1_Type_reg s r)))"
  | (LORID_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_LORID_EL1_Type (LORID_EL1_Type_reg s r)))"
  | (LORN_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_LORN_EL1_Type (LORN_EL1_Type_reg s r)))"
  | (LORSA_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_LORSA_EL1_Type (LORSA_EL1_Type_reg s r)))"
  | (MAIR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR0_Type (MAIR0_Type_reg s r)))"
  | (MAIR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR1_Type (MAIR1_Type_reg s r)))"
  | (MAIR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR2_EL1_Type (MAIR2_EL1_Type_reg s r)))"
  | (MAIR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR2_EL2_Type (MAIR2_EL2_Type_reg s r)))"
  | (MAIR2_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR2_EL3_Type (MAIR2_EL3_Type_reg s r)))"
  | (MAIR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR_EL1_Type (MAIR_EL1_Type_reg s r)))"
  | (MAIR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR_EL2_Type (MAIR_EL2_Type_reg s r)))"
  | (MAIR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MAIR_EL3_Type (MAIR_EL3_Type_reg s r)))"
  | (MDCCINT_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDCCINT_EL1_Type (MDCCINT_EL1_Type_reg s r)))"
  | (MDCCSR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDCCSR_EL0_Type (MDCCSR_EL0_Type_reg s r)))"
  | (MDCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDCR_EL2_Type (MDCR_EL2_Type_reg s r)))"
  | (MDCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDCR_EL3_Type (MDCR_EL3_Type_reg s r)))"
  | (MDRAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDRAR_EL1_Type (MDRAR_EL1_Type_reg s r)))"
  | (MDSCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDSCR_EL1_Type (MDSCR_EL1_Type_reg s r)))"
  | (MDSELR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MDSELR_EL1_Type (MDSELR_EL1_Type_reg s r)))"
  | (MECIDR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECIDR_EL2_Type (MECIDR_EL2_Type_reg s r)))"
  | (MECID_A0_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECID_A0_EL2_Type (MECID_A0_EL2_Type_reg s r)))"
  | (MECID_A1_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECID_A1_EL2_Type (MECID_A1_EL2_Type_reg s r)))"
  | (MECID_P0_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECID_P0_EL2_Type (MECID_P0_EL2_Type_reg s r)))"
  | (MECID_P1_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECID_P1_EL2_Type (MECID_P1_EL2_Type_reg s r)))"
  | (MECID_RL_A_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MECID_RL_A_EL3_Type (MECID_RL_A_EL3_Type_reg s r)))"
  | (MFAR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MFAR_EL3_Type (MFAR_EL3_Type_reg s r)))"
  | (MIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MIDR_EL1_Type (MIDR_EL1_Type_reg s r)))"
  | (MIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_MIDR_Type (MIDR_Type_reg s r)))"
  | (MPAM0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAM0_EL1_Type (MPAM0_EL1_Type_reg s r)))"
  | (MPAM1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAM1_EL1_Type (MPAM1_EL1_Type_reg s r)))"
  | (MPAM2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAM2_EL2_Type (MPAM2_EL2_Type_reg s r)))"
  | (MPAM3_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAM3_EL3_Type (MPAM3_EL3_Type_reg s r)))"
  | (MPAMHCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMHCR_EL2_Type (MPAMHCR_EL2_Type_reg s r)))"
  | (MPAMIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMIDR_EL1_Type (MPAMIDR_EL1_Type_reg s r)))"
  | (MPAMSM_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMSM_EL1_Type (MPAMSM_EL1_Type_reg s r)))"
  | (MPAMVPM0_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM0_EL2_Type (MPAMVPM0_EL2_Type_reg s r)))"
  | (MPAMVPM1_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM1_EL2_Type (MPAMVPM1_EL2_Type_reg s r)))"
  | (MPAMVPM2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM2_EL2_Type (MPAMVPM2_EL2_Type_reg s r)))"
  | (MPAMVPM3_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM3_EL2_Type (MPAMVPM3_EL2_Type_reg s r)))"
  | (MPAMVPM4_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM4_EL2_Type (MPAMVPM4_EL2_Type_reg s r)))"
  | (MPAMVPM5_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM5_EL2_Type (MPAMVPM5_EL2_Type_reg s r)))"
  | (MPAMVPM6_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM6_EL2_Type (MPAMVPM6_EL2_Type_reg s r)))"
  | (MPAMVPM7_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPM7_EL2_Type (MPAMVPM7_EL2_Type_reg s r)))"
  | (MPAMVPMV_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPAMVPMV_EL2_Type (MPAMVPMV_EL2_Type_reg s r)))"
  | (MPIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPIDR_EL1_Type (MPIDR_EL1_Type_reg s r)))"
  | (MPIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_MPIDR_Type (MPIDR_Type_reg s r)))"
  | (MVBAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVBAR_Type (MVBAR_Type_reg s r)))"
  | (MVFR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR0_EL1_Type (MVFR0_EL1_Type_reg s r)))"
  | (MVFR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR0_Type (MVFR0_Type_reg s r)))"
  | (MVFR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR1_EL1_Type (MVFR1_EL1_Type_reg s r)))"
  | (MVFR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR1_Type (MVFR1_Type_reg s r)))"
  | (MVFR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR2_EL1_Type (MVFR2_EL1_Type_reg s r)))"
  | (MVFR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_MVFR2_Type (MVFR2_Type_reg s r)))"
  | (NMRR_Type) "get_regval r = (\<lambda>s. Some (regval_of_NMRR_Type (NMRR_Type_reg s r)))"
  | (NSACR_Type) "get_regval r = (\<lambda>s. Some (regval_of_NSACR_Type (NSACR_Type_reg s r)))"
  | (OSDLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_OSDLR_EL1_Type (OSDLR_EL1_Type_reg s r)))"
  | (OSECCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_OSECCR_EL1_Type (OSECCR_EL1_Type_reg s r)))"
  | (OSLAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_OSLAR_EL1_Type (OSLAR_EL1_Type_reg s r)))"
  | (OSLSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_OSLSR_EL1_Type (OSLSR_EL1_Type_reg s r)))"
  | (OpType) "get_regval r = (\<lambda>s. Some (regval_of_OpType (OpType_reg s r)))"
  | (PAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PAR_EL1_Type (PAR_EL1_Type_reg s r)))"
  | (PAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PAR_Type (PAR_Type_reg s r)))"
  | (PFAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PFAR_EL1_Type (PFAR_EL1_Type_reg s r)))"
  | (PFAR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PFAR_EL2_Type (PFAR_EL2_Type_reg s r)))"
  | (PIRE0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PIRE0_EL1_Type (PIRE0_EL1_Type_reg s r)))"
  | (PIRE0_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PIRE0_EL2_Type (PIRE0_EL2_Type_reg s r)))"
  | (PIR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PIR_EL1_Type (PIR_EL1_Type_reg s r)))"
  | (PIR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PIR_EL2_Type (PIR_EL2_Type_reg s r)))"
  | (PIR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_PIR_EL3_Type (PIR_EL3_Type_reg s r)))"
  | (PMAUTHSTATUS_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMAUTHSTATUS_Type (PMAUTHSTATUS_Type_reg s r)))"
  | (PMBIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMBIDR_EL1_Type (PMBIDR_EL1_Type_reg s r)))"
  | (PMBLIMITR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMBLIMITR_EL1_Type (PMBLIMITR_EL1_Type_reg s r)))"
  | (PMBPTR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMBPTR_EL1_Type (PMBPTR_EL1_Type_reg s r)))"
  | (PMBSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMBSR_EL1_Type (PMBSR_EL1_Type_reg s r)))"
  | (PMCCFILTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCCFILTR_EL0_Type (PMCCFILTR_EL0_Type_reg s r)))"
  | (PMCCFILTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCCFILTR_Type (PMCCFILTR_Type_reg s r)))"
  | (PMCCNTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCCNTR_EL0_Type (PMCCNTR_EL0_Type_reg s r)))"
  | (PMCCNTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCCNTR_Type (PMCCNTR_Type_reg s r)))"
  | (PMCCNTSVR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCCNTSVR_EL1_Type (PMCCNTSVR_EL1_Type_reg s r)))"
  | (PMCEID0_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID0_EL0_Type (PMCEID0_EL0_Type_reg s r)))"
  | (PMCEID0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID0_Type (PMCEID0_Type_reg s r)))"
  | (PMCEID1_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID1_EL0_Type (PMCEID1_EL0_Type_reg s r)))"
  | (PMCEID1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID1_Type (PMCEID1_Type_reg s r)))"
  | (PMCEID2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID2_Type (PMCEID2_Type_reg s r)))"
  | (PMCEID3_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCEID3_Type (PMCEID3_Type_reg s r)))"
  | (PMCFGR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCFGR_Type (PMCFGR_Type_reg s r)))"
  | (PMCGCR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCGCR0_Type (PMCGCR0_Type_reg s r)))"
  | (PMCIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCIDR0_Type (PMCIDR0_Type_reg s r)))"
  | (PMCIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCIDR1_Type (PMCIDR1_Type_reg s r)))"
  | (PMCIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCIDR2_Type (PMCIDR2_Type_reg s r)))"
  | (PMCIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCIDR3_Type (PMCIDR3_Type_reg s r)))"
  | (PMCNTENCLR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCNTENCLR_EL0_Type (PMCNTENCLR_EL0_Type_reg s r)))"
  | (PMCNTENCLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCNTENCLR_Type (PMCNTENCLR_Type_reg s r)))"
  | (PMCNTENSET_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCNTENSET_EL0_Type (PMCNTENSET_EL0_Type_reg s r)))"
  | (PMCNTENSET_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCNTENSET_Type (PMCNTENSET_Type_reg s r)))"
  | (PMCNTEN_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCNTEN_Type (PMCNTEN_Type_reg s r)))"
  | (PMCR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCR_EL0_Type (PMCR_EL0_Type_reg s r)))"
  | (PMCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMCR_Type (PMCR_Type_reg s r)))"
  | (PMDEVID_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMDEVID_Type (PMDEVID_Type_reg s r)))"
  | (PMDEVTYPE_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMDEVTYPE_Type (PMDEVTYPE_Type_reg s r)))"
  | (PMECR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMECR_EL1_Type (PMECR_EL1_Type_reg s r)))"
  | (PMIAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMIAR_EL1_Type (PMIAR_EL1_Type_reg s r)))"
  | (PMICFILTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMICFILTR_EL0_Type (PMICFILTR_EL0_Type_reg s r)))"
  | (PMICNTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMICNTR_EL0_Type (PMICNTR_EL0_Type_reg s r)))"
  | (PMICNTSVR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMICNTSVR_EL1_Type (PMICNTSVR_EL1_Type_reg s r)))"
  | (PMIIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMIIDR_Type (PMIIDR_Type_reg s r)))"
  | (PMINTENCLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMINTENCLR_EL1_Type (PMINTENCLR_EL1_Type_reg s r)))"
  | (PMINTENCLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMINTENCLR_Type (PMINTENCLR_Type_reg s r)))"
  | (PMINTENSET_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMINTENSET_EL1_Type (PMINTENSET_EL1_Type_reg s r)))"
  | (PMINTENSET_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMINTENSET_Type (PMINTENSET_Type_reg s r)))"
  | (PMINTEN_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMINTEN_Type (PMINTEN_Type_reg s r)))"
  | (PMITCTRL_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMITCTRL_Type (PMITCTRL_Type_reg s r)))"
  | (PMLAR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMLAR_Type (PMLAR_Type_reg s r)))"
  | (PMLSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMLSR_Type (PMLSR_Type_reg s r)))"
  | (PMMIR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMMIR_EL1_Type (PMMIR_EL1_Type_reg s r)))"
  | (PMMIR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMMIR_Type (PMMIR_Type_reg s r)))"
  | (PMOVSCLR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMOVSCLR_EL0_Type (PMOVSCLR_EL0_Type_reg s r)))"
  | (PMOVSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMOVSR_Type (PMOVSR_Type_reg s r)))"
  | (PMOVSSET_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMOVSSET_EL0_Type (PMOVSSET_EL0_Type_reg s r)))"
  | (PMOVSSET_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMOVSSET_Type (PMOVSSET_Type_reg s r)))"
  | (PMOVS_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMOVS_Type (PMOVS_Type_reg s r)))"
  | (PMPCSCTL_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPCSCTL_Type (PMPCSCTL_Type_reg s r)))"
  | (PMPCSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPCSR_Type (PMPCSR_Type_reg s r)))"
  | (PMPIDR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPIDR0_Type (PMPIDR0_Type_reg s r)))"
  | (PMPIDR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPIDR1_Type (PMPIDR1_Type_reg s r)))"
  | (PMPIDR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPIDR2_Type (PMPIDR2_Type_reg s r)))"
  | (PMPIDR3_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPIDR3_Type (PMPIDR3_Type_reg s r)))"
  | (PMPIDR4_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMPIDR4_Type (PMPIDR4_Type_reg s r)))"
  | (PMSCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSCR_EL1_Type (PMSCR_EL1_Type_reg s r)))"
  | (PMSCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSCR_EL2_Type (PMSCR_EL2_Type_reg s r)))"
  | (PMSDSFR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSDSFR_EL1_Type (PMSDSFR_EL1_Type_reg s r)))"
  | (PMSELR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSELR_EL0_Type (PMSELR_EL0_Type_reg s r)))"
  | (PMSELR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSELR_Type (PMSELR_Type_reg s r)))"
  | (PMSEVFR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSEVFR_EL1_Type (PMSEVFR_EL1_Type_reg s r)))"
  | (PMSFCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSFCR_EL1_Type (PMSFCR_EL1_Type_reg s r)))"
  | (PMSICR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSICR_EL1_Type (PMSICR_EL1_Type_reg s r)))"
  | (PMSIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSIDR_EL1_Type (PMSIDR_EL1_Type_reg s r)))"
  | (PMSIRR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSIRR_EL1_Type (PMSIRR_EL1_Type_reg s r)))"
  | (PMSLATFR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSLATFR_EL1_Type (PMSLATFR_EL1_Type_reg s r)))"
  | (PMSNEVFR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSNEVFR_EL1_Type (PMSNEVFR_EL1_Type_reg s r)))"
  | (PMSSCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSSCR_EL1_Type (PMSSCR_EL1_Type_reg s r)))"
  | (PMSWINC_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSWINC_EL0_Type (PMSWINC_EL0_Type_reg s r)))"
  | (PMSWINC_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMSWINC_Type (PMSWINC_Type_reg s r)))"
  | (PMUACR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMUACR_EL1_Type (PMUACR_EL1_Type_reg s r)))"
  | (PMUSERENR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMUSERENR_EL0_Type (PMUSERENR_EL0_Type_reg s r)))"
  | (PMUSERENR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMUSERENR_Type (PMUSERENR_Type_reg s r)))"
  | (PMVCIDSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMVCIDSR_Type (PMVCIDSR_Type_reg s r)))"
  | (PMVIDSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMVIDSR_Type (PMVIDSR_Type_reg s r)))"
  | (PMXEVCNTR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMXEVCNTR_EL0_Type (PMXEVCNTR_EL0_Type_reg s r)))"
  | (PMZR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_PMZR_EL0_Type (PMZR_EL0_Type_reg s r)))"
  | (POR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_POR_EL0_Type (POR_EL0_Type_reg s r)))"
  | (POR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_POR_EL1_Type (POR_EL1_Type_reg s r)))"
  | (POR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_POR_EL2_Type (POR_EL2_Type_reg s r)))"
  | (POR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_POR_EL3_Type (POR_EL3_Type_reg s r)))"
  | (PRRR_Type) "get_regval r = (\<lambda>s. Some (regval_of_PRRR_Type (PRRR_Type_reg s r)))"
  | (ProcState) "get_regval r = (\<lambda>s. Some (regval_of_ProcState (ProcState_reg s r)))"
  | (RCWMASK_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_RCWMASK_EL1_Type (RCWMASK_EL1_Type_reg s r)))"
  | (RCWSMASK_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_RCWSMASK_EL1_Type (RCWSMASK_EL1_Type_reg s r)))"
  | (RGSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_RGSR_EL1_Type (RGSR_EL1_Type_reg s r)))"
  | (RMR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_RMR_EL1_Type (RMR_EL1_Type_reg s r)))"
  | (RMR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_RMR_EL2_Type (RMR_EL2_Type_reg s r)))"
  | (RMR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_RMR_EL3_Type (RMR_EL3_Type_reg s r)))"
  | (RMR_Type) "get_regval r = (\<lambda>s. Some (regval_of_RMR_Type (RMR_Type_reg s r)))"
  | (RNDRRS_Type) "get_regval r = (\<lambda>s. Some (regval_of_RNDRRS_Type (RNDRRS_Type_reg s r)))"
  | (RNDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_RNDR_Type (RNDR_Type_reg s r)))"
  | (RVBAR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_RVBAR_EL1_Type (RVBAR_EL1_Type_reg s r)))"
  | (RVBAR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_RVBAR_EL2_Type (RVBAR_EL2_Type_reg s r)))"
  | (RVBAR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_RVBAR_EL3_Type (RVBAR_EL3_Type_reg s r)))"
  | (S2PIR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_S2PIR_EL2_Type (S2PIR_EL2_Type_reg s r)))"
  | (S2POR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_S2POR_EL1_Type (S2POR_EL1_Type_reg s r)))"
  | (SCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCR_EL3_Type (SCR_EL3_Type_reg s r)))"
  | (SCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCR_Type (SCR_Type_reg s r)))"
  | (SCTLR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR2_EL1_Type (SCTLR2_EL1_Type_reg s r)))"
  | (SCTLR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR2_EL2_Type (SCTLR2_EL2_Type_reg s r)))"
  | (SCTLR2_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR2_EL3_Type (SCTLR2_EL3_Type_reg s r)))"
  | (SCTLR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR_EL1_Type (SCTLR_EL1_Type_reg s r)))"
  | (SCTLR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR_EL2_Type (SCTLR_EL2_Type_reg s r)))"
  | (SCTLR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR_EL3_Type (SCTLR_EL3_Type_reg s r)))"
  | (SCTLR_Type) "get_regval r = (\<lambda>s. Some (regval_of_SCTLR_Type (SCTLR_Type_reg s r)))"
  | (SDCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_SDCR_Type (SDCR_Type_reg s r)))"
  | (SDER32_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SDER32_EL2_Type (SDER32_EL2_Type_reg s r)))"
  | (SDER32_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SDER32_EL3_Type (SDER32_EL3_Type_reg s r)))"
  | (SDER_Type) "get_regval r = (\<lambda>s. Some (regval_of_SDER_Type (SDER_Type_reg s r)))"
  | (SMCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMCR_EL1_Type (SMCR_EL1_Type_reg s r)))"
  | (SMCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMCR_EL2_Type (SMCR_EL2_Type_reg s r)))"
  | (SMCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMCR_EL3_Type (SMCR_EL3_Type_reg s r)))"
  | (SMIDR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMIDR_EL1_Type (SMIDR_EL1_Type_reg s r)))"
  | (SMPRIMAP_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMPRIMAP_EL2_Type (SMPRIMAP_EL2_Type_reg s r)))"
  | (SMPRI_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SMPRI_EL1_Type (SMPRI_EL1_Type_reg s r)))"
  | (SPMACCESSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPMACCESSR_EL1_Type (SPMACCESSR_EL1_Type_reg s r)))"
  | (SPMACCESSR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPMACCESSR_EL2_Type (SPMACCESSR_EL2_Type_reg s r)))"
  | (SPMACCESSR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPMACCESSR_EL3_Type (SPMACCESSR_EL3_Type_reg s r)))"
  | (SPMSELR_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPMSELR_EL0_Type (SPMSELR_EL0_Type_reg s r)))"
  | (SPSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_EL1_Type (SPSR_EL1_Type_reg s r)))"
  | (SPSR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_EL2_Type (SPSR_EL2_Type_reg s r)))"
  | (SPSR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_EL3_Type (SPSR_EL3_Type_reg s r)))"
  | (SPSR_abt_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_abt_Type (SPSR_abt_Type_reg s r)))"
  | (SPSR_fiq_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_fiq_Type (SPSR_fiq_Type_reg s r)))"
  | (SPSR_hyp_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_hyp_Type (SPSR_hyp_Type_reg s r)))"
  | (SPSR_irq_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_irq_Type (SPSR_irq_Type_reg s r)))"
  | (SPSR_mon_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_mon_Type (SPSR_mon_Type_reg s r)))"
  | (SPSR_svc_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_svc_Type (SPSR_svc_Type_reg s r)))"
  | (SPSR_und_Type) "get_regval r = (\<lambda>s. Some (regval_of_SPSR_und_Type (SPSR_und_Type_reg s r)))"
  | (Signal) "get_regval r = (\<lambda>s. Some (regval_of_Signal (Signal_reg s r)))"
  | (TCR2_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TCR2_EL1_Type (TCR2_EL1_Type_reg s r)))"
  | (TCR2_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TCR2_EL2_Type (TCR2_EL2_Type_reg s r)))"
  | (TCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TCR_EL1_Type (TCR_EL1_Type_reg s r)))"
  | (TCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TCR_EL2_Type (TCR_EL2_Type_reg s r)))"
  | (TCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_TCR_EL3_Type (TCR_EL3_Type_reg s r)))"
  | (TFSRE0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TFSRE0_EL1_Type (TFSRE0_EL1_Type_reg s r)))"
  | (TFSR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TFSR_EL1_Type (TFSR_EL1_Type_reg s r)))"
  | (TFSR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TFSR_EL2_Type (TFSR_EL2_Type_reg s r)))"
  | (TFSR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_TFSR_EL3_Type (TFSR_EL3_Type_reg s r)))"
  | (TLBTR_Type) "get_regval r = (\<lambda>s. Some (regval_of_TLBTR_Type (TLBTR_Type_reg s r)))"
  | (TMState) "get_regval r = (\<lambda>s. Some (regval_of_TMState (TMState_reg s r)))"
  | (TRFCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TRFCR_EL1_Type (TRFCR_EL1_Type_reg s r)))"
  | (TRFCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TRFCR_EL2_Type (TRFCR_EL2_Type_reg s r)))"
  | (TRFCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_TRFCR_Type (TRFCR_Type_reg s r)))"
  | (TTBCR2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBCR2_Type (TTBCR2_Type_reg s r)))"
  | (TTBCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBCR_Type (TTBCR_Type_reg s r)))"
  | (TTBR0_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR0_EL1_Type (TTBR0_EL1_Type_reg s r)))"
  | (TTBR0_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR0_EL2_Type (TTBR0_EL2_Type_reg s r)))"
  | (TTBR0_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR0_EL3_Type (TTBR0_EL3_Type_reg s r)))"
  | (TTBR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR0_Type (TTBR0_Type_reg s r)))"
  | (TTBR1_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR1_EL1_Type (TTBR1_EL1_Type_reg s r)))"
  | (TTBR1_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR1_EL2_Type (TTBR1_EL2_Type_reg s r)))"
  | (TTBR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_TTBR1_Type (TTBR1_Type_reg s r)))"
  | (VDFSR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VDFSR_Type (VDFSR_Type_reg s r)))"
  | (VDISR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VDISR_EL2_Type (VDISR_EL2_Type_reg s r)))"
  | (VDISR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VDISR_Type (VDISR_Type_reg s r)))"
  | (VMECID_A_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VMECID_A_EL2_Type (VMECID_A_EL2_Type_reg s r)))"
  | (VMECID_P_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VMECID_P_EL2_Type (VMECID_P_EL2_Type_reg s r)))"
  | (VMPIDR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VMPIDR_EL2_Type (VMPIDR_EL2_Type_reg s r)))"
  | (VMPIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VMPIDR_Type (VMPIDR_Type_reg s r)))"
  | (VNCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VNCR_EL2_Type (VNCR_EL2_Type_reg s r)))"
  | (VPIDR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VPIDR_EL2_Type (VPIDR_EL2_Type_reg s r)))"
  | (VPIDR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VPIDR_Type (VPIDR_Type_reg s r)))"
  | (VSESR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VSESR_EL2_Type (VSESR_EL2_Type_reg s r)))"
  | (VSTCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VSTCR_EL2_Type (VSTCR_EL2_Type_reg s r)))"
  | (VSTTBR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VSTTBR_EL2_Type (VSTTBR_EL2_Type_reg s r)))"
  | (VTCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VTCR_EL2_Type (VTCR_EL2_Type_reg s r)))"
  | (VTCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VTCR_Type (VTCR_Type_reg s r)))"
  | (VTTBR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_VTTBR_EL2_Type (VTTBR_EL2_Type_reg s r)))"
  | (VTTBR_Type) "get_regval r = (\<lambda>s. Some (regval_of_VTTBR_Type (VTTBR_Type_reg s r)))"
  | (ZCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_ZCR_EL1_Type (ZCR_EL1_Type_reg s r)))"
  | (ZCR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_ZCR_EL2_Type (ZCR_EL2_Type_reg s r)))"
  | (ZCR_EL3_Type) "get_regval r = (\<lambda>s. Some (regval_of_ZCR_EL3_Type (ZCR_EL3_Type_reg s r)))"
  | (bitvector_1) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_1 (bitvector_1_reg s r)))"
  | (bitvector_16) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_16 (bitvector_16_reg s r)))"
  | (bitvector_2) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_2 (bitvector_2_reg s r)))"
  | (bitvector_24) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_24 (bitvector_24_reg s r)))"
  | (bitvector_256) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_256 (bitvector_256_reg s r)))"
  | (bitvector_3) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_3 (bitvector_3_reg s r)))"
  | (bitvector_32) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_32 (bitvector_32_reg s r)))"
  | (bitvector_4) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_4 (bitvector_4_reg s r)))"
  | (bitvector_512) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_512 (bitvector_512_reg s r)))"
  | (bitvector_56) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_56 (bitvector_56_reg s r)))"
  | (bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_64 (bitvector_64_reg s r)))"
  | (bitvector_8) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_8 (bitvector_8_reg s r)))"
  | (bitvector_88) "get_regval r = (\<lambda>s. Some (regval_of_bitvector_88 (bitvector_88_reg s r)))"
  | (bool) "get_regval r = (\<lambda>s. Some (register_value_of_bool (bool_reg s r)))"
  | (int) "get_regval r = (\<lambda>s. Some (register_value_of_int (int_reg s r)))"
  | (option_InterruptID) "get_regval r = (\<lambda>s. Some (regval_of_option (\<lambda>v. regval_of_InterruptID v) (option_InterruptID_reg s r)))"
  | (option_bitvector_32) "get_regval r = (\<lambda>s. Some (regval_of_option (\<lambda>v. regval_of_bitvector_32 v) (option_bitvector_32_reg s r)))"
  | (vector_16_AMEVCNTR1_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVCNTR1_EL0_Type v) (vector_16_AMEVCNTR1_EL0_Type_reg s r)))"
  | (vector_16_AMEVCNTR1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVCNTR1_Type v) (vector_16_AMEVCNTR1_Type_reg s r)))"
  | (vector_16_AMEVTYPER1_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVTYPER1_EL0_Type v) (vector_16_AMEVTYPER1_EL0_Type_reg s r)))"
  | (vector_16_AMEVTYPER1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVTYPER1_Type v) (vector_16_AMEVTYPER1_Type_reg s r)))"
  | (vector_16_DBGBCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGBCR_Type v) (vector_16_DBGBCR_Type_reg s r)))"
  | (vector_16_DBGBVR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGBVR_Type v) (vector_16_DBGBVR_Type_reg s r)))"
  | (vector_16_DBGBXVR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGBXVR_Type v) (vector_16_DBGBXVR_Type_reg s r)))"
  | (vector_16_DBGWCR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGWCR_Type v) (vector_16_DBGWCR_Type_reg s r)))"
  | (vector_16_DBGWVR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGWVR_Type v) (vector_16_DBGWVR_Type_reg s r)))"
  | (vector_16_ICH_LRC_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_LRC_Type v) (vector_16_ICH_LRC_Type_reg s r)))"
  | (vector_16_ICH_LR_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_LR_EL2_Type v) (vector_16_ICH_LR_EL2_Type_reg s r)))"
  | (vector_16_ICH_LR_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_LR_Type v) (vector_16_ICH_LR_Type_reg s r)))"
  | (vector_16_bitvector_256) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_256 v) (vector_16_bitvector_256_reg s r)))"
  | (vector_16_bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_64 v) (vector_16_bitvector_64_reg s r)))"
  | (vector_16_bool) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_bool v) (vector_16_bool_reg s r)))"
  | (vector_256_bitvector_2048) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_2048 v) (vector_256_bitvector_2048_reg s r)))"
  | (vector_259_bool) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_bool v) (vector_259_bool_reg s r)))"
  | (vector_31_PMEVCNTSVR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_PMEVCNTSVR_EL1_Type v) (vector_31_PMEVCNTSVR_EL1_Type_reg s r)))"
  | (vector_31_PMEVTYPER_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_PMEVTYPER_Type v) (vector_31_PMEVTYPER_Type_reg s r)))"
  | (vector_31_bitvector_32) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_32 v) (vector_31_bitvector_32_reg s r)))"
  | (vector_31_bool) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_bool v) (vector_31_bool_reg s r)))"
  | (vector_31_int) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_int v) (vector_31_int_reg s r)))"
  | (vector_32_BRBINF_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBINF_EL1_Type v) (vector_32_BRBINF_EL1_Type_reg s r)))"
  | (vector_32_BRBSRC_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBSRC_EL1_Type v) (vector_32_BRBSRC_EL1_Type_reg s r)))"
  | (vector_32_BRBTGT_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBTGT_EL1_Type v) (vector_32_BRBTGT_EL1_Type_reg s r)))"
  | (vector_32_PMEVTYPER_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_PMEVTYPER_EL0_Type v) (vector_32_PMEVTYPER_EL0_Type_reg s r)))"
  | (vector_32_bitvector_2048) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_2048 v) (vector_32_bitvector_2048_reg s r)))"
  | (vector_32_bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_64 v) (vector_32_bitvector_64_reg s r)))"
  | (vector_32_bool) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_bool v) (vector_32_bool_reg s r)))"
  | (vector_32_int) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. register_value_of_int v) (vector_32_int_reg s r)))"
  | (vector_4_AMEVCNTR0_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVCNTR0_EL0_Type v) (vector_4_AMEVCNTR0_EL0_Type_reg s r)))"
  | (vector_4_AMEVCNTR0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVCNTR0_Type v) (vector_4_AMEVCNTR0_Type_reg s r)))"
  | (vector_4_AMEVTYPER0_EL0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVTYPER0_EL0_Type v) (vector_4_AMEVTYPER0_EL0_Type_reg s r)))"
  | (vector_4_AMEVTYPER0_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_AMEVTYPER0_Type v) (vector_4_AMEVTYPER0_Type_reg s r)))"
  | (vector_4_ERRnFR_ElemType) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ERRnFR_ElemType v) (vector_4_ERRnFR_ElemType_reg s r)))"
  | (vector_4_ICC_AP1R_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICC_AP1R_EL1_Type v) (vector_4_ICC_AP1R_EL1_Type_reg s r)))"
  | (vector_4_ICH_AP0R_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_AP0R_EL2_Type v) (vector_4_ICH_AP0R_EL2_Type_reg s r)))"
  | (vector_4_ICH_AP0R_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_AP0R_Type v) (vector_4_ICH_AP0R_Type_reg s r)))"
  | (vector_4_ICH_AP1R_EL2_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_AP1R_EL2_Type v) (vector_4_ICH_AP1R_EL2_Type_reg s r)))"
  | (vector_4_ICH_AP1R_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICH_AP1R_Type v) (vector_4_ICH_AP1R_Type_reg s r)))"
  | (vector_4_ICV_AP1R_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_ICV_AP1R_EL1_Type v) (vector_4_ICV_AP1R_EL1_Type_reg s r)))"
  | (vector_4_bitvector_32) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_32 v) (vector_4_bitvector_32_reg s r)))"
  | (vector_4_bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_64 v) (vector_4_bitvector_64_reg s r)))"
  | (vector_5_bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_64 v) (vector_5_bitvector_64_reg s r)))"
  | (vector_64_BRBINFType) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBINFType v) (vector_64_BRBINFType_reg s r)))"
  | (vector_64_BRBSRCType) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBSRCType v) (vector_64_BRBSRCType_reg s r)))"
  | (vector_64_BRBTGTType) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_BRBTGTType v) (vector_64_BRBTGTType_reg s r)))"
  | (vector_64_DBGBCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGBCR_EL1_Type v) (vector_64_DBGBCR_EL1_Type_reg s r)))"
  | (vector_64_DBGBVR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGBVR_EL1_Type v) (vector_64_DBGBVR_EL1_Type_reg s r)))"
  | (vector_64_DBGWCR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGWCR_EL1_Type v) (vector_64_DBGWCR_EL1_Type_reg s r)))"
  | (vector_64_DBGWVR_EL1_Type) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_DBGWVR_EL1_Type v) (vector_64_DBGWVR_EL1_Type_reg s r)))"
  | (vector_64_bitvector_8) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_8 v) (vector_64_bitvector_8_reg s r)))"
  | (vector_7_bitvector_64) "get_regval r = (\<lambda>s. Some (regval_of_vector (\<lambda>v. regval_of_bitvector_64 v) (vector_7_bitvector_64_reg s r)))"
  | (None) "get_regval r = (\<lambda>s. None)"
proof (cases "map_of registers r")
  case (Some ops)
  then show ?thesis
    unfolding registers_def
    apply (elim map_of_Cons_SomeE)
    subgoal using option_bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_16_AMEVTYPER1_Type by (auto simp: register_defs)
    subgoal using vector_4_AMEVTYPER0_Type by (auto simp: register_defs)
    subgoal using vector_16_ICH_LRC_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGDTRTXint_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGDTRRXint_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGOSECCR_Type by (auto simp: register_defs)
    subgoal using PMINTENSET_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_16_ICH_LR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_ICH_AP0R_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_ICH_AP1R_Type by (auto simp: register_defs)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs)
    subgoal using DBGDTRRXext_Type by (auto simp: register_defs)
    subgoal using DBGOSLAR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGDTRTXext_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using vector_32_BRBSRC_EL1_Type by (auto simp: register_defs)
    subgoal using vector_32_BRBTGT_EL1_Type by (auto simp: register_defs)
    subgoal using vector_32_BRBINF_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using ERXGSR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_16_AMEVTYPER1_EL0_Type by (auto simp: register_defs)
    subgoal using vector_16_bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_AMEVCNTR0_EL0_Type by (auto simp: register_defs)
    subgoal using vector_16_AMEVCNTR1_Type by (auto simp: register_defs)
    subgoal using vector_4_AMEVCNTR0_Type by (auto simp: register_defs)
    subgoal using vector_16_bitvector_64 by (auto simp: register_defs)
    subgoal using vector_16_AMEVCNTR1_EL0_Type by (auto simp: register_defs)
    subgoal using CNTV_CVAL_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using SPMACCESSR_EL3_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_ICV_AP1R_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using RNDR_Type by (auto simp: register_defs)
    subgoal using SMPRIMAP_EL2_Type by (auto simp: register_defs)
    subgoal using RNDRRS_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using PMIAR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using PMICNTSVR_EL1_Type by (auto simp: register_defs)
    subgoal using SPMACCESSR_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using PMCCNTSVR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_ICC_AP1R_EL1_Type by (auto simp: register_defs)
    subgoal using vector_4_ICC_AP1R_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_ICH_AP0R_EL2_Type by (auto simp: register_defs)
    subgoal using vector_31_PMEVCNTSVR_EL1_Type by (auto simp: register_defs)
    subgoal using vector_4_ICH_AP1R_EL2_Type by (auto simp: register_defs)
    subgoal using SPMACCESSR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_4_bitvector_64 by (auto simp: register_defs)
    subgoal using vector_16_ICH_LR_EL2_Type by (auto simp: register_defs)
    subgoal using PMCCNTR_Type by (auto simp: register_defs)
    subgoal using PMOVSSET_Type by (auto simp: register_defs)
    subgoal using vector_31_bitvector_32 by (auto simp: register_defs)
    subgoal using vector_16_DBGWVR_Type by (auto simp: register_defs)
    subgoal using vector_16_DBGWCR_Type by (auto simp: register_defs)
    subgoal using vector_16_DBGBXVR_Type by (auto simp: register_defs)
    subgoal using vector_16_DBGBVR_Type by (auto simp: register_defs)
    subgoal using vector_16_DBGBCR_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using bitvector_1 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using DBGDTR_EL0_Type by (auto simp: register_defs)
    subgoal using DACR_Type by (auto simp: register_defs)
    subgoal using DACR_Type by (auto simp: register_defs)
    subgoal using HMAIR1_Type by (auto simp: register_defs)
    subgoal using HMAIR0_Type by (auto simp: register_defs)
    subgoal using MAIR1_Type by (auto simp: register_defs)
    subgoal using MAIR1_Type by (auto simp: register_defs)
    subgoal using MAIR0_Type by (auto simp: register_defs)
    subgoal using MAIR0_Type by (auto simp: register_defs)
    subgoal using BRBTGTINJ_EL1_Type by (auto simp: register_defs)
    subgoal using BRBSRCINJ_EL1_Type by (auto simp: register_defs)
    subgoal using vector_32_int by (auto simp: register_defs)
    subgoal using vector_64_bitvector_8 by (auto simp: register_defs)
    subgoal using PMSDSFR_EL1_Type by (auto simp: register_defs)
    subgoal using PMBPTR_EL1_Type by (auto simp: register_defs)
    subgoal using PMCCNTR_EL0_Type by (auto simp: register_defs)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_16 by (auto simp: register_defs)
    subgoal using bitvector_16 by (auto simp: register_defs)
    subgoal using ID_AA64PFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64MMFR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64ISAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64DFR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64DFR0_EL1_Type by (auto simp: register_defs)
    subgoal using GICD_TYPER_Type by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using EDDEVARCH_Type by (auto simp: register_defs)
    subgoal using CTIDEVARCH_Type by (auto simp: register_defs)
    subgoal using CNTFID0_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using AMIIDR_Type by (auto simp: register_defs)
    subgoal using vector_4_AMEVTYPER0_EL0_Type by (auto simp: register_defs)
    subgoal using AMDEVARCH_Type by (auto simp: register_defs)
    subgoal using SPMSELR_EL0_Type by (auto simp: register_defs)
    subgoal using SMPRI_EL1_Type by (auto simp: register_defs)
    subgoal using SMIDR_EL1_Type by (auto simp: register_defs)
    subgoal using PMZR_EL0_Type by (auto simp: register_defs)
    subgoal using PMXEVCNTR_EL0_Type by (auto simp: register_defs)
    subgoal using PMUACR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSSCR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSNEVFR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSLATFR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSIRR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSICR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSFCR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSEVFR_EL1_Type by (auto simp: register_defs)
    subgoal using PMMIR_EL1_Type by (auto simp: register_defs)
    subgoal using PMECR_EL1_Type by (auto simp: register_defs)
    subgoal using PMBIDR_EL1_Type by (auto simp: register_defs)
    subgoal using PAR_EL1_Type by (auto simp: register_defs)
    subgoal using OSLAR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using MECIDR_EL2_Type by (auto simp: register_defs)
    subgoal using MDSELR_EL1_Type by (auto simp: register_defs)
    subgoal using LORSA_EL1_Type by (auto simp: register_defs)
    subgoal using LORN_EL1_Type by (auto simp: register_defs)
    subgoal using LORID_EL1_Type by (auto simp: register_defs)
    subgoal using LOREA_EL1_Type by (auto simp: register_defs)
    subgoal using LORC_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64ZFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64SMFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64PFR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64PFR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64MMFR4_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64MMFR3_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64MMFR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64MMFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64ISAR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_AA64ISAR0_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using ICV_NMIAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_EL3_Type by (auto simp: register_defs)
    subgoal using ICC_NMIAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN1_EL3_Type by (auto simp: register_defs)
    subgoal using ICC_CTLR_EL3_Type by (auto simp: register_defs)
    subgoal using HFGWTR_EL2_Type by (auto simp: register_defs)
    subgoal using HFGWTR2_EL2_Type by (auto simp: register_defs)
    subgoal using HFGRTR_EL2_Type by (auto simp: register_defs)
    subgoal using HFGRTR2_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using HDFGWTR_EL2_Type by (auto simp: register_defs)
    subgoal using HDFGWTR2_EL2_Type by (auto simp: register_defs)
    subgoal using HDFGRTR_EL2_Type by (auto simp: register_defs)
    subgoal using HDFGRTR2_EL2_Type by (auto simp: register_defs)
    subgoal using HAFGRTR_EL2_Type by (auto simp: register_defs)
    subgoal using GMID_EL1_Type by (auto simp: register_defs)
    subgoal using DCZID_EL0_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using DACR32_EL2_Type by (auto simp: register_defs)
    subgoal using CNTV_TVAL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTP_TVAL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTPS_TVAL_EL1_Type by (auto simp: register_defs)
    subgoal using CNTHV_TVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHVS_TVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHP_TVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHPS_TVAL_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using BRBINFINJ_EL1_Type by (auto simp: register_defs)
    subgoal using AMCG1IDR_EL0_Type by (auto simp: register_defs)
    subgoal using ACCDATA_EL1_Type by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using TLBTR_Type by (auto simp: register_defs)
    subgoal using PMCEID3_Type by (auto simp: register_defs)
    subgoal using PMCEID2_Type by (auto simp: register_defs)
    subgoal using PMCEID1_Type by (auto simp: register_defs)
    subgoal using PMCEID1_EL0_Type by (auto simp: register_defs)
    subgoal using PMCEID0_Type by (auto simp: register_defs)
    subgoal using PMCEID0_EL0_Type by (auto simp: register_defs)
    subgoal using NMRR_Type by (auto simp: register_defs)
    subgoal using NMRR_Type by (auto simp: register_defs)
    subgoal using MVFR1_Type by (auto simp: register_defs)
    subgoal using MVFR1_EL1_Type by (auto simp: register_defs)
    subgoal using MVFR0_Type by (auto simp: register_defs)
    subgoal using MVFR0_EL1_Type by (auto simp: register_defs)
    subgoal using MIDR_Type by (auto simp: register_defs)
    subgoal using MIDR_EL1_Type by (auto simp: register_defs)
    subgoal using ID_PFR1_Type by (auto simp: register_defs)
    subgoal using ID_PFR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_PFR0_Type by (auto simp: register_defs)
    subgoal using ID_PFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR4_Type by (auto simp: register_defs)
    subgoal using ID_MMFR4_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR3_Type by (auto simp: register_defs)
    subgoal using ID_MMFR3_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR2_Type by (auto simp: register_defs)
    subgoal using ID_MMFR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR0_Type by (auto simp: register_defs)
    subgoal using ID_MMFR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR6_Type by (auto simp: register_defs)
    subgoal using ID_ISAR6_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR4_Type by (auto simp: register_defs)
    subgoal using ID_ISAR4_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR3_Type by (auto simp: register_defs)
    subgoal using ID_ISAR3_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR2_Type by (auto simp: register_defs)
    subgoal using ID_ISAR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ID_DFR0_Type by (auto simp: register_defs)
    subgoal using ID_DFR0_EL1_Type by (auto simp: register_defs)
    subgoal using FPSID_Type by (auto simp: register_defs)
    subgoal using DBGDEVID_Type by (auto simp: register_defs)
    subgoal using CLIDR_Type by (auto simp: register_defs)
    subgoal using VTCR_Type by (auto simp: register_defs)
    subgoal using VPIDR_Type by (auto simp: register_defs)
    subgoal using VPIDR_EL2_Type by (auto simp: register_defs)
    subgoal using VMPIDR_Type by (auto simp: register_defs)
    subgoal using VMPIDR_EL2_Type by (auto simp: register_defs)
    subgoal using TTBCR2_Type by (auto simp: register_defs)
    subgoal using TTBCR2_Type by (auto simp: register_defs)
    subgoal using TRFCR_Type by (auto simp: register_defs)
    subgoal using TRFCR_EL1_Type by (auto simp: register_defs)
    subgoal using RMR_Type by (auto simp: register_defs)
    subgoal using RMR_EL3_Type by (auto simp: register_defs)
    subgoal using RMR_EL1_Type by (auto simp: register_defs)
    subgoal using PRRR_Type by (auto simp: register_defs)
    subgoal using PRRR_Type by (auto simp: register_defs)
    subgoal using PMVIDSR_Type by (auto simp: register_defs)
    subgoal using PMVCIDSR_Type by (auto simp: register_defs)
    subgoal using PMUSERENR_Type by (auto simp: register_defs)
    subgoal using PMUSERENR_EL0_Type by (auto simp: register_defs)
    subgoal using PMSWINC_Type by (auto simp: register_defs)
    subgoal using PMSWINC_EL0_Type by (auto simp: register_defs)
    subgoal using PMSELR_Type by (auto simp: register_defs)
    subgoal using PMSELR_EL0_Type by (auto simp: register_defs)
    subgoal using PMPIDR4_Type by (auto simp: register_defs)
    subgoal using PMPIDR3_Type by (auto simp: register_defs)
    subgoal using PMPIDR2_Type by (auto simp: register_defs)
    subgoal using PMPIDR1_Type by (auto simp: register_defs)
    subgoal using PMPIDR0_Type by (auto simp: register_defs)
    subgoal using PMPCSR_Type by (auto simp: register_defs)
    subgoal using PMPCSCTL_Type by (auto simp: register_defs)
    subgoal using PMOVS_Type by (auto simp: register_defs)
    subgoal using PMMIR_Type by (auto simp: register_defs)
    subgoal using PMLSR_Type by (auto simp: register_defs)
    subgoal using PMLAR_Type by (auto simp: register_defs)
    subgoal using PMITCTRL_Type by (auto simp: register_defs)
    subgoal using PMINTEN_Type by (auto simp: register_defs)
    subgoal using PMINTENSET_EL1_Type by (auto simp: register_defs)
    subgoal using PMIIDR_Type by (auto simp: register_defs)
    subgoal using PMDEVTYPE_Type by (auto simp: register_defs)
    subgoal using PMDEVID_Type by (auto simp: register_defs)
    subgoal using PMCNTEN_Type by (auto simp: register_defs)
    subgoal using PMCIDR3_Type by (auto simp: register_defs)
    subgoal using PMCIDR2_Type by (auto simp: register_defs)
    subgoal using PMCIDR1_Type by (auto simp: register_defs)
    subgoal using PMCIDR0_Type by (auto simp: register_defs)
    subgoal using PMCGCR0_Type by (auto simp: register_defs)
    subgoal using PMCFGR_Type by (auto simp: register_defs)
    subgoal using PMAUTHSTATUS_Type by (auto simp: register_defs)
    subgoal using PAR_Type by (auto simp: register_defs)
    subgoal using PAR_Type by (auto simp: register_defs)
    subgoal using MVFR2_Type by (auto simp: register_defs)
    subgoal using MVFR2_EL1_Type by (auto simp: register_defs)
    subgoal using MPIDR_Type by (auto simp: register_defs)
    subgoal using MPIDR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using ISR_Type by (auto simp: register_defs)
    subgoal using ISR_EL1_Type by (auto simp: register_defs)
    subgoal using ID_PFR2_Type by (auto simp: register_defs)
    subgoal using ID_PFR2_EL1_Type by (auto simp: register_defs)
    subgoal using ID_MMFR5_Type by (auto simp: register_defs)
    subgoal using ID_MMFR5_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR5_Type by (auto simp: register_defs)
    subgoal using ID_ISAR5_EL1_Type by (auto simp: register_defs)
    subgoal using ID_ISAR0_Type by (auto simp: register_defs)
    subgoal using ID_ISAR0_EL1_Type by (auto simp: register_defs)
    subgoal using ID_DFR1_Type by (auto simp: register_defs)
    subgoal using ID_DFR1_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using ICV_RPR_Type by (auto simp: register_defs)
    subgoal using ICV_RPR_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_PMR_Type by (auto simp: register_defs)
    subgoal using ICV_PMR_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_IGRPEN1_Type by (auto simp: register_defs)
    subgoal using ICV_IGRPEN1_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_IGRPEN0_Type by (auto simp: register_defs)
    subgoal using ICV_IGRPEN0_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_IAR1_Type by (auto simp: register_defs)
    subgoal using ICV_IAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_IAR0_Type by (auto simp: register_defs)
    subgoal using ICV_IAR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_HPPIR1_Type by (auto simp: register_defs)
    subgoal using ICV_HPPIR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_HPPIR0_Type by (auto simp: register_defs)
    subgoal using ICV_HPPIR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_EOIR1_Type by (auto simp: register_defs)
    subgoal using ICV_EOIR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_EOIR0_Type by (auto simp: register_defs)
    subgoal using ICV_EOIR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_DIR_Type by (auto simp: register_defs)
    subgoal using ICV_DIR_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_CTLR_Type by (auto simp: register_defs)
    subgoal using ICV_CTLR_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_BPR1_Type by (auto simp: register_defs)
    subgoal using ICV_BPR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICV_BPR0_Type by (auto simp: register_defs)
    subgoal using ICV_BPR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICH_VTR_Type by (auto simp: register_defs)
    subgoal using ICH_VTR_EL2_Type by (auto simp: register_defs)
    subgoal using ICH_VMCR_Type by (auto simp: register_defs)
    subgoal using ICH_VMCR_EL2_Type by (auto simp: register_defs)
    subgoal using ICH_MISR_Type by (auto simp: register_defs)
    subgoal using ICH_MISR_EL2_Type by (auto simp: register_defs)
    subgoal using ICH_HCR_Type by (auto simp: register_defs)
    subgoal using ICH_HCR_EL2_Type by (auto simp: register_defs)
    subgoal using ICH_ELRSR_Type by (auto simp: register_defs)
    subgoal using ICH_ELRSR_EL2_Type by (auto simp: register_defs)
    subgoal using ICH_EISR_Type by (auto simp: register_defs)
    subgoal using ICH_EISR_EL2_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_SGI1R_Type by (auto simp: register_defs)
    subgoal using ICC_SGI1R_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_SGI0R_Type by (auto simp: register_defs)
    subgoal using ICC_SGI0R_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_RPR_Type by (auto simp: register_defs)
    subgoal using ICC_RPR_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_PMR_Type by (auto simp: register_defs)
    subgoal using ICC_MSRE_Type by (auto simp: register_defs)
    subgoal using ICC_MGRPEN1_Type by (auto simp: register_defs)
    subgoal using ICC_MCTLR_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN1_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN1_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN0_Type by (auto simp: register_defs)
    subgoal using ICC_IGRPEN0_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_IAR1_Type by (auto simp: register_defs)
    subgoal using ICC_IAR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_IAR0_Type by (auto simp: register_defs)
    subgoal using ICC_IAR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_HSRE_Type by (auto simp: register_defs)
    subgoal using ICC_SRE_EL2_Type by (auto simp: register_defs)
    subgoal using ICC_HPPIR1_Type by (auto simp: register_defs)
    subgoal using ICC_HPPIR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_HPPIR0_Type by (auto simp: register_defs)
    subgoal using ICC_HPPIR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_EOIR1_Type by (auto simp: register_defs)
    subgoal using ICC_EOIR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_EOIR0_Type by (auto simp: register_defs)
    subgoal using ICC_EOIR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_DIR_Type by (auto simp: register_defs)
    subgoal using ICC_DIR_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_CTLR_Type by (auto simp: register_defs)
    subgoal using ICC_CTLR_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_CTLR_Type by (auto simp: register_defs)
    subgoal using ICC_CTLR_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_BPR1_Type by (auto simp: register_defs)
    subgoal using ICC_BPR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_BPR1_Type by (auto simp: register_defs)
    subgoal using ICC_BPR1_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_BPR0_Type by (auto simp: register_defs)
    subgoal using ICC_BPR0_EL1_Type by (auto simp: register_defs)
    subgoal using ICC_ASGI1R_Type by (auto simp: register_defs)
    subgoal using ICC_ASGI1R_EL1_Type by (auto simp: register_defs)
    subgoal using HTRFCR_Type by (auto simp: register_defs)
    subgoal using TRFCR_EL2_Type by (auto simp: register_defs)
    subgoal using HTCR_Type by (auto simp: register_defs)
    subgoal using HSTR_Type by (auto simp: register_defs)
    subgoal using HSTR_EL2_Type by (auto simp: register_defs)
    subgoal using HRMR_Type by (auto simp: register_defs)
    subgoal using RMR_EL2_Type by (auto simp: register_defs)
    subgoal using GITS_TYPER_Type by (auto simp: register_defs)
    subgoal using GITS_STATUSR_Type by (auto simp: register_defs)
    subgoal using GITS_SGIR_Type by (auto simp: register_defs)
    subgoal using GITS_PARTIDR_Type by (auto simp: register_defs)
    subgoal using GITS_MPIDR_Type by (auto simp: register_defs)
    subgoal using GITS_MPAMIDR_Type by (auto simp: register_defs)
    subgoal using GITS_IIDR_Type by (auto simp: register_defs)
    subgoal using GITS_CWRITER_Type by (auto simp: register_defs)
    subgoal using GITS_CTLR_Type by (auto simp: register_defs)
    subgoal using GITS_CREADR_Type by (auto simp: register_defs)
    subgoal using GITS_CBASER_Type by (auto simp: register_defs)
    subgoal using GICV_STATUSR_Type by (auto simp: register_defs)
    subgoal using GICV_RPR_Type by (auto simp: register_defs)
    subgoal using GICV_PMR_Type by (auto simp: register_defs)
    subgoal using GICV_IAR_Type by (auto simp: register_defs)
    subgoal using GICV_HPPIR_Type by (auto simp: register_defs)
    subgoal using GICV_EOIR_Type by (auto simp: register_defs)
    subgoal using GICV_DIR_Type by (auto simp: register_defs)
    subgoal using GICV_CTLR_Type by (auto simp: register_defs)
    subgoal using GICV_BPR_Type by (auto simp: register_defs)
    subgoal using GICV_AIAR_Type by (auto simp: register_defs)
    subgoal using GICV_AHPPIR_Type by (auto simp: register_defs)
    subgoal using GICV_AEOIR_Type by (auto simp: register_defs)
    subgoal using GICV_ABPR_Type by (auto simp: register_defs)
    subgoal using GICR_WAKER_Type by (auto simp: register_defs)
    subgoal using GICR_VSGIR_Type by (auto simp: register_defs)
    subgoal using GICR_VSGIPENDR_Type by (auto simp: register_defs)
    subgoal using GICR_VPROPBASER_Type by (auto simp: register_defs)
    subgoal using GICR_VPENDBASER_Type by (auto simp: register_defs)
    subgoal using GICR_SYNCR_Type by (auto simp: register_defs)
    subgoal using GICR_STATUSR_Type by (auto simp: register_defs)
    subgoal using GICR_SETLPIR_Type by (auto simp: register_defs)
    subgoal using GICR_PROPBASER_Type by (auto simp: register_defs)
    subgoal using GICR_PENDBASER_Type by (auto simp: register_defs)
    subgoal using GICR_PARTIDR_Type by (auto simp: register_defs)
    subgoal using GICR_MPAMIDR_Type by (auto simp: register_defs)
    subgoal using GICR_ISENABLER0_Type by (auto simp: register_defs)
    subgoal using GICR_INVLPIR_Type by (auto simp: register_defs)
    subgoal using GICR_INVALLR_Type by (auto simp: register_defs)
    subgoal using GICR_INMIR0_Type by (auto simp: register_defs)
    subgoal using GICR_IIDR_Type by (auto simp: register_defs)
    subgoal using GICR_CTLR_Type by (auto simp: register_defs)
    subgoal using GICR_CLRLPIR_Type by (auto simp: register_defs)
    subgoal using GICM_TYPER_Type by (auto simp: register_defs)
    subgoal using GICM_SETSPI_SR_Type by (auto simp: register_defs)
    subgoal using GICM_SETSPI_NSR_Type by (auto simp: register_defs)
    subgoal using GICM_IIDR_Type by (auto simp: register_defs)
    subgoal using GICM_CLRSPI_SR_Type by (auto simp: register_defs)
    subgoal using GICM_CLRSPI_NSR_Type by (auto simp: register_defs)
    subgoal using GICH_VTR_Type by (auto simp: register_defs)
    subgoal using GICH_VMCR_Type by (auto simp: register_defs)
    subgoal using GICH_MISR_Type by (auto simp: register_defs)
    subgoal using GICH_HCR_Type by (auto simp: register_defs)
    subgoal using GICH_ELRSR_Type by (auto simp: register_defs)
    subgoal using GICH_EISR_Type by (auto simp: register_defs)
    subgoal using GICD_TYPER2_Type by (auto simp: register_defs)
    subgoal using GICD_STATUSR_Type by (auto simp: register_defs)
    subgoal using GICD_SGIR_Type by (auto simp: register_defs)
    subgoal using GICD_SETSPI_SR_Type by (auto simp: register_defs)
    subgoal using GICD_SETSPI_NSR_Type by (auto simp: register_defs)
    subgoal using GICD_IIDR_Type by (auto simp: register_defs)
    subgoal using GICD_CTLR_Type by (auto simp: register_defs)
    subgoal using GICD_CLRSPI_SR_Type by (auto simp: register_defs)
    subgoal using GICD_CLRSPI_NSR_Type by (auto simp: register_defs)
    subgoal using GICC_STATUSR_Type by (auto simp: register_defs)
    subgoal using GICC_RPR_Type by (auto simp: register_defs)
    subgoal using GICC_PMR_Type by (auto simp: register_defs)
    subgoal using GICC_IAR_Type by (auto simp: register_defs)
    subgoal using GICC_HPPIR_Type by (auto simp: register_defs)
    subgoal using GICC_EOIR_Type by (auto simp: register_defs)
    subgoal using GICC_DIR_Type by (auto simp: register_defs)
    subgoal using GICC_BPR_Type by (auto simp: register_defs)
    subgoal using GICC_AIAR_Type by (auto simp: register_defs)
    subgoal using GICC_AHPPIR_Type by (auto simp: register_defs)
    subgoal using GICC_AEOIR_Type by (auto simp: register_defs)
    subgoal using GICC_ABPR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using ERRSELR_Type by (auto simp: register_defs)
    subgoal using ERRSELR_EL1_Type by (auto simp: register_defs)
    subgoal using ERRIDR_Type by (auto simp: register_defs)
    subgoal using ERRIDR_EL1_Type by (auto simp: register_defs)
    subgoal using EDVIDSR_Type by (auto simp: register_defs)
    subgoal using EDRCR_Type by (auto simp: register_defs)
    subgoal using EDPRSR_Type by (auto simp: register_defs)
    subgoal using EDPRCR_Type by (auto simp: register_defs)
    subgoal using EDPIDR4_Type by (auto simp: register_defs)
    subgoal using EDPIDR3_Type by (auto simp: register_defs)
    subgoal using EDPIDR2_Type by (auto simp: register_defs)
    subgoal using EDPIDR1_Type by (auto simp: register_defs)
    subgoal using EDPIDR0_Type by (auto simp: register_defs)
    subgoal using EDPFR_Type by (auto simp: register_defs)
    subgoal using EDPCSR_Type by (auto simp: register_defs)
    subgoal using EDLSR_Type by (auto simp: register_defs)
    subgoal using EDLAR_Type by (auto simp: register_defs)
    subgoal using EDITCTRL_Type by (auto simp: register_defs)
    subgoal using EDHSR_Type by (auto simp: register_defs)
    subgoal using EDDFR1_Type by (auto simp: register_defs)
    subgoal using EDDFR_Type by (auto simp: register_defs)
    subgoal using EDDEVTYPE_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using EDDEVID1_Type by (auto simp: register_defs)
    subgoal using EDDEVID_Type by (auto simp: register_defs)
    subgoal using EDCIDR3_Type by (auto simp: register_defs)
    subgoal using EDCIDR2_Type by (auto simp: register_defs)
    subgoal using EDCIDR1_Type by (auto simp: register_defs)
    subgoal using EDCIDR0_Type by (auto simp: register_defs)
    subgoal using EDAA32PFR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGVCR_Type by (auto simp: register_defs)
    subgoal using DBGVCR32_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using DBGDRAR_Type by (auto simp: register_defs)
    subgoal using MDRAR_EL1_Type by (auto simp: register_defs)
    subgoal using DBGDIDR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using DBGDEVID1_Type by (auto simp: register_defs)
    subgoal using DBGDCCINT_Type by (auto simp: register_defs)
    subgoal using MDCCINT_EL1_Type by (auto simp: register_defs)
    subgoal using DBGCLAIMSET_Type by (auto simp: register_defs)
    subgoal using DBGCLAIMSET_EL1_Type by (auto simp: register_defs)
    subgoal using DBGCLAIMCLR_Type by (auto simp: register_defs)
    subgoal using DBGCLAIMCLR_EL1_Type by (auto simp: register_defs)
    subgoal using DBGAUTHSTATUS_Type by (auto simp: register_defs)
    subgoal using DBGAUTHSTATUS_EL1_Type by (auto simp: register_defs)
    subgoal using CTR_Type by (auto simp: register_defs)
    subgoal using CTIPIDR4_Type by (auto simp: register_defs)
    subgoal using CTIPIDR3_Type by (auto simp: register_defs)
    subgoal using CTIPIDR2_Type by (auto simp: register_defs)
    subgoal using CTIPIDR1_Type by (auto simp: register_defs)
    subgoal using CTIPIDR0_Type by (auto simp: register_defs)
    subgoal using CTILSR_Type by (auto simp: register_defs)
    subgoal using CTILAR_Type by (auto simp: register_defs)
    subgoal using CTIITCTRL_Type by (auto simp: register_defs)
    subgoal using CTIDEVTYPE_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using CTIDEVID_Type by (auto simp: register_defs)
    subgoal using CTIDEVCTL_Type by (auto simp: register_defs)
    subgoal using CTICONTROL_Type by (auto simp: register_defs)
    subgoal using CTICIDR3_Type by (auto simp: register_defs)
    subgoal using CTICIDR2_Type by (auto simp: register_defs)
    subgoal using CTICIDR1_Type by (auto simp: register_defs)
    subgoal using CTICIDR0_Type by (auto simp: register_defs)
    subgoal using CTIAUTHSTATUS_Type by (auto simp: register_defs)
    subgoal using CSSELR_Type by (auto simp: register_defs)
    subgoal using CSSELR_Type by (auto simp: register_defs)
    subgoal using CSSELR_EL1_Type by (auto simp: register_defs)
    subgoal using CNTV_CTL_Type by (auto simp: register_defs)
    subgoal using CNTSR_Type by (auto simp: register_defs)
    subgoal using CNTNSAR_Type by (auto simp: register_defs)
    subgoal using CNTID_Type by (auto simp: register_defs)
    subgoal using CNTHV_CTL_Type by (auto simp: register_defs)
    subgoal using CNTHVS_CTL_Type by (auto simp: register_defs)
    subgoal using CNTHPS_CTL_Type by (auto simp: register_defs)
    subgoal using CNTHCTL_Type by (auto simp: register_defs)
    subgoal using CNTEL0ACR_Type by (auto simp: register_defs)
    subgoal using CCSIDR_Type by (auto simp: register_defs)
    subgoal using CCSIDR_EL1_Type by (auto simp: register_defs)
    subgoal using CCSIDR2_Type by (auto simp: register_defs)
    subgoal using CCSIDR2_EL1_Type by (auto simp: register_defs)
    subgoal using AMUSERENR_Type by (auto simp: register_defs)
    subgoal using AMUSERENR_EL0_Type by (auto simp: register_defs)
    subgoal using AMPIDR4_Type by (auto simp: register_defs)
    subgoal using AMPIDR3_Type by (auto simp: register_defs)
    subgoal using AMPIDR2_Type by (auto simp: register_defs)
    subgoal using AMPIDR1_Type by (auto simp: register_defs)
    subgoal using AMPIDR0_Type by (auto simp: register_defs)
    subgoal using AMDEVTYPE_Type by (auto simp: register_defs)
    subgoal using AMCR_Type by (auto simp: register_defs)
    subgoal using AMCR_EL0_Type by (auto simp: register_defs)
    subgoal using AMCNTENSET1_Type by (auto simp: register_defs)
    subgoal using AMCNTENSET1_EL0_Type by (auto simp: register_defs)
    subgoal using AMCNTENSET0_Type by (auto simp: register_defs)
    subgoal using AMCNTENSET0_EL0_Type by (auto simp: register_defs)
    subgoal using AMCNTENCLR1_Type by (auto simp: register_defs)
    subgoal using AMCNTENCLR1_EL0_Type by (auto simp: register_defs)
    subgoal using AMCNTENCLR0_Type by (auto simp: register_defs)
    subgoal using AMCNTENCLR0_EL0_Type by (auto simp: register_defs)
    subgoal using AMCIDR3_Type by (auto simp: register_defs)
    subgoal using AMCIDR2_Type by (auto simp: register_defs)
    subgoal using AMCIDR1_Type by (auto simp: register_defs)
    subgoal using AMCIDR0_Type by (auto simp: register_defs)
    subgoal using AMCGCR_Type by (auto simp: register_defs)
    subgoal using AMCGCR_EL0_Type by (auto simp: register_defs)
    subgoal using AMCFGR_Type by (auto simp: register_defs)
    subgoal using AMCFGR_EL0_Type by (auto simp: register_defs)
    subgoal using RVBAR_EL3_Type by (auto simp: register_defs)
    subgoal using RVBAR_EL2_Type by (auto simp: register_defs)
    subgoal using RVBAR_EL1_Type by (auto simp: register_defs)
    subgoal using VDISR_Type by (auto simp: register_defs)
    subgoal using VDISR_EL2_Type by (auto simp: register_defs)
    subgoal using VDFSR_Type by (auto simp: register_defs)
    subgoal using VSESR_EL2_Type by (auto simp: register_defs)
    subgoal using DISR_Type by (auto simp: register_defs)
    subgoal using DISR_EL1_Type by (auto simp: register_defs)
    subgoal using HFGITR_EL2_Type by (auto simp: register_defs)
    subgoal using VNCR_EL2_Type by (auto simp: register_defs)
    subgoal using RCWSMASK_EL1_Type by (auto simp: register_defs)
    subgoal using RCWMASK_EL1_Type by (auto simp: register_defs)
    subgoal using vector_32_bool by (auto simp: register_defs)
    subgoal using vector_32_bool by (auto simp: register_defs)
    subgoal using VMECID_A_EL2_Type by (auto simp: register_defs)
    subgoal using S2POR_EL1_Type by (auto simp: register_defs)
    subgoal using VSTTBR_EL2_Type by (auto simp: register_defs)
    subgoal using VSTCR_EL2_Type by (auto simp: register_defs)
    subgoal using S2PIR_EL2_Type by (auto simp: register_defs)
    subgoal using MECID_RL_A_EL3_Type by (auto simp: register_defs)
    subgoal using MECID_P1_EL2_Type by (auto simp: register_defs)
    subgoal using MECID_A1_EL2_Type by (auto simp: register_defs)
    subgoal using MECID_A0_EL2_Type by (auto simp: register_defs)
    subgoal using VMECID_P_EL2_Type by (auto simp: register_defs)
    subgoal using MECID_P0_EL2_Type by (auto simp: register_defs)
    subgoal using POR_EL0_Type by (auto simp: register_defs)
    subgoal using POR_EL3_Type by (auto simp: register_defs)
    subgoal using POR_EL2_Type by (auto simp: register_defs)
    subgoal using POR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_64_DBGWVR_EL1_Type by (auto simp: register_defs)
    subgoal using vector_64_DBGWCR_EL1_Type by (auto simp: register_defs)
    subgoal using VTTBR_EL2_Type by (auto simp: register_defs)
    subgoal using VTTBR_Type by (auto simp: register_defs)
    subgoal using VTCR_EL2_Type by (auto simp: register_defs)
    subgoal using EDSCR2_Type by (auto simp: register_defs)
    subgoal using vector_64_DBGBVR_EL1_Type by (auto simp: register_defs)
    subgoal using vector_64_DBGBCR_EL1_Type by (auto simp: register_defs)
    subgoal using CONTEXTIDR_EL2_Type by (auto simp: register_defs)
    subgoal using TFSR_EL3_Type by (auto simp: register_defs)
    subgoal using TFSR_EL2_Type by (auto simp: register_defs)
    subgoal using TFSR_EL1_Type by (auto simp: register_defs)
    subgoal using TFSRE0_EL1_Type by (auto simp: register_defs)
    subgoal using RGSR_EL1_Type by (auto simp: register_defs)
    subgoal using GCR_EL1_Type by (auto simp: register_defs)
    subgoal using CNTKCTL_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using TTBR0_EL3_Type by (auto simp: register_defs)
    subgoal using SCTLR2_EL3_Type by (auto simp: register_defs)
    subgoal using PIR_EL3_Type by (auto simp: register_defs)
    subgoal using MAIR_EL3_Type by (auto simp: register_defs)
    subgoal using MAIR2_EL3_Type by (auto simp: register_defs)
    subgoal using PIRE0_EL2_Type by (auto simp: register_defs)
    subgoal using TCR2_EL2_Type by (auto simp: register_defs)
    subgoal using PIR_EL2_Type by (auto simp: register_defs)
    subgoal using MAIR_EL2_Type by (auto simp: register_defs)
    subgoal using MAIR2_EL2_Type by (auto simp: register_defs)
    subgoal using TCR2_EL1_Type by (auto simp: register_defs)
    subgoal using PIR_EL1_Type by (auto simp: register_defs)
    subgoal using PIRE0_EL1_Type by (auto simp: register_defs)
    subgoal using MAIR_EL1_Type by (auto simp: register_defs)
    subgoal using MAIR2_EL1_Type by (auto simp: register_defs)
    subgoal using GICC_CTLR_Type by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using GPTBR_EL3_Type by (auto simp: register_defs)
    subgoal using GPCCR_EL3_Type by (auto simp: register_defs)
    subgoal using CNTKCTL_EL1_Type by (auto simp: register_defs)
    subgoal using CNTSCR_Type by (auto simp: register_defs)
    subgoal using CNTCR_Type by (auto simp: register_defs)
    subgoal using CNTPS_CVAL_EL1_Type by (auto simp: register_defs)
    subgoal using CNTPS_CTL_EL1_Type by (auto simp: register_defs)
    subgoal using CNTHV_CVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHV_CTL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHVS_CVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHVS_CTL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHPS_CVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHPS_CTL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTV_CVAL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTV_CTL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTP_CVAL_Type by (auto simp: register_defs)
    subgoal using CNTP_CVAL_Type by (auto simp: register_defs)
    subgoal using CNTP_CVAL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTP_CTL_Type by (auto simp: register_defs)
    subgoal using CNTP_CTL_Type by (auto simp: register_defs)
    subgoal using CNTP_CTL_EL0_Type by (auto simp: register_defs)
    subgoal using CNTHP_CVAL_Type by (auto simp: register_defs)
    subgoal using CNTHP_CVAL_EL2_Type by (auto simp: register_defs)
    subgoal using CNTHP_CTL_Type by (auto simp: register_defs)
    subgoal using CNTHP_CTL_EL2_Type by (auto simp: register_defs)
    subgoal using FPEXC_Type by (auto simp: register_defs)
    subgoal using FPEXC32_EL2_Type by (auto simp: register_defs)
    subgoal using SCTLR2_EL2_Type by (auto simp: register_defs)
    subgoal using SCTLR2_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using HCR2_Type by (auto simp: register_defs)
    subgoal using DBGDSCRext_Type by (auto simp: register_defs)
    subgoal using DBGDSCRint_Type by (auto simp: register_defs)
    subgoal using IFSR_Type by (auto simp: register_defs)
    subgoal using IFSR_Type by (auto simp: register_defs)
    subgoal using IFSR32_EL2_Type by (auto simp: register_defs)
    subgoal using DFSR_Type by (auto simp: register_defs)
    subgoal using DFSR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using MVBAR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using HSR_Type by (auto simp: register_defs)
    subgoal using HPFAR_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using TTBR1_EL2_Type by (auto simp: register_defs)
    subgoal using TTBR1_EL1_Type by (auto simp: register_defs)
    subgoal using TTBR1_Type by (auto simp: register_defs)
    subgoal using TTBR1_Type by (auto simp: register_defs)
    subgoal using TTBR0_EL2_Type by (auto simp: register_defs)
    subgoal using HTTBR_Type by (auto simp: register_defs)
    subgoal using TTBR0_EL1_Type by (auto simp: register_defs)
    subgoal using TTBR0_Type by (auto simp: register_defs)
    subgoal using TTBR0_Type by (auto simp: register_defs)
    subgoal using CONTEXTIDR_Type by (auto simp: register_defs)
    subgoal using CONTEXTIDR_Type by (auto simp: register_defs)
    subgoal using TTBCR_Type by (auto simp: register_defs)
    subgoal using TTBCR_Type by (auto simp: register_defs)
    subgoal using CONTEXTIDR_EL1_Type by (auto simp: register_defs)
    subgoal using CLIDR_EL1_Type by (auto simp: register_defs)
    subgoal using MPAMSM_EL1_Type by (auto simp: register_defs)
    subgoal using MPAM0_EL1_Type by (auto simp: register_defs)
    subgoal using MPAMVPM7_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM6_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM5_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM4_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM3_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM2_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM1_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPMV_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMVPM0_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMHCR_EL2_Type by (auto simp: register_defs)
    subgoal using MPAMIDR_EL1_Type by (auto simp: register_defs)
    subgoal using MPAM1_EL1_Type by (auto simp: register_defs)
    subgoal using MPAM3_EL3_Type by (auto simp: register_defs)
    subgoal using MPAM2_EL2_Type by (auto simp: register_defs)
    subgoal using HCRX_EL2_Type by (auto simp: register_defs)
    subgoal using GCSCRE0_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using EDESR_Type by (auto simp: register_defs)
    subgoal using EDECCR_Type by (auto simp: register_defs)
    subgoal using OSECCR_EL1_Type by (auto simp: register_defs)
    subgoal using SPSR_und_Type by (auto simp: register_defs)
    subgoal using SPSR_svc_Type by (auto simp: register_defs)
    subgoal using SPSR_mon_Type by (auto simp: register_defs)
    subgoal using SPSR_irq_Type by (auto simp: register_defs)
    subgoal using SPSR_hyp_Type by (auto simp: register_defs)
    subgoal using SPSR_fiq_Type by (auto simp: register_defs)
    subgoal using SPSR_abt_Type by (auto simp: register_defs)
    subgoal using SPSR_EL3_Type by (auto simp: register_defs)
    subgoal using SPSR_EL2_Type by (auto simp: register_defs)
    subgoal using SPSR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using PFAR_EL2_Type by (auto simp: register_defs)
    subgoal using PFAR_EL1_Type by (auto simp: register_defs)
    subgoal using MFAR_EL3_Type by (auto simp: register_defs)
    subgoal using HPFAR_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using ESR_EL3_Type by (auto simp: register_defs)
    subgoal using ESR_EL2_Type by (auto simp: register_defs)
    subgoal using ESR_EL1_Type by (auto simp: register_defs)
    subgoal using SCTLR_Type by (auto simp: register_defs)
    subgoal using SCTLR_Type by (auto simp: register_defs)
    subgoal using SCTLR_EL3_Type by (auto simp: register_defs)
    subgoal using SCTLR_EL1_Type by (auto simp: register_defs)
    subgoal using HSCTLR_Type by (auto simp: register_defs)
    subgoal using SCTLR_EL2_Type by (auto simp: register_defs)
    subgoal using HCR_Type by (auto simp: register_defs)
    subgoal using DBGOSLSR_Type by (auto simp: register_defs)
    subgoal using OSLSR_EL1_Type by (auto simp: register_defs)
    subgoal using MDSCR_EL1_Type by (auto simp: register_defs)
    subgoal using GCSCR_EL3_Type by (auto simp: register_defs)
    subgoal using GCSCR_EL2_Type by (auto simp: register_defs)
    subgoal using GCSCR_EL1_Type by (auto simp: register_defs)
    subgoal using option_InterruptID by (auto simp: register_defs)
    subgoal using option_InterruptID by (auto simp: register_defs)
    subgoal using DBGPRCR_Type by (auto simp: register_defs)
    subgoal using DBGPRCR_EL1_Type by (auto simp: register_defs)
    subgoal using DBGOSDLR_Type by (auto simp: register_defs)
    subgoal using OSDLR_EL1_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using NSACR_Type by (auto simp: register_defs)
    subgoal using HCPTR_Type by (auto simp: register_defs)
    subgoal using CPACR_Type by (auto simp: register_defs)
    subgoal using CPTR_EL3_Type by (auto simp: register_defs)
    subgoal using CPTR_EL2_Type by (auto simp: register_defs)
    subgoal using CPACR_EL1_Type by (auto simp: register_defs)
    subgoal using GCSPR_EL3_Type by (auto simp: register_defs)
    subgoal using GCSPR_EL2_Type by (auto simp: register_defs)
    subgoal using GCSPR_EL1_Type by (auto simp: register_defs)
    subgoal using GCSPR_EL0_Type by (auto simp: register_defs)
    subgoal using SMCR_EL3_Type by (auto simp: register_defs)
    subgoal using SMCR_EL2_Type by (auto simp: register_defs)
    subgoal using SMCR_EL1_Type by (auto simp: register_defs)
    subgoal using ZCR_EL3_Type by (auto simp: register_defs)
    subgoal using ZCR_EL2_Type by (auto simp: register_defs)
    subgoal using ZCR_EL1_Type by (auto simp: register_defs)
    subgoal using PMBSR_EL1_Type by (auto simp: register_defs)
    subgoal using PMBLIMITR_EL1_Type by (auto simp: register_defs)
    subgoal using PMSCR_EL2_Type by (auto simp: register_defs)
    subgoal using PMSCR_EL1_Type by (auto simp: register_defs)
    subgoal using vector_32_bool by (auto simp: register_defs)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs)
    subgoal using PMSIDR_EL1_Type by (auto simp: register_defs)
    subgoal using vector_64_BRBTGTType by (auto simp: register_defs)
    subgoal using vector_64_BRBSRCType by (auto simp: register_defs)
    subgoal using vector_64_BRBINFType by (auto simp: register_defs)
    subgoal using BRBIDR0_EL1_Type by (auto simp: register_defs)
    subgoal using TCR_EL3_Type by (auto simp: register_defs)
    subgoal using TCR_EL2_Type by (auto simp: register_defs)
    subgoal using TCR_EL1_Type by (auto simp: register_defs)
    subgoal using DSPSR2_Type by (auto simp: register_defs)
    subgoal using DSPSR_Type by (auto simp: register_defs)
    subgoal using DSPSR_EL0_Type by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using EDECR_Type by (auto simp: register_defs)
    subgoal using bitvector_3 by (auto simp: register_defs)
    subgoal using bitvector_8 by (auto simp: register_defs)
    subgoal using bitvector_16 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_2 by (auto simp: register_defs)
    subgoal using bitvector_2 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using CNTHCTL_EL2_Type by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using BRBTS_EL1_Type by (auto simp: register_defs)
    subgoal using BRBFCR_EL1_Type by (auto simp: register_defs)
    subgoal using BRBCR_EL2_Type by (auto simp: register_defs)
    subgoal using BRBCR_EL1_Type by (auto simp: register_defs)
    subgoal using PMOVSSET_EL0_Type by (auto simp: register_defs)
    subgoal using PMICNTR_EL0_Type by (auto simp: register_defs)
    subgoal using SDER_Type by (auto simp: register_defs)
    subgoal using SDER32_EL3_Type by (auto simp: register_defs)
    subgoal using SDER32_EL2_Type by (auto simp: register_defs)
    subgoal using SDCR_Type by (auto simp: register_defs)
    subgoal using PMICFILTR_EL0_Type by (auto simp: register_defs)
    subgoal using vector_31_PMEVTYPER_Type by (auto simp: register_defs)
    subgoal using vector_32_PMEVTYPER_EL0_Type by (auto simp: register_defs)
    subgoal using PMCNTENSET_Type by (auto simp: register_defs)
    subgoal using PMCNTENSET_EL0_Type by (auto simp: register_defs)
    subgoal using PMCCFILTR_Type by (auto simp: register_defs)
    subgoal using PMCCFILTR_EL0_Type by (auto simp: register_defs)
    subgoal using MDCR_EL3_Type by (auto simp: register_defs)
    subgoal using PMOVSR_Type by (auto simp: register_defs)
    subgoal using PMOVSCLR_EL0_Type by (auto simp: register_defs)
    subgoal using PMINTENCLR_Type by (auto simp: register_defs)
    subgoal using PMINTENCLR_EL1_Type by (auto simp: register_defs)
    subgoal using PMCR_Type by (auto simp: register_defs)
    subgoal using PMCR_EL0_Type by (auto simp: register_defs)
    subgoal using PMCNTENCLR_Type by (auto simp: register_defs)
    subgoal using PMCNTENCLR_EL0_Type by (auto simp: register_defs)
    subgoal using EDSCR_Type by (auto simp: register_defs)
    subgoal using MDCCSR_EL0_Type by (auto simp: register_defs)
    subgoal using HDCR_Type by (auto simp: register_defs)
    subgoal using MDCR_EL2_Type by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using CTR_EL0_Type by (auto simp: register_defs)
    subgoal using vector_4_ERRnFR_ElemType by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using FPSCR_Type by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using SCR_Type by (auto simp: register_defs)
    subgoal using SCR_EL3_Type by (auto simp: register_defs)
    subgoal using HCR_EL2_Type by (auto simp: register_defs)
    subgoal using vector_32_bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using vector_7_bitvector_64 by (auto simp: register_defs)
    subgoal using vector_7_bitvector_64 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using BranchType by (auto simp: register_defs)
    subgoal using bitvector_4 by (auto simp: register_defs)
    subgoal using InstrEnc by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bitvector_56 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_24 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_8 by (auto simp: register_defs)
    subgoal using bitvector_2 by (auto simp: register_defs)
    subgoal using OpType by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_16 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using TMState by (auto simp: register_defs)
    subgoal using ICC_PMR_EL1_Type by (auto simp: register_defs)
    subgoal using FPSR_Type by (auto simp: register_defs)
    subgoal using FPCR_Type by (auto simp: register_defs)
    subgoal using bitvector_512 by (auto simp: register_defs)
    subgoal using vector_256_bitvector_2048 by (auto simp: register_defs)
    subgoal using bitvector_256 by (auto simp: register_defs)
    subgoal using vector_16_bitvector_256 by (auto simp: register_defs)
    subgoal using vector_32_bitvector_2048 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bitvector_2 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using vector_5_bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_88 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_64 by (auto simp: register_defs)
    subgoal using bitvector_1 by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using ProcState by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using vector_31_bool by (auto simp: register_defs)
    subgoal using vector_31_int by (auto simp: register_defs)
    subgoal using DormantCtl_Type by (auto simp: register_defs)
    subgoal using Configuration_Type by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using Signal by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using bitvector_32 by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    subgoal using vector_16_bool by (auto simp: register_defs)
    subgoal using vector_259_bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using bool by (auto simp: register_defs)
    subgoal using int by (auto simp: register_defs)
    by auto
qed (auto simp: get_regval_unfold)*)

end
